Q21,1481882.0,->  Hash Semi Join  (cost=2654483.24..4804018.61 rows=1 width=38) (actual time=29591.983..62626.021 rows=1481882 loops=1)
Q21,715199.0,->  Nested Loop  (cost=2654483.24..4804020.57 rows=1 width=34) (actual time=29592.158..69166.982 rows=715199 loops=1)
Q3,314938.2,->  Sort  (cost=2741311.37..2749184.83 rows=3149382 width=20) (actual time=37796.293..37796.295 rows=10 loops=1)
Q18,303258.0,->  GroupAggregate  (cost=10323160.12..11148780.19 rows=30022548 width=39) (actual time=72918.759..72919.046 rows=99 loops=1)
Q18,75833.2,->  Hash Join  (cost=2179484.25..2961937.46 rows=7507492 width=39) (actual time=46837.866..54157.039 rows=99 loops=1)
Q18,75833.2,->  Hash Join  (cost=2110456.25..2742759.62 rows=7507492 width=20) (actual time=45877.271..53192.306 rows=99 loops=1)
Q18,75833.2,->  Hash  (cost=2961937.46..2961937.46 rows=7507492 width=39) (actual time=54157.944..54157.944 rows=99 loops=1)
Q18,43322.5,->  Sort  (cost=10323160.12..10398216.49 rows=30022548 width=39) (actual time=72918.732..72918.768 rows=693 loops=1)
Q18,43322.5,->  Hash Join  (cost=3055781.10..5773496.25 rows=30022548 width=39) (actual time=54571.745..72915.219 rows=693 loops=1)
Q18,41357.8,->  Hash  (cost=2059275.96..2059275.96 rows=4094423 width=4) (actual time=45710.371..45710.371 rows=99 loops=1)
Q18,41357.8,->  HashAggregate  (cost=1967151.44..2018331.73 rows=4094423 width=8) (actual time=38324.746..45709.057 rows=99 loops=1)
Q21,39720.0,->  Nested Loop Anti Join  (cost=2654483.24..4804035.46 rows=1 width=26) (actual time=29599.734..75952.299 rows=39720 loops=1)
Q10,28429.3,->  Sort  (cost=1183121.16..1184542.62 rows=568586 width=175) (actual time=23336.151..23336.156 rows=20 loops=1)
Q9,25416.1,->  Sort  (cost=3460533.87..3460534.20 rows=129 width=46) (actual time=99541.204..100268.434 rows=3278686 loops=1)
Q9,25416.1,->  Nested Loop  (cost=2792773.61..3460529.35 rows=129 width=46) (actual time=37894.072..83387.097 rows=3278686 loops=1)
Q9,25416.1,->  Nested Loop  (cost=2792773.61..3460492.56 rows=129 width=24) (actual time=37893.926..77248.335 rows=3278686 loops=1)
Q9,25416.1,->  Nested Loop  (cost=2792773.61..3460241.25 rows=129 width=24) (actual time=37893.644..53973.083 rows=3278686 loops=1)
Q9,25416.1,->  Merge Join  (cost=2792773.61..3460203.68 rows=129 width=28) (actual time=37893.518..46121.341 rows=3278686 loops=1)
Q7,14578.2,GroupAggregate  (cost=2352727.56..2354622.73 rows=58313 width=64) (actual time=43074.901..43097.090 rows=4 loops=1)
Q2,4633.0,->  Merge Join  (cost=395240.92..818853.41 rows=1 width=190) (actual time=4565.350..6472.959 rows=4633 loops=1)
Q21,4044.0,->  HashAggregate  (cost=4804035.47..4804035.48 rows=1 width=26) (actual time=76000.508..76001.613 rows=4044 loops=1)
Q15,3710.0,->  Subquery Scan on revenue0  (cost=1185942.27..1186025.74 rows=3710 width=12) (actual time=15257.598..15294.650 rows=1 loops=1)
Q15,3710.0,->  Sort  (cost=1186245.70..1186254.97 rows=3710 width=12) (actual time=15294.809..15294.811 rows=1 loops=1)
Q15,3710.0,Merge Join  (cost=2355589.27..2360686.38 rows=3710 width=79) (actual time=15325.918..15325.923 rows=1 loops=1)
Q15,3710.0,->  HashAggregate  (cost=1185942.27..1185988.64 rows=3710 width=12) (actual time=15257.589..15294.640 rows=1 loops=1)
Q8,364.5,Sort  (cost=2140848.37..2140850.19 rows=729 width=38) (actual time=12944.777..12944.778 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=2140800.95..2140813.70 rows=729 width=38) (actual time=12944.717..12944.718 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=4804035.49..4804035.49 rows=1 width=26) (actual time=76004.098..76004.106 rows=100 loops=1)
Q21,100.0,Limit  (cost=4804035.49..4804035.49 rows=1 width=26) (actual time=76004.118..76004.135 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=818853.42..818853.43 rows=1 width=190) (actual time=6477.236..6477.251 rows=100 loops=1)
Q2,100.0,Limit  (cost=818853.42..818853.43 rows=1 width=190) (actual time=6477.238..6477.263 rows=100 loops=1)
Q11,32.8,Sort  (cost=135913.51..136712.11 rows=319441 width=12) (actual time=2859.472..2860.498 rows=9722 loops=1)
Q11,32.8,->  HashAggregate  (cost=52954.85..56947.86 rows=319441 width=12) (actual time=2791.416..2854.158 rows=9722 loops=1)
Q3,27.7,->  HashAggregate  (cost=2641760.54..2673254.36 rows=3149382 width=20) (actual time=37741.015..37777.726 rows=113490 loops=1)
Q15,26.9,->  HashAggregate  (cost=1169260.09..1169297.19 rows=3710 width=12) (actual time=3871.711..3892.391 rows=100000 loops=1)
Q3,10.5,->  Hash Join  (cost=624006.90..2594519.81 rows=3149382 width=20) (actual time=10875.353..37523.595 rows=299681 loops=1)
Q4,10.0,->  Hash  (cost=989360.14..989360.14 rows=1364808 width=4) (actual time=46039.542..46039.542 rows=13767196 loops=1)
Q4,10.0,->  HashAggregate  (cost=975712.06..989360.14 rows=1364808 width=4) (actual time=36353.777..43009.005 rows=13767196 loops=1)
Q16,5.6,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.00..8.45 rows=10 width=4) (actual time=0.087..1.246 rows=56 loops=1)
Q5,5.0,Sort  (cost=2421870.59..2421870.65 rows=25 width=34) (actual time=61914.933..61914.934 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2421869.76..2421870.01 rows=25 width=34) (actual time=61914.832..61914.836 rows=5 loops=1)
Q4,5.0,Sort  (cost=1287177.37..1287177.38 rows=1 width=16) (actual time=53621.315..53621.316 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1287177.35..1287177.36 rows=1 width=16) (actual time=53621.140..53621.141 rows=5 loops=1)
Q21,5.0,->  Index Scan using lineitem_l_orderkey_idx on lineitem l3  (cost=0.00..7.42 rows=5 width=8) (actual time=0.009..0.009 rows=1 loops=715199)
Q13,4.4,Sort  (cost=921619.37..921619.87 rows=200 width=8) (actual time=31873.511..31873.513 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=921609.73..921611.73 rows=200 width=8) (actual time=31873.410..31873.418 rows=45 loops=1)
Q17,3.6,->  Nested Loop  (cost=140.78..401232.58 rows=19995 width=4) (actual time=1.929..409.543 rows=5489 loops=1)
Q4,3.3,->  Hash Join  (cost=1018651.87..1286391.24 rows=157222 width=16) (actual time=46262.798..53448.402 rows=527086 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=140.78..196.77 rows=10 width=12) (actual time=0.004..0.005 rows=3 loops=2035)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..575.31 rows=1 width=8) (actual time=0.305..0.354 rows=3 loops=21871)
Q22,2.3,Sort  (cost=691152.99..691153.00 rows=3 width=20) (actual time=9201.360..9201.360 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=638271.49..638271.53 rows=3 width=20) (actual time=9201.240..9201.242 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.00..49.84 rows=1 width=4) (actual time=0.026..0.039 rows=2 loops=6341)
Q20,2.0,->  Nested Loop  (cost=0.00..12734689.26 rows=29235 width=4) (actual time=0.656..8347.330 rows=59654 loops=1)
Q16,2.0,->  Sort  (cost=446206.66..447678.99 rows=588934 width=40) (actual time=34166.163..34297.430 rows=1185486 loops=1)
Q16,2.0,->  Hash Join  (cost=57916.63..389763.97 rows=588934 width=40) (actual time=871.375..7322.924 rows=1185486 loops=1)
Q12,2.0,Sort  (cost=980869.59..980869.60 rows=1 width=27) (actual time=23070.156..23070.157 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=980869.57..980869.58 rows=1 width=27) (actual time=23069.990..23069.991 rows=2 loops=1)
Q10,2.0,->  Merge Join  (cost=329577.96..1059871.44 rows=568586 width=12) (actual time=2406.953..17405.907 rows=1147917 loops=1)
Q10,2.0,->  Hash Join  (cost=398607.52..1148090.78 rows=568586 width=175) (actual time=3817.581..20960.220 rows=1147917 loops=1)
Q10,2.0,->  Hash Join  (cost=398605.96..1140271.16 rows=568586 width=153) (actual time=3817.542..20580.366 rows=1147917 loops=1)
Q21,1.9,->  Hash Join  (cost=2441.58..1902532.27 rows=799562 width=34) (actual time=17.281..24625.850 rows=1536589 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.48..270966.48 rows=4000000 width=8) (actual time=1.346..3712.655 rows=7995520 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.00..925674.48 rows=20015032 width=4) (actual time=0.138..18283.958 rows=37967116 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817038.70 rows=20015032 width=8) (actual time=0.015..17585.437 rows=37967116 loops=1)
Q15,1.7,->  Index Scan using pk_supplier on supplier  (cost=0.00..4791.46 rows=100000 width=71) (actual time=0.049..25.855 rows=55988 loops=1)
Q20,1.5,Sort  (cost=12740177.87..12740180.80 rows=1169 width=51) (actual time=8494.678..8494.772 rows=1801 loops=1)
Q20,1.5,->  Nested Loop  (cost=12735712.48..12740118.31 rows=1169 width=51) (actual time=8411.372..8485.847 rows=1801 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=12735712.48..12739751.56 rows=29235 width=55) (actual time=8411.324..8481.603 rows=45172 loops=1)
Q20,1.5,->  Hash  (cost=12735347.04..12735347.04 rows=29235 width=4) (actual time=8411.286..8411.286 rows=45172 loops=1)
Q20,1.5,->  HashAggregate  (cost=12734762.34..12735054.69 rows=29235 width=4) (actual time=8392.898..8402.611 rows=45172 loops=1)
Q1,1.5,Sort  (cost=4203642.88..4203642.90 rows=6 width=20) (actual time=79390.858..79390.859 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4203642.70..4203642.80 rows=6 width=20) (actual time=79390.705..79390.707 rows=4 loops=1)
Q10,1.4,->  HashAggregate  (cost=1162305.43..1167991.29 rows=568586 width=175) (actual time=22844.101..23193.869 rows=381780 loops=1)
Q9,1.3,GroupAggregate  (cost=3460533.87..3460538.39 rows=129 width=46) (actual time=99552.667..102407.421 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2871.27 rows=139735 width=0) (actual time=529.151..529.151 rows=191102 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2906.20..41852.24 rows=139735 width=24) (actual time=536.516..682.243 rows=191102 loops=1)
Q19,1.1,->  Nested Loop  (cost=13469.99..422967.30 rows=1016 width=8) (actual time=104.050..799.910 rows=1156 loops=1)
Q9,1.0,->  Sort  (cost=2792773.61..2800887.58 rows=3245588 width=28) (actual time=37893.405..39519.312 rows=3278686 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=108105 width=4) (actual time=0.013..828.528 rows=109206 loops=1)
Q9,1.0,->  Seq Scan on lineitem  (cost=0.00..1666925.96 rows=60045096 width=24) (actual time=0.003..11915.099 rows=60045669 loops=1)
Q9,1.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..603091.29 rows=8000000 width=12) (actual time=0.010..3987.084 rows=7999877 loops=1)
Q9,1.0,->  Hash Join  (cost=66873.31..2441762.48 rows=3245588 width=28) (actual time=856.402..35181.102 rows=3278686 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=108105 width=4) (actual time=856.248..856.248 rows=109206 loops=1)
Q8,1.0,->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=33.712..490.352 rows=299838 loops=1)
Q8,1.0,->  Nested Loop  (cost=494549.32..2140326.51 rows=23722 width=38) (actual time=9037.362..12913.351 rows=24262 loops=1)
Q8,1.0,->  Nested Loop  (cost=494549.32..2133560.99 rows=23722 width=16) (actual time=9037.317..12854.050 rows=24262 loops=1)
Q8,1.0,->  Nested Loop  (cost=0.00..1629894.76 rows=392485 width=16) (actual time=0.693..2974.002 rows=398392 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..120.88 rows=31 width=20) (actual time=0.022..0.206 rows=30 loops=13251)
Q8,1.0,->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..45565.10 rows=13073 width=4) (actual time=0.620..126.714 rows=13251 loops=1)
Q8,1.0,->  Hash Join  (cost=494549.32..2126644.03 rows=23753 width=16) (actual time=9037.265..12684.815 rows=24262 loops=1)
Q8,1.0,->  Hash Join  (cost=135391.26..483190.61 rows=908697 width=8) (actual time=1772.139..8750.898 rows=911520 loops=1)
Q8,1.0,->  Hash  (cost=483190.61..483190.61 rows=908697 width=8) (actual time=9035.672..9035.672 rows=911520 loops=1)
Q8,1.0,->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=562.604..562.604 rows=299838 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..95224.77 rows=4543487 width=0) (actual time=1128.171..1128.171 rows=4561961 loops=1)
Q8,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=13.838..13.838 rows=59968 loops=5)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=96360.64..418034.94 rows=4543487 width=12) (actual time=1209.296..3437.713 rows=4561961 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=19.853..87.580 rows=59968 loops=5)
Q7,1.0,->  Sort  (cost=2352727.56..2352873.34 rows=58313 width=64) (actual time=43067.408..43070.959 rows=58201 loops=1)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=8) (actual time=0.021..3225.561 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=905.09..14139.26 rows=119904 width=60) (actual time=16.259..257.141 rows=119921 loops=1)
Q7,1.0,->  Hash Join  (cost=894575.28..2348111.64 rows=58313 width=64) (actual time=15890.446..42859.857 rows=58201 loops=1)
Q7,1.0,->  Hash Join  (cost=889896.28..2313363.60 rows=1459717 width=72) (actual time=15826.521..40867.762 rows=1461386 loops=1)
Q7,1.0,->  Hash Join  (cost=15638.06..487618.47 rows=1200238 width=60) (actual time=296.255..9364.046 rows=1201553 loops=1)
Q7,1.0,->  Hash  (cost=487618.47..487618.47 rows=1200238 width=60) (actual time=9816.946..9816.946 rows=1201553 loops=1)
Q7,1.0,->  Hash  (cost=14139.26..14139.26 rows=119904 width=60) (actual time=296.108..296.108 rows=119921 loops=1)
Q7,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..382709.57 rows=18261074 width=0) (actual time=5629.446..5629.446 rows=18248249 loops=1)
Q7,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=10.443..10.443 rows=59960 loops=2)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=387274.84..1727665.95 rows=18261074 width=20) (actual time=6008.682..19695.237 rows=18248249 loops=1)
Q7,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=16.133..118.152 rows=59960 loops=2)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..191263.72 rows=9126089 width=0) (actual time=2854.748..2854.748 rows=9108147 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=191454.69..1463266.70 rows=763895 width=8) (actual time=3207.355..14748.516 rows=760518 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1666925.96 rows=60045096 width=16) (actual time=0.004..12600.437 rows=60045669 loops=1)
Q5,1.0,->  Nested Loop  (cost=905.09..35292.22 rows=300000 width=38) (actual time=16.530..595.801 rows=299838 loops=1)
Q5,1.0,->  Hash Join  (cost=87381.97..388197.50 rows=455841 width=38) (actual time=1237.610..6623.432 rows=454657 loops=1)
Q5,1.0,->  Hash Join  (cost=398574.51..2421141.56 rows=72820 width=34) (actual time=6871.044..61842.767 rows=73066 loops=1)
Q5,1.0,->  Hash Join  (cost=393895.51..2379276.08 rows=1822914 width=46) (actual time=6809.511..57672.586 rows=1817095 loops=1)
Q5,1.0,->  Hash  (cost=388197.50..388197.50 rows=455841 width=38) (actual time=6808.930..6808.930 rows=454657 loops=1)
Q5,1.0,->  Hash  (cost=35292.22..35292.22 rows=300000 width=38) (actual time=686.913..686.913 rows=299838 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..47769.96 rows=2279206 width=0) (actual time=481.174..481.174 rows=2278245 loops=1)
Q5,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=9.911..9.911 rows=59968 loops=5)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=48339.76..336049.85 rows=2279206 width=8) (actual time=550.509..3406.073 rows=2278245 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=15.520..107.061 rows=59968 loops=5)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12087.50 rows=576560 width=0) (actual time=155.396..155.396 rows=574844 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=12231.64..274402.04 rows=576560 width=20) (actual time=221.918..1793.200 rows=574844 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..441209.30 rows=7303838 width=16) (actual time=0.014..4679.176 rows=7265540 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1817038.70 rows=32528103 width=12) (actual time=0.037..18119.061 rows=32491428 loops=1)
Q3,1.0,->  Hash Join  (cost=49660.32..605834.95 rows=1453756 width=12) (actual time=438.980..10420.296 rows=1452519 loops=1)
Q3,1.0,->  Hash  (cost=605834.95..605834.95 rows=1453756 width=12) (actual time=10872.748..10872.748 rows=1452519 loops=1)
Q3,1.0,->  Hash  (cost=45928.32..45928.32 rows=298560 width=4) (actual time=438.703..438.703 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6843.68 rows=298560 width=0) (actual time=59.029..59.029 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6918.32..45928.32 rows=298560 width=4) (actual time=67.709..370.942 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=4) (actual time=0.026..4483.977 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=4) (actual time=8285.136..8285.136 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=594265.34..637829.54 rows=58926 width=20) (actual time=8832.079..9181.720 rows=63669 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6545.69 rows=381301 width=0) (actual time=90.007..90.007 rows=382551 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer  (cost=6641.02..51928.17 rows=381301 width=4) (actual time=98.395..405.748 rows=382551 loops=1)
Q21,1.0,->  Seq Scan on lineitem l2  (cost=0.00..1666925.96 rows=60045096 width=8) (actual time=0.006..16097.192 rows=60045669 loops=1)
Q21,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=30) (actual time=1.160..16.008 rows=4044 loops=1)
Q21,1.0,->  Hash  (cost=2391.58..2391.58 rows=4000 width=30) (actual time=17.243..17.243 rows=4044 loops=1)
Q21,1.0,->  Hash  (cost=1666925.96..1666925.96 rows=60045096 width=8) (actual time=29555.915..29555.915 rows=60045669 loops=1)
Q21,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=0.829..0.829 rows=4044 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=34) (actual time=1.146..15.081 rows=4044 loops=1)
Q2,1.0,->  Sort  (cost=395240.86..399233.87 rows=1597205 width=168) (actual time=4564.533..4802.382 rows=1603983 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..5806.62 rows=20000 width=164) (actual time=0.044..96.573 rows=20051 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..230671.90 rows=1597205 width=168) (actual time=0.053..3508.549 rows=1604080 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=7897 width=30) (actual time=0.072..982.106 rows=7885 loops=1)
Q20,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=22021 width=4) (actual time=0.011..570.006 rows=21871 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8392.74 rows=400027 width=0) (actual time=54.980..54.980 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4193.94 rows=199747 width=0) (actual time=34.105..34.105 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.45 rows=8095 width=0) (actual time=2.983..2.983 rows=8160 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.25 rows=8075 width=0) (actual time=2.796..2.796 rows=8077 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.77 rows=7928 width=0) (actual time=3.458..3.458 rows=8091 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=13469.99..37746.33 rows=10475 width=30) (actual time=103.162..210.593 rows=10516 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=16) (actual time=0.006..3497.721 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1666925.96 rows=60045096 width=8) (actual time=0.012..11193.648 rows=60045669 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1666925.96 rows=60045096 width=8) (actual time=0.009..13381.684 rows=60045669 loops=1)
Q18,1.0,Limit  (cost=10323160.12..10323162.87 rows=100 width=39) (actual time=72918.764..72919.061 rows=99 loops=1)
Q17,1.0,->  Index Only Scan using part_p_container_p_brand_p_partkey_idx on part  (cost=0.00..7889.80 rows=1998 width=4) (actual time=0.247..20.177 rows=2035 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.024..0.178 rows=30 loops=2035)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.024..0.178 rows=30 loops=2035)
Q16,1.0,Sort  (cost=455891.63..455960.94 rows=27726 width=40) (actual time=35113.444..35115.135 rows=27838 loops=1)
Q16,1.0,->  Hash  (cost=54211.36..54211.36 rows=295743 width=40) (actual time=869.688..869.688 rows=296545 loops=1)
Q16,1.0,->  GroupAggregate  (cost=446206.66..453845.59 rows=27726 width=40) (actual time=34166.265..34782.420 rows=27838 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5651.43 rows=318560 width=0) (actual time=77.283..77.283 rows=319303 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5725.36..54211.36 rows=295743 width=40) (actual time=86.994..765.621 rows=296545 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..46621.74 rows=2224291 width=0) (actual time=692.305..692.305 rows=2249015 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..46621.74 rows=2224291 width=0) (actual time=572.925..572.925 rows=2249015 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47177.81..1147017.18 rows=2224291 width=12) (actual time=909.301..8319.938 rows=2249015 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47177.81..1147017.18 rows=2224291 width=12) (actual time=788.592..2660.085 rows=2249015 loops=1)
Q14,1.0,->  Hash Join  (cost=101646.75..1153011.09 rows=759992 width=29) (actual time=1613.574..7436.467 rows=773681 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..15934.75 rows=759992 width=0) (actual time=216.871..216.871 rows=773681 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=16124.75..1050389.27 rows=759992 width=12) (actual time=344.091..5027.584 rows=773681 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..441209.30 rows=14954897 width=8) (actual time=0.041..8182.004 rows=14853371 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..809335.24 rows=14954897 width=8) (actual time=742.436..23306.659 rows=15353394 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=20) (actual time=0.011..4454.855 rows=15015000 loops=1)
Q12,1.0,->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.00..375405.16 rows=289339 width=15) (actual time=0.216..12993.894 rows=311582 loops=1)
Q12,1.0,->  Hash Join  (cost=591359.14..975806.14 rows=289339 width=27) (actual time=8692.195..22785.493 rows=311582 loops=1)
Q12,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=20) (actual time=8683.518..8683.518 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=8) (actual time=0.922..586.325 rows=317840 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=12) (actual time=1.097..1957.251 rows=317840 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.058..25.796 rows=3973 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=0.907..6.771 rows=3973 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=0.766..0.766 rows=3973 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=0.624..0.624 rows=3973 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.036..24.583 rows=3973 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=0.888..6.108 rows=3973 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817038.70 rows=59665100 width=20) (actual time=0.043..19441.280 rows=59667917 loops=1)
Q10,1.0,->  Sort  (cost=329570.50..331011.90 rows=576560 width=8) (actual time=2406.786..2538.157 rows=574235 loops=1)
Q10,1.0,->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.00..684713.99 rows=14807321 width=12) (actual time=0.086..12980.182 rows=14822991 loops=1)
Q10,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12087.50 rows=576560 width=0) (actual time=127.314..127.314 rows=574235 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=12231.64..274402.04 rows=576560 width=8) (actual time=186.797..2226.638 rows=574235 loops=1)
Q21,,->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.00..1.94 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1481882)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..36.77 rows=1 width=16) (actual time=0.051..0.053 rows=0 loops=10516)
Q19,,->  BitmapOr  (cost=13469.99..13469.99 rows=10485 width=0) (actual time=101.558..101.558 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8688.68..8688.68 rows=1619 width=0) (actual time=59.435..59.435 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4488.20..4488.20 rows=792 width=0) (actual time=39.089..39.089 rows=0 loops=1)
