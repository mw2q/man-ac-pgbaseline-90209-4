Q21,1468912.0,->  Hash Semi Join  (cost=2680954.36..4851944.40 rows=1 width=38) (actual time=46729.707..103473.770 rows=1468912 loops=1)
Q21,708122.0,->  Nested Loop  (cost=2680954.36..4851946.39 rows=1 width=34) (actual time=46730.168..119326.948 rows=708122 loops=1)
Q18,401498.3,->  GroupAggregate  (cost=10353937.73..11182028.13 rows=30112378 width=39) (actual time=114251.395..114251.631 rows=75 loops=1)
Q3,321842.6,->  Sort  (cost=2778520.09..2786566.15 rows=3218426 width=20) (actual time=73883.368..73883.372 rows=10 loops=1)
Q18,100399.5,->  Hash Join  (cost=2185370.16..2970043.31 rows=7529968 width=39) (actual time=74711.543..84333.609 rows=75 loops=1)
Q18,100399.5,->  Hash Join  (cost=2116342.16..2750415.95 rows=7529968 width=20) (actual time=73245.729..82865.059 rows=75 loops=1)
Q18,100399.5,->  Hash  (cost=2970043.31..2970043.31 rows=7529968 width=39) (actual time=84334.256..84334.256 rows=75 loops=1)
Q18,57356.9,->  Sort  (cost=10353937.73..10429218.68 rows=30112378 width=39) (actual time=114251.375..114251.399 rows=525 loops=1)
Q18,57356.9,->  Hash Join  (cost=3064167.91..5790014.72 rows=30112378 width=39) (actual time=85101.078..114248.666 rows=525 loops=1)
Q18,54592.3,->  Hash  (cost=2065161.87..2065161.87 rows=4094423 width=4) (actual time=73042.208..73042.208 rows=75 loops=1)
Q18,54592.3,->  HashAggregate  (cost=1973037.36..2024217.64 rows=4094423 width=8) (actual time=64315.906..73041.541 rows=75 loops=1)
Q21,39471.0,->  Nested Loop Anti Join  (cost=2680954.36..4851961.53 rows=1 width=26) (actual time=46730.531..137137.236 rows=39471 loops=1)
Q10,28299.6,->  Sort  (cost=1195415.39..1196830.37 rows=565993 width=175) (actual time=35299.249..35299.254 rows=20 loops=1)
Q9,21555.5,->  Sort  (cost=3624364.53..3624364.91 rows=151 width=46) (actual time=223218.584..224188.508 rows=3254895 loops=1)
Q9,21555.5,->  Nested Loop  (cost=2952327.39..3624359.06 rows=151 width=46) (actual time=108801.953..204011.224 rows=3254895 loops=1)
Q9,21555.5,->  Nested Loop  (cost=2952327.39..3624316.00 rows=151 width=24) (actual time=108801.828..188730.824 rows=3254895 loops=1)
Q9,21555.5,->  Nested Loop  (cost=2952327.39..3624019.34 rows=151 width=24) (actual time=108801.691..138001.848 rows=3254895 loops=1)
Q9,21555.5,->  Merge Join  (cost=2952327.39..3623975.37 rows=151 width=28) (actual time=108801.636..120647.762 rows=3254895 loops=1)
Q7,14607.5,GroupAggregate  (cost=2356991.11..2358890.09 rows=58430 width=64) (actual time=82526.631..82555.555 rows=4 loops=1)
Q2,4735.0,->  Merge Join  (cost=395240.92..822893.13 rows=1 width=190) (actual time=8920.665..12563.984 rows=4735 loops=1)
Q21,4009.0,->  HashAggregate  (cost=4851961.54..4851961.55 rows=1 width=26) (actual time=137291.461..137293.791 rows=4009 loops=1)
Q15,3790.0,->  Subquery Scan on revenue12  (cost=1204784.23..1204869.51 rows=3790 width=12) (actual time=26296.789..26303.649 rows=1 loops=1)
Q15,3790.0,->  Sort  (cost=1205094.78..1205104.26 rows=3790 width=12) (actual time=26303.692..26303.692 rows=1 loops=1)
Q15,3790.0,Merge Join  (cost=2392684.40..2397782.72 rows=3790 width=79) (actual time=26356.746..26356.748 rows=1 loops=1)
Q15,3790.0,->  HashAggregate  (cost=1204784.23..1204831.61 rows=3790 width=12) (actual time=26296.786..26303.643 rows=1 loops=1)
Q8,364.5,Sort  (cost=2161564.44..2161566.26 rows=729 width=38) (actual time=31429.205..31429.206 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=2161517.02..2161529.78 rows=729 width=38) (actual time=31429.119..31429.121 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=4851961.56..4851961.56 rows=1 width=26) (actual time=137297.882..137297.890 rows=100 loops=1)
Q21,100.0,Limit  (cost=4851961.56..4851961.56 rows=1 width=26) (actual time=137297.886..137297.906 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=822893.14..822893.14 rows=1 width=190) (actual time=12572.883..12572.903 rows=100 loops=1)
Q2,100.0,Limit  (cost=822893.14..822893.14 rows=1 width=190) (actual time=12572.887..12572.918 rows=100 loops=1)
Q11,36.7,Sort  (cost=135913.51..136712.11 rows=319441 width=12) (actual time=3679.356..3680.801 rows=8690 loops=1)
Q11,36.7,->  HashAggregate  (cost=52954.85..56947.86 rows=319441 width=12) (actual time=3491.825..3671.461 rows=8690 loops=1)
Q3,28.3,->  HashAggregate  (cost=2676786.80..2708971.06 rows=3218426 width=20) (actual time=73801.610..73861.813 rows=113445 loops=1)
Q15,26.3,->  HashAggregate  (cost=1187504.34..1187542.24 rows=3790 width=12) (actual time=13287.927..13343.205 rows=100000 loops=1)
Q3,10.7,->  Hash Join  (cost=633283.88..2628510.41 rows=3218426 width=20) (actual time=23746.680..73318.961 rows=299374 loops=1)
Q4,10.0,->  Hash  (cost=997137.04..997137.04 rows=1364808 width=4) (actual time=62247.928..62247.928 rows=13767115 loops=1)
Q4,10.0,->  HashAggregate  (cost=983488.96..997137.04 rows=1364808 width=4) (actual time=48470.008..57508.653 rows=13767115 loops=1)
Q16,5.6,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.00..8.45 rows=10 width=4) (actual time=0.133..0.970 rows=56 loops=1)
Q5,5.0,Sort  (cost=2443670.53..2443670.60 rows=25 width=34) (actual time=73642.854..73642.855 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2443669.70..2443669.95 rows=25 width=34) (actual time=73642.755..73642.757 rows=5 loops=1)
Q4,5.0,Sort  (cost=1297477.04..1297477.04 rows=1 width=16) (actual time=74046.478..74046.479 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1297477.02..1297477.03 rows=1 width=16) (actual time=74046.351..74046.355 rows=5 loops=1)
Q21,5.0,->  Index Scan using lineitem_l_orderkey_idx on lineitem l3  (cost=0.00..7.55 rows=5 width=8) (actual time=0.024..0.024 rows=1 loops=708122)
Q13,4.4,Sort  (cost=928361.43..928361.93 rows=200 width=8) (actual time=60622.633..60622.637 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=928351.79..928353.79 rows=200 width=8) (actual time=60622.514..60622.529 rows=45 loops=1)
Q17,3.7,->  Nested Loop  (cost=140.78..396023.58 rows=19794 width=4) (actual time=1.313..1057.158 rows=5282 loops=1)
Q4,3.3,->  Hash Join  (cost=1026816.10..1296690.91 rows=157222 width=16) (actual time=62670.663..73796.616 rows=526345 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=140.78..196.77 rows=10 width=12) (actual time=0.009..0.011 rows=3 loops=2013)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..575.31 rows=1 width=8) (actual time=0.495..0.639 rows=3 loops=21903)
Q22,2.3,Sort  (cost=693523.01..693523.02 rows=3 width=20) (actual time=14797.597..14797.598 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=640636.06..640636.11 rows=3 width=20) (actual time=14797.527..14797.530 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.00..49.84 rows=1 width=4) (actual time=0.059..0.089 rows=2 loops=6408)
Q20,2.0,->  Nested Loop  (cost=0.00..12734689.26 rows=29235 width=4) (actual time=0.910..15371.185 rows=59761 loops=1)
Q16,2.0,->  Sort  (cost=446355.06..447830.12 rows=590022 width=40) (actual time=48485.592..48781.272 rows=1188473 loops=1)
Q16,2.0,->  Hash Join  (cost=57942.03..389800.25 rows=590022 width=40) (actual time=1572.576..16305.146 rows=1188473 loops=1)
Q12,2.0,Sort  (cost=984854.78..984854.79 rows=1 width=27) (actual time=34542.190..34542.191 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=984854.76..984854.77 rows=1 width=27) (actual time=34541.986..34541.987 rows=2 loops=1)
Q10,2.0,->  Merge Join  (cost=332792.29..1072412.94 rows=565993 width=12) (actual time=3049.606..26350.618 rows=1136754 loops=1)
Q10,2.0,->  Hash Join  (cost=401821.85..1160544.76 rows=565993 width=175) (actual time=4869.210..31122.761 rows=1136754 loops=1)
Q10,2.0,->  Hash Join  (cost=401820.29..1152760.80 rows=565993 width=153) (actual time=4869.144..30416.768 rows=1136754 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.48..270966.48 rows=4000000 width=8) (actual time=1.027..6831.337 rows=7995520 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.00..933052.53 rows=20174574 width=4) (actual time=0.129..21991.148 rows=37965325 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1835175.44 rows=20214812 width=8) (actual time=0.061..28928.841 rows=37965800 loops=1)
Q21,1.8,->  Hash Join  (cost=2441.58..1921497.99 rows=807543 width=34) (actual time=35.437..42779.749 rows=1523692 loops=1)
Q20,1.5,Sort  (cost=12740177.87..12740180.80 rows=1169 width=51) (actual time=15679.476..15679.621 rows=1848 loops=1)
Q20,1.5,->  Nested Loop  (cost=12735712.48..12740118.31 rows=1169 width=51) (actual time=15534.433..15669.934 rows=1848 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=12735712.48..12739751.56 rows=29235 width=55) (actual time=15534.126..15664.951 rows=45061 loops=1)
Q20,1.5,->  Hash  (cost=12735347.04..12735347.04 rows=29235 width=4) (actual time=15534.031..15534.031 rows=45061 loops=1)
Q20,1.5,->  HashAggregate  (cost=12734762.34..12735054.69 rows=29235 width=4) (actual time=15498.006..15523.242 rows=45061 loops=1)
Q1,1.5,Sort  (cost=4180648.28..4180648.30 rows=6 width=20) (actual time=108934.063..108934.063 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4180648.10..4180648.21 rows=6 width=20) (actual time=108933.971..108933.974 rows=4 loops=1)
Q10,1.4,->  HashAggregate  (cost=1174694.59..1180354.52 rows=565993 width=175) (actual time=34831.171..35150.150 rows=378804 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2871.83 rows=139790 width=0) (actual time=1069.781..1069.781 rows=190573 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2906.77..41854.26 rows=139790 width=24) (actual time=1082.133..1740.771 rows=190573 loops=1)
Q18,1.3,Limit  (cost=10353937.73..10353940.48 rows=100 width=39) (actual time=114251.399..114251.642 rows=75 loops=1)
Q9,1.1,->  Sort  (cost=2952327.39..2961847.26 rows=3807947 width=28) (actual time=108801.543..110939.118 rows=3254895 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=126135 width=4) (actual time=0.019..1704.203 rows=108543 loops=1)
Q9,1.1,->  Hash Join  (cost=67098.69..2536107.70 rows=3807947 width=28) (actual time=1779.686..105330.228 rows=3254895 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=126135 width=4) (actual time=1779.095..1779.095 rows=108543 loops=1)
Q9,1.1,GroupAggregate  (cost=3624364.53..3624369.81 rows=151 width=46) (actual time=223235.741..226514.241 rows=175 loops=1)
Q9,1.0,->  Seq Scan on lineitem  (cost=0.00..1676193.13 rows=60378913 width=24) (actual time=0.054..18124.270 rows=59985687 loops=1)
Q9,1.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..603091.29 rows=8000000 width=12) (actual time=0.009..5810.487 rows=7999977 loops=1)
Q8,1.0,->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=37.522..1097.853 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=497357.84..2161034.60 rows=24121 width=38) (actual time=23577.527..31360.919 rows=24669 loops=1)
Q8,1.0,->  Nested Loop  (cost=497357.84..2154155.29 rows=24121 width=16) (actual time=23577.452..31193.856 rows=24669 loops=1)
Q8,1.0,->  Nested Loop  (cost=0.00..1647527.05 rows=399090 width=16) (actual time=0.397..5910.149 rows=404514 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..120.77 rows=31 width=20) (actual time=0.041..0.405 rows=30 loops=13487)
Q8,1.0,->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..46027.80 rows=13227 width=4) (actual time=0.299..240.970 rows=13487 loops=1)
Q8,1.0,->  Hash Join  (cost=497357.84..2147121.87 rows=24153 width=16) (actual time=23577.394..30851.193 rows=24669 loops=1)
Q8,1.0,->  Hash Join  (cost=136407.66..485942.44 rows=913232 width=8) (actual time=6820.328..22903.101 rows=913799 loops=1)
Q8,1.0,->  Hash  (cost=485942.44..485942.44 rows=913232 width=8) (actual time=23575.790..23575.790 rows=913799 loops=1)
Q8,1.0,->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=2932.597..2932.597 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..96235.50 rows=4566158 width=0) (actual time=3771.797..3771.797 rows=4584480 loops=1)
Q8,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=22.437..22.437 rows=60193 loops=5)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=97377.04..420656.41 rows=4566158 width=12) (actual time=3887.433..8023.730 rows=4561664 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=33.062..201.684 rows=60193 loops=5)
Q7,1.0,->  Sort  (cost=2356991.11..2357137.19 rows=58430 width=64) (actual time=82516.636..82523.773 rows=59170 loops=1)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=8) (actual time=0.016..4699.185 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=905.09..14139.26 rows=119904 width=60) (actual time=21.192..642.555 rows=120368 loops=1)
Q7,1.0,->  Hash Join  (cost=895921.59..2352365.09 rows=58430 width=64) (actual time=42260.302..82236.290 rows=59170 loops=1)
Q7,1.0,->  Hash Join  (cost=891242.59..2317556.90 rows=1462637 width=72) (actual time=42162.273..78928.677 rows=1466238 loops=1)
Q7,1.0,->  Hash Join  (cost=15638.06..488560.48 rows=1202633 width=60) (actual time=747.077..23670.510 rows=1203543 loops=1)
Q7,1.0,->  Hash  (cost=488560.48..488560.48 rows=1202633 width=60) (actual time=25616.804..25616.804 rows=1203543 loops=1)
Q7,1.0,->  Hash  (cost=14139.26..14139.26 rows=119904 width=60) (actual time=746.867..746.867 rows=120368 loops=1)
Q7,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..383074.80 rows=18297597 width=0) (actual time=15714.354..15714.354 rows=18284460 loops=1)
Q7,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=17.953..17.953 rows=60184 loops=2)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=387649.20..1730721.15 rows=18297597 width=20) (actual time=16544.388..34171.006 rows=18248203 loops=1)
Q7,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=26.668..298.672 rows=60184 loops=2)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..191840.83 rows=9177400 width=0) (actual time=7246.618..7246.618 rows=9156668 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=191937.07..1470226.57 rows=384954 width=8) (actual time=7849.024..26425.910 rows=381038 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1681885.66 rows=60583966 width=16) (actual time=0.050..17991.604 rows=60044176 loops=1)
Q5,1.0,->  Nested Loop  (cost=905.09..35292.22 rows=300000 width=38) (actual time=32.681..1542.380 rows=300270 loops=1)
Q5,1.0,->  Hash Join  (cost=88755.79..392064.35 rows=457904 width=38) (actual time=3295.075..12712.150 rows=456165 loops=1)
Q5,1.0,->  Hash Join  (cost=402467.15..2442938.22 rows=73148 width=34) (actual time=13157.343..73481.623 rows=73642 loops=1)
Q5,1.0,->  Hash Join  (cost=397788.15..2400905.00 rows=1831137 width=46) (actual time=13034.152..69824.210 rows=1823478 loops=1)
Q5,1.0,->  Hash  (cost=392064.35..392064.35 rows=457904 width=38) (actual time=13033.555..13033.555 rows=456165 loops=1)
Q5,1.0,->  Hash  (cost=35292.22..35292.22 rows=300000 width=38) (actual time=1740.248..1740.248 rows=300270 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..49141.20 rows=2289521 width=0) (actual time=1408.175..1408.175 rows=2298387 loops=1)
Q5,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=19.847..19.847 rows=60054 loops=5)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=49713.58..339857.39 rows=2289521 width=8) (actual time=1554.491..4939.339 rows=2277992 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=29.144..286.326 rows=60054 loops=5)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12473.66 rows=581168 width=0) (actual time=313.449..313.449 rows=579031 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=12618.96..276884.48 rows=581168 width=20) (actual time=420.764..2282.575 rows=574502 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..446936.69 rows=7479557 width=16) (actual time=0.014..5776.792 rows=7340960 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1840625.83 rows=32644384 width=12) (actual time=0.037..28063.783 rows=32189575 loops=1)
Q3,1.0,->  Hash Join  (cost=49763.39..614539.49 rows=1499551 width=12) (actual time=495.928..22998.521 rows=1468635 loops=1)
Q3,1.0,->  Hash  (cost=614539.49..614539.49 rows=1499551 width=12) (actual time=23744.114..23744.114 rows=1468635 loops=1)
Q3,1.0,->  Hash  (cost=46004.26..46004.26 rows=300730 width=4) (actual time=495.733..495.733 rows=299496 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6891.96 rows=300730 width=0) (actual time=65.627..65.627 rows=299496 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6967.14..46004.26 rows=300730 width=4) (actual time=75.085..412.771 rows=299496 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=4) (actual time=0.037..5607.424 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=4) (actual time=12645.537..12645.537 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=596626.47..640193.94 rows=58949 width=20) (actual time=13739.295..14754.913 rows=63596 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6546.79 rows=381451 width=0) (actual time=138.243..138.243 rows=381888 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer  (cost=6642.16..51933.24 rows=381451 width=4) (actual time=150.644..901.007 rows=381888 loops=1)
Q21,1.0,->  Seq Scan on lineitem l2  (cost=0.00..1683564.35 rows=60644435 width=8) (actual time=0.021..25126.789 rows=60044872 loops=1)
Q21,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=30) (actual time=1.832..33.060 rows=4010 loops=1)
Q21,1.0,->  Hash  (cost=2391.58..2391.58 rows=4000 width=30) (actual time=35.240..35.240 rows=4010 loops=1)
Q21,1.0,->  Hash  (cost=1683564.35..1683564.35 rows=60644435 width=8) (actual time=46669.777..46669.777 rows=60044872 loops=1)
Q21,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.401..1.401 rows=4010 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=34) (actual time=1.810..31.384 rows=4010 loops=1)
Q2,1.0,->  Sort  (cost=395240.86..399233.87 rows=1597205 width=168) (actual time=8920.239..9417.519 rows=1601867 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..5806.62 rows=20000 width=164) (actual time=0.061..177.598 rows=20033 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..230671.90 rows=1597205 width=168) (actual time=0.126..7174.370 rows=1602640 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=7998 width=30) (actual time=0.100..1694.631 rows=8018 loops=1)
Q20,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=22021 width=4) (actual time=0.014..1304.673 rows=21903 loops=1)
Q19,1.0,->  Nested Loop  (cost=13454.25..423519.47 rows=1030 width=8) (actual time=269.325..1592.467 rows=1119 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8392.74 rows=400027 width=0) (actual time=150.396..150.396 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4193.94 rows=199747 width=0) (actual time=88.540..88.540 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..291.49 rows=8201 width=0) (actual time=5.621..5.621 rows=8047 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.25 rows=8075 width=0) (actual time=5.522..5.522 rows=7962 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..271.97 rows=7848 width=0) (actual time=3.944..3.944 rows=7920 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=13454.25..37751.52 rows=10489 width=30) (actual time=268.924..468.609 rows=10385 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=16) (actual time=0.007..4732.608 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1671913.57 rows=60224757 width=8) (actual time=0.055..16336.353 rows=60045303 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1671913.57 rows=60224757 width=8) (actual time=0.016..19269.966 rows=60045303 loops=1)
Q17,1.0,->  Index Only Scan using part_p_container_p_brand_p_partkey_idx on part  (cost=0.00..7789.32 rows=1972 width=4) (actual time=0.236..43.696 rows=2013 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.049..0.471 rows=30 loops=2013)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.049..0.471 rows=30 loops=2013)
Q16,1.0,Sort  (cost=456058.36..456127.81 rows=27778 width=40) (actual time=49789.147..49792.716 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=54229.93..54229.93 rows=296289 width=40) (actual time=1570.804..1570.804 rows=297289 loops=1)
Q16,1.0,->  GroupAggregate  (cost=446355.06..454008.12 rows=27778 width=40) (actual time=48485.733..49418.795 rows=27839 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5655.69 rows=319127 width=0) (actual time=121.746..121.746 rows=320238 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5729.76..54229.93 rows=296289 width=40) (actual time=137.577..1335.424 rows=297289 loops=1)
Q15,1.0,->  Index Scan using pk_supplier on supplier  (cost=0.00..4791.46 rows=100000 width=71) (actual time=0.081..42.649 rows=99913 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47946.69 rows=2303986 width=0) (actual time=1720.885..1720.885 rows=2281299 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47946.69 rows=2303986 width=0) (actual time=1715.960..1715.960 rows=2281299 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=48522.69..1164464.48 rows=2303986 width=12) (actual time=2245.508..9035.518 rows=2249613 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=48522.69..1164464.48 rows=2303986 width=12) (actual time=2137.549..9461.449 rows=2249613 loops=1)
Q14,1.0,->  Hash Join  (cost=102174.16..1176688.34 rows=790374 width=29) (actual time=3098.236..12556.710 rows=774670 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..16454.57 rows=790374 width=0) (actual time=578.389..578.389 rows=785435 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=16652.16..1073382.93 rows=790374 width=12) (actual time=822.727..7419.399 rows=774670 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446496.39 rows=15013096 width=8) (actual time=0.040..10631.780 rows=14852837 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..815786.31 rows=15013096 width=8) (actual time=1785.564..43865.114 rows=15352855 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=20) (actual time=0.027..7175.148 rows=15000000 loops=1)
Q12,1.0,->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.00..376980.55 rows=290349 width=15) (actual time=0.300..17047.886 rows=310715 loops=1)
Q12,1.0,->  Hash Join  (cost=593719.70..979773.66 rows=290349 width=27) (actual time=15618.965..34018.381 rows=310715 loops=1)
Q12,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=20) (actual time=15608.876..15608.876 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=8) (actual time=1.406..1046.179 rows=324320 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=12) (actual time=1.894..1930.347 rows=324320 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.807..20.039 rows=4054 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.375..11.249 rows=4054 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.394..1.394 rows=4054 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=0.993..0.993 rows=4054 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.773..18.391 rows=4054 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.359..9.801 rows=4054 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817038.70 rows=59090235 width=20) (actual time=0.017..28251.802 rows=59046468 loops=1)
Q10,1.0,->  Sort  (cost=332784.74..334219.56 rows=573931 width=8) (actual time=3049.375..3239.371 rows=568318 loops=1)
Q10,1.0,->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.00..693599.80 rows=14999536 width=12) (actual time=0.115..19950.918 rows=14822462 loops=1)
Q10,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12321.30 rows=573931 width=0) (actual time=232.234..232.234 rows=575707 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=12464.79..277886.75 rows=573931 width=8) (actual time=382.152..2760.237 rows=568318 loops=1)
Q21,,->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.00..1.97 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=1468912)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..36.77 rows=1 width=16) (actual time=0.098..0.102 rows=0 loops=10385)
Q19,,->  BitmapOr  (cost=13454.25..13454.25 rows=10499 width=0) (actual time=266.343..266.343 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8689.72..8689.72 rows=1640 width=0) (actual time=162.090..162.090 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4471.40..4471.40 rows=784 width=0) (actual time=98.049..98.049 rows=0 loops=1)
