Q21,1467108.0,->  Hash Semi Join  (cost=2654483.24..4804018.61 rows=1 width=38) (actual time=45906.690..98694.490 rows=1467108 loops=1)
Q21,708419.0,->  Nested Loop  (cost=2654483.24..4804020.57 rows=1 width=34) (actual time=45906.877..115420.925 rows=708419 loops=1)
Q3,315921.2,->  Sort  (cost=2749389.78..2757287.81 rows=3159212 width=20) (actual time=77057.576..77057.580 rows=10 loops=1)
Q18,304122.7,->  GroupAggregate  (cost=10456704.98..11293042.48 rows=30412273 width=39) (actual time=121084.352..121084.954 rows=100 loops=1)
Q18,67300.4,->  Hash Join  (cost=2205020.00..2997098.82 rows=7604948 width=39) (actual time=76259.391..86939.776 rows=113 loops=1)
Q18,67300.4,->  Hash Join  (cost=2135992.00..2775971.86 rows=7604948 width=20) (actual time=74618.009..85295.304 rows=113 loops=1)
Q18,67300.4,->  Hash  (cost=2997098.82..2997098.82 rows=7604948 width=39) (actual time=86940.405..86940.405 rows=113 loops=1)
Q18,43384.1,->  Sort  (cost=10456704.98..10532735.66 rows=30412273 width=39) (actual time=121084.319..121084.442 rows=701 loops=1)
Q21,40061.0,->  Nested Loop Anti Join  (cost=2654483.24..4804035.46 rows=1 width=26) (actual time=45916.148..131712.327 rows=40061 loops=1)
Q18,38447.8,->  Hash Join  (cost=3092160.67..5845154.71 rows=30412273 width=39) (actual time=87016.905..121078.890 rows=791 loops=1)
Q18,36233.8,->  Hash  (cost=2084811.71..2084811.71 rows=4094423 width=4) (actual time=74482.817..74482.817 rows=113 loops=1)
Q18,36233.8,->  HashAggregate  (cost=1992687.19..2043867.48 rows=4094423 width=8) (actual time=65823.475..74481.961 rows=113 loops=1)
Q10,28710.7,->  Sort  (cost=1189473.49..1190909.03 rows=574215 width=175) (actual time=31227.616..31227.619 rows=20 loops=1)
Q9,23737.6,->  Sort  (cost=3501368.34..3501368.68 rows=137 width=46) (actual time=216707.947..217646.025 rows=3252063 loops=1)
Q9,23737.6,->  Nested Loop  (cost=2832078.88..3501363.48 rows=137 width=46) (actual time=101808.395..197562.064 rows=3252063 loops=1)
Q9,23737.6,->  Nested Loop  (cost=2832078.88..3501324.40 rows=137 width=24) (actual time=101808.312..182000.955 rows=3252063 loops=1)
Q9,23737.6,->  Nested Loop  (cost=2832078.88..3501054.80 rows=137 width=24) (actual time=101808.197..131166.061 rows=3252063 loops=1)
Q9,23737.6,->  Merge Join  (cost=2832078.88..3501014.91 rows=137 width=28) (actual time=101808.146..113641.144 rows=3252063 loops=1)
Q7,14607.5,GroupAggregate  (cost=2356991.11..2358890.09 rows=58430 width=64) (actual time=83533.434..83565.752 rows=4 loops=1)
Q2,4714.0,->  Merge Join  (cost=395240.92..822593.89 rows=1 width=190) (actual time=7073.481..11120.932 rows=4714 loops=1)
Q21,4009.0,->  HashAggregate  (cost=4804035.47..4804035.48 rows=1 width=26) (actual time=131858.178..131860.707 rows=4009 loops=1)
Q15,3770.0,->  Subquery Scan on revenue13  (cost=1204147.46..1204232.29 rows=3770 width=12) (actual time=28677.218..28683.047 rows=1 loops=1)
Q15,3770.0,->  Sort  (cost=1204456.23..1204465.66 rows=3770 width=12) (actual time=28683.085..28683.087 rows=1 loops=1)
Q15,3770.0,Merge Join  (cost=2391497.89..2396595.91 rows=3770 width=79) (actual time=28716.285..28716.290 rows=1 loops=1)
Q15,3770.0,->  HashAggregate  (cost=1204147.46..1204194.59 rows=3770 width=12) (actual time=28677.215..28683.043 rows=1 loops=1)
Q8,364.5,Sort  (cost=2191351.06..2191352.89 rows=729 width=38) (actual time=31375.166..31375.166 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=2191303.64..2191316.40 rows=729 width=38) (actual time=31375.045..31375.048 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=4804035.49..4804035.49 rows=1 width=26) (actual time=131865.461..131865.468 rows=100 loops=1)
Q21,100.0,Limit  (cost=4804035.49..4804035.49 rows=1 width=26) (actual time=131865.464..131865.492 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=822593.90..822593.91 rows=1 width=190) (actual time=11131.269..11131.287 rows=100 loops=1)
Q2,100.0,Limit  (cost=822593.90..822593.91 rows=1 width=190) (actual time=11131.273..11131.307 rows=100 loops=1)
Q11,31.1,Sort  (cost=135913.51..136712.11 rows=319441 width=12) (actual time=3629.706..3631.409 rows=10265 loops=1)
Q11,31.1,->  HashAggregate  (cost=52954.85..56947.86 rows=319441 width=12) (actual time=3466.833..3622.532 rows=10265 loops=1)
Q3,27.8,->  HashAggregate  (cost=2649528.22..2681120.34 rows=3159212 width=20) (actual time=76956.738..77035.876 rows=113501 loops=1)
Q15,26.5,->  HashAggregate  (cost=1186956.83..1186994.53 rows=3770 width=12) (actual time=14702.721..14759.287 rows=100000 loops=1)
Q3,10.5,->  Hash Join  (cost=625543.86..2602140.04 rows=3159212 width=20) (actual time=27169.112..76490.985 rows=299803 loops=1)
Q4,10.0,->  Hash  (cost=998114.67..998114.67 rows=1364808 width=4) (actual time=66495.491..66495.491 rows=13753384 loops=1)
Q4,10.0,->  HashAggregate  (cost=984466.59..998114.67 rows=1364808 width=4) (actual time=54675.684..62873.426 rows=13753384 loops=1)
Q16,5.6,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.00..8.45 rows=10 width=4) (actual time=0.063..0.904 rows=56 loops=1)
Q5,5.0,Sort  (cost=2446068.70..2446068.76 rows=25 width=34) (actual time=78221.345..78221.346 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2446067.87..2446068.12 rows=25 width=34) (actual time=78221.185..78221.188 rows=5 loops=1)
Q4,5.0,Sort  (cost=1297534.28..1297534.29 rows=1 width=16) (actual time=79569.657..79569.658 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1297534.26..1297534.27 rows=1 width=16) (actual time=79569.499..79569.501 rows=5 loops=1)
Q21,5.0,->  Index Scan using lineitem_l_orderkey_idx on lineitem l3  (cost=0.00..7.42 rows=5 width=8) (actual time=0.022..0.022 rows=1 loops=708419)
Q13,4.3,Sort  (cost=929115.21..929115.71 rows=200 width=8) (actual time=60450.335..60450.337 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=929105.56..929107.56 rows=200 width=8) (actual time=60450.225..60450.235 rows=46 loops=1)
Q17,3.8,->  Nested Loop  (cost=140.78..400234.23 rows=19985 width=4) (actual time=0.842..1155.849 rows=5155 loops=1)
Q4,3.3,->  Hash Join  (cost=1027261.49..1296782.18 rows=150416 width=16) (actual time=67008.386..79200.078 rows=508442 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=140.78..196.77 rows=10 width=12) (actual time=0.011..0.014 rows=3 loops=1971)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..575.31 rows=1 width=8) (actual time=0.524..0.657 rows=3 loops=21632)
Q22,2.3,Sort  (cost=694697.89..694697.90 rows=3 width=20) (actual time=14365.489..14365.490 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641815.45..641815.49 rows=3 width=20) (actual time=14365.422..14365.425 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.00..49.84 rows=1 width=4) (actual time=0.071..0.106 rows=2 loops=6365)
Q20,2.0,->  Nested Loop  (cost=0.00..12734689.26 rows=29235 width=4) (actual time=1.153..15566.660 rows=58646 loops=1)
Q16,2.0,->  Sort  (cost=446373.90..447849.27 rows=590149 width=40) (actual time=41567.090..41859.569 rows=1187008 loops=1)
Q16,2.0,->  Hash Join  (cost=57946.51..389806.00 rows=590149 width=40) (actual time=882.437..10772.505 rows=1187008 loops=1)
Q12,2.0,Sort  (cost=985775.58..985775.59 rows=1 width=27) (actual time=36373.820..36373.821 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=985775.56..985775.57 rows=1 width=27) (actual time=36373.731..36373.732 rows=2 loops=1)
Q21,1.9,->  Hash Join  (cost=2441.58..1902532.27 rows=799562 width=34) (actual time=25.576..35698.040 rows=1521737 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.48..270966.48 rows=4000000 width=8) (actual time=0.960..4196.403 rows=7995520 loops=1)
Q10,1.9,->  Merge Join  (cost=331706.58..1065686.99 rows=574215 width=12) (actual time=2599.915..20380.133 rows=1147592 loops=1)
Q10,1.9,->  Hash Join  (cost=400736.14..1154096.31 rows=574215 width=175) (actual time=4819.993..25685.533 rows=1147592 loops=1)
Q10,1.9,->  Hash Join  (cost=400734.58..1146199.29 rows=574215 width=153) (actual time=4819.937..24970.939 rows=1147592 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.00..933979.95 rows=20194655 width=4) (actual time=0.187..24997.066 rows=37927594 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817038.70 rows=20015032 width=8) (actual time=0.014..24214.188 rows=37928797 loops=1)
Q20,1.5,Sort  (cost=12740177.87..12740180.80 rows=1169 width=51) (actual time=16058.498..16058.703 rows=1818 loops=1)
Q20,1.5,->  Nested Loop  (cost=12735712.48..12740118.31 rows=1169 width=51) (actual time=15734.905..16041.052 rows=1818 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=12735712.48..12739751.56 rows=29235 width=55) (actual time=15734.882..16031.802 rows=44530 loops=1)
Q20,1.5,->  Hash  (cost=12735347.04..12735347.04 rows=29235 width=4) (actual time=15734.806..15734.806 rows=44530 loops=1)
Q20,1.5,->  HashAggregate  (cost=12734762.34..12735054.69 rows=29235 width=4) (actual time=15688.704..15716.646 rows=44530 loops=1)
Q1,1.5,Sort  (cost=4191106.59..4191106.60 rows=6 width=20) (actual time=112810.359..112810.359 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4191106.41..4191106.51 rows=6 width=20) (actual time=112810.271..112810.273 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=1168451.69..1174193.84 rows=574215 width=175) (actual time=30721.095..31047.232 rows=381503 loops=1)
Q15,1.4,->  Index Scan using pk_supplier on supplier  (cost=0.00..4791.46 rows=100000 width=71) (actual time=0.131..25.833 rows=70888 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2871.41 rows=139745 width=0) (actual time=985.930..985.930 rows=191201 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2906.34..41852.65 rows=139745 width=24) (actual time=995.108..1197.904 rows=191201 loops=1)
Q9,1.2,GroupAggregate  (cost=3501368.34..3501373.13 rows=137 width=46) (actual time=216719.948..220103.222 rows=175 loops=1)
Q19,1.1,->  Nested Loop  (cost=13453.20..423541.72 rows=1032 width=8) (actual time=199.058..1439.767 rows=1167 loops=1)
Q9,1.0,->  Sort  (cost=2832078.88..2840694.81 rows=3446371 width=28) (actual time=101808.015..103882.542 rows=3252063 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=114110 width=4) (actual time=0.031..1498.383 rows=108399 loops=1)
Q9,1.0,->  Seq Scan on lineitem  (cost=0.00..1676899.62 rows=60404362 width=24) (actual time=0.035..17854.108 rows=60045310 loops=1)
Q9,1.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..603091.29 rows=8000000 width=12) (actual time=0.014..5780.348 rows=7999949 loops=1)
Q9,1.0,->  Hash Join  (cost=66948.38..2457860.78 rows=3446371 width=28) (actual time=1571.813..97699.884 rows=3252063 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=114110 width=4) (actual time=1571.560..1571.560 rows=108399 loops=1)
Q8,1.0,->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=31.679..1270.488 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=501874.48..2190810.26 rows=24669 width=38) (actual time=21616.960..31300.718 rows=24351 loops=1)
Q8,1.0,->  Nested Loop  (cost=501874.48..2183774.66 rows=24669 width=16) (actual time=21616.892..31122.973 rows=24351 loops=1)
Q8,1.0,->  Nested Loop  (cost=0.00..1672419.46 rows=408147 width=16) (actual time=0.499..7803.820 rows=403899 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..120.59 rows=31 width=20) (actual time=0.047..0.543 rows=30 loops=13442)
Q8,1.0,->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..46683.64 rows=13447 width=4) (actual time=0.429..275.059 rows=13442 loops=1)
Q8,1.0,->  Hash Join  (cost=501874.48..2176581.69 rows=24701 width=16) (actual time=21616.832..30759.521 rows=24351 loops=1)
Q8,1.0,->  Hash Join  (cost=138770.95..490390.98 rows=918680 width=8) (actual time=4863.035..21086.730 rows=911207 loops=1)
Q8,1.0,->  Hash  (cost=490390.98..490390.98 rows=918680 width=8) (actual time=21615.255..21615.255 rows=911207 loops=1)
Q8,1.0,->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=1441.910..1441.910 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..98591.98 rows=4593399 width=0) (actual time=3173.165..3173.165 rows=4612043 loops=1)
Q8,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=19.370..19.370 rows=59887 loops=5)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=99740.33..424948.31 rows=4593399 width=12) (actual time=3420.863..7655.162 rows=4561761 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=28.475..236.507 rows=59887 loops=5)
Q7,1.0,->  Sort  (cost=2356991.11..2357137.19 rows=58430 width=64) (actual time=83522.491..83532.939 rows=57804 loops=1)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=8) (actual time=0.013..4890.643 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=905.09..14139.26 rows=119904 width=60) (actual time=25.747..695.033 rows=120322 loops=1)
Q7,1.0,->  Hash Join  (cost=895921.59..2352365.09 rows=58430 width=64) (actual time=42275.320..83171.681 rows=57804 loops=1)
Q7,1.0,->  Hash Join  (cost=891242.59..2317556.90 rows=1462637 width=72) (actual time=42151.301..79600.789 rows=1465209 loops=1)
Q7,1.0,->  Hash Join  (cost=15638.06..488560.48 rows=1202633 width=60) (actual time=780.686..27787.321 rows=1207197 loops=1)
Q7,1.0,->  Hash  (cost=488560.48..488560.48 rows=1202633 width=60) (actual time=28542.974..28542.974 rows=1207197 loops=1)
Q7,1.0,->  Hash  (cost=14139.26..14139.26 rows=119904 width=60) (actual time=780.509..780.509 rows=120322 loops=1)
Q7,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..383074.80 rows=18297597 width=0) (actual time=12971.327..12971.327 rows=18284460 loops=1)
Q7,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=16.537..16.537 rows=60161 loops=2)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=387649.20..1730721.15 rows=18297597 width=20) (actual time=13607.305..30837.209 rows=18248203 loops=1)
Q7,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=23.765..327.185 rows=60161 loops=2)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..192204.57 rows=9213774 width=0) (actual time=7231.821..7231.821 rows=9193180 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=192304.73..1475660.64 rows=400636 width=8) (actual time=7906.293..22213.104 rows=396850 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1683564.35 rows=60644435 width=16) (actual time=0.022..19903.488 rows=60044872 loops=1)
Q5,1.0,->  Nested Loop  (cost=905.09..35292.22 rows=300000 width=38) (actual time=34.594..1772.282 rows=300963 loops=1)
Q5,1.0,->  Hash Join  (cost=88811.00..392419.54 rows=458357 width=38) (actual time=3829.164..13385.089 rows=457441 loops=1)
Q5,1.0,->  Hash Join  (cost=402828.00..2445335.66 rows=73221 width=34) (actual time=13837.008..78045.180 rows=73126 loops=1)
Q5,1.0,->  Hash Join  (cost=398149.00..2403265.17 rows=1832964 width=46) (actual time=13716.083..74382.258 rows=1826654 loops=1)
Q5,1.0,->  Hash  (cost=392419.54..392419.54 rows=458357 width=38) (actual time=13715.189..13715.189 rows=457441 loops=1)
Q5,1.0,->  Hash  (cost=35292.22..35292.22 rows=300000 width=38) (actual time=1994.165..1994.165 rows=300963 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..49195.84 rows=2291785 width=0) (actual time=1708.202..1708.202 rows=2300694 loops=1)
Q5,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=21.851..21.851 rows=60193 loops=5)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=49768.78..340199.56 rows=2291785 width=8) (actual time=1834.666..5212.572 rows=2278106 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=33.267..330.831 rows=60193 loops=5)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..11947.59 rows=556560 width=0) (actual time=385.085..385.085 rows=559838 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=12086.73..276236.13 rows=556560 width=20) (actual time=510.930..2882.218 rows=554284 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..442530.20 rows=7315691 width=16) (actual time=0.028..7002.972 rows=7253318 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1822475.46 rows=32674294 width=12) (actual time=0.053..27524.277 rows=32541017 loops=1)
Q3,1.0,->  Hash Join  (cost=49660.32..607342.42 rows=1456115 width=12) (actual time=1201.083..25909.532 rows=1450181 loops=1)
Q3,1.0,->  Hash  (cost=607342.42..607342.42 rows=1456115 width=12) (actual time=27166.463..27166.463 rows=1450181 loops=1)
Q3,1.0,->  Hash  (cost=45928.32..45928.32 rows=298560 width=4) (actual time=1200.746..1200.746 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6843.68 rows=298560 width=0) (actual time=95.349..95.349 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6918.32..45928.32 rows=298560 width=4) (actual time=105.122..1037.013 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.034..4885.229 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=12772.958..12772.958 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597808.67..641373.47 rows=58930 width=20) (actual time=13775.857..14331.499 rows=63745 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6545.85 rows=381328 width=0) (actual time=86.324..86.324 rows=382589 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer  (cost=6641.18..51929.04 rows=381328 width=4) (actual time=95.366..840.050 rows=382589 loops=1)
Q21,1.0,->  Seq Scan on lineitem l2  (cost=0.00..1666925.96 rows=60045096 width=8) (actual time=0.030..23128.682 rows=59985329 loops=1)
Q21,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=30) (actual time=4.609..23.413 rows=4009 loops=1)
Q21,1.0,->  Hash  (cost=2391.58..2391.58 rows=4000 width=30) (actual time=25.515..25.515 rows=4009 loops=1)
Q21,1.0,->  Hash  (cost=1666925.96..1666925.96 rows=60045096 width=8) (actual time=45864.059..45864.059 rows=59985329 loops=1)
Q21,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=4.192..4.192 rows=4009 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=34) (actual time=4.594..21.913 rows=4009 loops=1)
Q2,1.0,->  Sort  (cost=395240.86..399233.87 rows=1597205 width=168) (actual time=7071.079..7614.642 rows=1604050 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..5806.62 rows=20000 width=164) (actual time=0.069..166.187 rows=20051 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..230671.90 rows=1597205 width=168) (actual time=0.090..5337.153 rows=1604080 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=7991 width=30) (actual time=0.644..1875.655 rows=8062 loops=1)
Q20,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=22021 width=4) (actual time=0.017..1295.208 rows=21632 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8392.74 rows=400027 width=0) (actual time=88.658..88.658 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4193.94 rows=199747 width=0) (actual time=84.878..84.878 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.45 rows=8095 width=0) (actual time=3.915..3.915 rows=7978 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.21 rows=8071 width=0) (actual time=3.910..3.910 rows=8108 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.01 rows=7851 width=0) (actual time=6.011..6.011 rows=8078 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=13453.20..37742.86 rows=10484 width=30) (actual time=197.984..384.351 rows=10426 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..408911.95 rows=15209895 width=16) (actual time=0.011..5689.487 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1688564.46 rows=60824546 width=8) (actual time=0.029..19673.663 rows=60045033 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1688564.46 rows=60824546 width=8) (actual time=0.025..20385.959 rows=60045033 loops=1)
Q17,1.0,->  Index Only Scan using part_p_container_p_brand_p_partkey_idx on part  (cost=0.00..7873.71 rows=1993 width=4) (actual time=0.241..51.700 rows=1971 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.057..0.524 rows=30 loops=1971)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.057..0.524 rows=30 loops=1971)
Q16,1.0,Sort  (cost=456079.34..456148.80 rows=27784 width=40) (actual time=42825.595..42828.865 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=54233.62..54233.62 rows=296353 width=40) (actual time=881.300..881.300 rows=296900 loops=1)
Q16,1.0,->  GroupAggregate  (cost=446373.90..454028.60 rows=27784 width=40) (actual time=41567.210..42463.975 rows=27840 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5656.53 rows=319240 width=0) (actual time=69.981..69.981 rows=319704 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5730.62..54233.62 rows=296353 width=40) (actual time=80.177..703.873 rows=296900 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47699.68 rows=2292085 width=0) (actual time=1810.333..1810.333 rows=2275398 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47699.68 rows=2292085 width=0) (actual time=1780.946..1780.946 rows=2275398 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=48272.70..1164035.98 rows=2292085 width=12) (actual time=2219.986..10486.893 rows=2244353 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=48272.70..1164035.98 rows=2292085 width=12) (actual time=2146.012..10903.095 rows=2244353 loops=1)
Q14,1.0,->  Hash Join  (cost=102564.17..1181915.06 rows=807741 width=29) (actual time=4262.718..14046.515 rows=773747 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..16840.24 rows=807741 width=0) (actual time=514.067..514.067 rows=781935 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=17042.17..1078218.89 rows=807741 width=12) (actual time=741.067..7046.897 rows=773747 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446496.39 rows=15043247 width=8) (actual time=0.046..9591.533 rows=14852952 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..816389.33 rows=15043247 width=8) (actual time=1394.009..42960.404 rows=15352973 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=20) (actual time=0.018..6749.206 rows=15015000 loops=1)
Q12,1.0,->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.00..377275.92 rows=291073 width=15) (actual time=0.201..19434.438 rows=311550 loops=1)
Q12,1.0,->  Hash Join  (cost=594309.84..980681.79 rows=291073 width=27) (actual time=14968.180..35794.149 rows=311550 loops=1)
Q12,1.0,->  Hash  (cost=405686.04..405686.04 rows=15089904 width=20) (actual time=14958.089..14958.089 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=8) (actual time=1.448..1097.239 rows=313920 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=12) (actual time=1.938..1812.136 rows=313920 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.880..23.656 rows=3924 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.416..13.254 rows=3924 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.419..1.419 rows=3924 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=0.993..0.993 rows=3924 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.839..21.784 rows=3924 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.392..11.731 rows=3924 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1824305.33 rows=59170027 width=20) (actual time=0.033..28995.148 rows=58941858 loops=1)
Q10,1.0,->  Sort  (cost=331699.07..333154.74 rows=582267 width=8) (actual time=2599.739..2778.634 rows=574262 loops=1)
Q10,1.0,->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.00..688131.38 rows=14881228 width=12) (actual time=0.110..14315.901 rows=14823275 loops=1)
Q10,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12276.59 rows=582267 width=0) (actual time=377.813..377.813 rows=577112 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=12422.16..275943.16 rows=582267 width=8) (actual time=580.279..2370.916 rows=574262 loops=1)
Q21,,->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.00..1.94 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=1467108)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..36.79 rows=1 width=16) (actual time=0.092..0.096 rows=0 loops=10426)
Q19,,->  BitmapOr  (cost=13453.20..13453.20 rows=10494 width=0) (actual time=195.899..195.899 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8688.44..8688.44 rows=1614 width=0) (actual time=95.051..95.051 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4471.44..4471.44 rows=784 width=0) (actual time=96.397..96.397 rows=0 loops=1)
