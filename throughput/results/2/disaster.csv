Q21,1466849.0,->  Hash Semi Join  (cost=2688908.86..4866346.60 rows=1 width=38) (actual time=50506.869..108178.578 rows=1466849 loops=1)
Q21,708280.0,->  Nested Loop  (cost=2688908.86..4866348.60 rows=1 width=34) (actual time=50507.397..119229.426 rows=708280 loops=1)
Q3,318780.7,->  Sort  (cost=2773663.20..2781632.72 rows=3187807 width=20) (actual time=73710.993..73710.996 rows=10 loops=1)
Q18,302709.8,->  GroupAggregate  (cost=10408050.65..11240502.65 rows=30270982 width=39) (actual time=114381.450..114382.072 rows=100 loops=1)
Q18,67566.8,->  Hash Join  (cost=2195762.28..2984141.21 rows=7567488 width=39) (actual time=71870.106..82266.995 rows=112 loops=1)
Q18,67566.8,->  Hash Join  (cost=2126734.28..2763763.45 rows=7567488 width=20) (actual time=70388.380..80783.022 rows=112 loops=1)
Q18,67566.8,->  Hash  (cost=2984141.21..2984141.21 rows=7567488 width=39) (actual time=82267.592..82267.592 rows=112 loops=1)
Q18,43182.5,->  Sort  (cost=10408050.65..10483728.10 rows=30270982 width=39) (actual time=114381.420..114381.548 rows=701 loops=1)
Q21,40131.0,->  Nested Loop Anti Join  (cost=2688908.86..4866363.81 rows=1 width=26) (actual time=50510.130..130461.439 rows=40131 loops=1)
Q18,38610.9,->  Hash Join  (cost=3078734.81..5818938.87 rows=30270982 width=39) (actual time=82928.123..114375.796 rows=784 loops=1)
Q18,36557.3,->  Hash  (cost=2075553.99..2075553.99 rows=4094423 width=4) (actual time=70230.383..70230.383 rows=112 loops=1)
Q18,36557.3,->  HashAggregate  (cost=1983429.48..2034609.76 rows=4094423 width=8) (actual time=61748.131..70229.479 rows=112 loops=1)
Q10,27349.1,->  Sort  (cost=1178661.12..1180028.57 rows=546982 width=175) (actual time=37447.638..37447.644 rows=20 loops=1)
Q9,24410.0,->  Sort  (cost=3482162.33..3482162.66 rows=134 width=46) (actual time=235296.958..236266.622 rows=3270943 loops=1)
Q9,24410.0,->  Nested Loop  (cost=2813436.45..3482157.59 rows=134 width=46) (actual time=110476.451..213736.473 rows=3270943 loops=1)
Q9,24410.0,->  Nested Loop  (cost=2813436.45..3482119.38 rows=134 width=24) (actual time=110476.369..198360.864 rows=3270943 loops=1)
Q9,24410.0,->  Nested Loop  (cost=2813436.45..3481857.44 rows=134 width=24) (actual time=110476.240..140384.860 rows=3270943 loops=1)
Q9,24410.0,->  Merge Join  (cost=2813436.45..3481818.42 rows=134 width=28) (actual time=110476.195..122323.763 rows=3270943 loops=1)
Q7,14680.0,GroupAggregate  (cost=2367619.10..2369527.50 rows=58720 width=64) (actual time=85294.721..85324.197 rows=4 loops=1)
Q2,4674.0,->  Merge Join  (cost=395240.92..819501.76 rows=1 width=190) (actual time=8435.778..12563.020 rows=4674 loops=1)
Q21,4004.0,->  HashAggregate  (cost=4866363.82..4866363.83 rows=1 width=26) (actual time=130575.764..130577.446 rows=4004 loops=1)
Q15,3774.0,->  Subquery Scan on revenue2  (cost=1193453.81..1193538.73 rows=3774 width=12) (actual time=28285.004..28322.518 rows=1 loops=1)
Q15,3774.0,->  Sort  (cost=1193762.94..1193772.37 rows=3774 width=12) (actual time=28322.552..28322.552 rows=1 loops=1)
Q15,3774.0,Merge Join  (cost=2370249.40..2375347.47 rows=3774 width=79) (actual time=28333.467..28333.470 rows=1 loops=1)
Q15,3774.0,->  HashAggregate  (cost=1193453.81..1193500.99 rows=3774 width=12) (actual time=28285.001..28322.513 rows=1 loops=1)
Q8,364.5,Sort  (cost=2194663.37..2194665.20 rows=729 width=38) (actual time=30639.915..30639.915 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=2194615.95..2194628.71 rows=729 width=38) (actual time=30639.830..30639.832 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=4866363.84..4866363.84 rows=1 width=26) (actual time=130580.012..130580.020 rows=100 loops=1)
Q21,100.0,Limit  (cost=4866363.84..4866363.84 rows=1 width=26) (actual time=130580.015..130580.037 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=819501.77..819501.78 rows=1 width=190) (actual time=12572.787..12572.814 rows=100 loops=1)
Q2,100.0,Limit  (cost=819501.77..819501.78 rows=1 width=190) (actual time=12572.790..12572.829 rows=100 loops=1)
Q11,34.1,Sort  (cost=135913.51..136712.11 rows=319441 width=12) (actual time=4981.295..4982.416 rows=9348 loops=1)
Q11,34.1,->  HashAggregate  (cost=52954.85..56947.86 rows=319441 width=12) (actual time=4857.158..4975.051 rows=9348 loops=1)
Q3,28.1,->  HashAggregate  (cost=2672897.77..2704775.84 rows=3187807 width=20) (actual time=73611.109..73690.231 rows=113375 loops=1)
Q15,26.4,->  HashAggregate  (cost=1176401.53..1176439.27 rows=3774 width=12) (actual time=11806.397..11873.829 rows=100000 loops=1)
Q3,10.6,->  Hash Join  (cost=631119.61..2625080.67 rows=3187807 width=20) (actual time=25675.174..73187.779 rows=299691 loops=1)
Q4,10.0,->  Hash  (cost=1000072.68..1000072.68 rows=1364808 width=4) (actual time=78555.199..78555.199 rows=13767238 loops=1)
Q4,10.0,->  HashAggregate  (cost=986424.60..1000072.68 rows=1364808 width=4) (actual time=64878.332..74773.771 rows=13767238 loops=1)
Q16,5.6,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.00..8.45 rows=10 width=4) (actual time=0.053..0.555 rows=56 loops=1)
Q5,5.0,Sort  (cost=2434007.34..2434007.40 rows=25 width=34) (actual time=78145.684..78145.685 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2434006.51..2434006.76 rows=25 width=34) (actual time=78145.607..78145.610 rows=5 loops=1)
Q4,5.0,Sort  (cost=1301373.82..1301373.83 rows=1 width=16) (actual time=89373.712..89373.713 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1301373.80..1301373.81 rows=1 width=16) (actual time=89373.565..89373.566 rows=5 loops=1)
Q21,5.0,->  Index Scan using lineitem_l_orderkey_idx on lineitem l3  (cost=0.00..7.58 rows=5 width=8) (actual time=0.015..0.015 rows=1 loops=708280)
Q15,4.7,->  Index Scan using pk_supplier on supplier  (cost=0.00..4791.46 rows=100000 width=71) (actual time=0.077..8.712 rows=20959 loops=1)
Q13,4.5,Sort  (cost=928133.01..928133.51 rows=200 width=8) (actual time=60700.540..60700.541 rows=44 loops=1)
Q13,4.5,->  HashAggregate  (cost=928123.36..928125.36 rows=200 width=8) (actual time=60700.417..60700.433 rows=44 loops=1)
Q17,4.0,->  Nested Loop  (cost=140.78..402637.46 rows=20085 width=4) (actual time=1.391..686.210 rows=4902 loops=1)
Q4,3.3,->  Hash Join  (cost=1029847.30..1300584.29 rows=157902 width=16) (actual time=79138.111..89152.613 rows=527003 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=140.78..196.77 rows=10 width=12) (actual time=0.008..0.011 rows=3 loops=1830)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..575.31 rows=1 width=8) (actual time=0.385..0.470 rows=3 loops=21713)
Q22,2.3,Sort  (cost=694653.92..694653.92 rows=3 width=20) (actual time=17653.750..17653.750 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641796.86..641796.90 rows=3 width=20) (actual time=17653.670..17653.676 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.00..49.84 rows=1 width=4) (actual time=0.065..0.097 rows=2 loops=6352)
Q20,2.0,->  Nested Loop  (cost=0.00..12734689.26 rows=29235 width=4) (actual time=0.974..11199.158 rows=58931 loops=1)
Q12,2.0,Sort  (cost=986764.18..986764.19 rows=1 width=27) (actual time=36342.295..36342.296 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=986764.16..986764.17 rows=1 width=27) (actual time=36342.170..36342.171 rows=2 loops=1)
Q16,1.9,->  Sort  (cost=446819.39..448302.35 rows=593186 width=40) (actual time=45809.781..46067.825 rows=1184454 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.48..270966.48 rows=4000000 width=8) (actual time=0.612..5437.080 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=58048.55..389938.41 rows=593186 width=40) (actual time=1276.674..13547.426 rows=1184454 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.00..935837.47 rows=20234855 width=4) (actual time=0.225..28888.413 rows=37966174 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1840625.83 rows=20274849 width=8) (actual time=0.038..30129.330 rows=37966096 loops=1)
Q21,1.8,->  Hash Join  (cost=2441.58..1927197.49 rows=809941 width=34) (actual time=28.729..45917.677 rows=1521034 loops=1)
Q10,1.7,->  Merge Join  (cost=326778.30..1057471.55 rows=546982 width=12) (actual time=2071.401..27432.128 rows=940961 loops=1)
Q10,1.7,->  Hash Join  (cost=395807.86..1144961.75 rows=546982 width=175) (actual time=4895.600..33459.271 rows=940961 loops=1)
Q10,1.7,->  Hash Join  (cost=395806.30..1137439.19 rows=546982 width=153) (actual time=4895.552..32810.264 rows=940961 loops=1)
Q20,1.5,Sort  (cost=12740177.87..12740180.80 rows=1169 width=51) (actual time=11460.432..11460.541 rows=1791 loops=1)
Q20,1.5,->  Nested Loop  (cost=12735712.48..12740118.31 rows=1169 width=51) (actual time=11322.734..11451.253 rows=1791 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=12735712.48..12739751.56 rows=29235 width=55) (actual time=11322.706..11446.278 rows=44696 loops=1)
Q20,1.5,->  Hash  (cost=12735347.04..12735347.04 rows=29235 width=4) (actual time=11322.629..11322.629 rows=44696 loops=1)
Q20,1.5,->  HashAggregate  (cost=12734762.34..12735054.69 rows=29235 width=4) (actual time=11286.253..11311.937 rows=44696 loops=1)
Q1,1.5,Sort  (cost=4236547.98..4236548.00 rows=6 width=20) (actual time=120148.468..120148.469 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4236547.80..4236547.90 rows=6 width=20) (actual time=120148.360..120148.363 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=1158636.30..1164106.12 rows=546982 width=175) (actual time=36916.117..37279.740 rows=354681 loops=1)
Q9,1.3,GroupAggregate  (cost=3482162.33..3482167.02 rows=134 width=46) (actual time=235310.743..238717.076 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2868.82 rows=139490 width=0) (actual time=848.968..848.968 rows=190442 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2903.69..41843.30 rows=139490 width=24) (actual time=861.782..1563.339 rows=190442 loops=1)
Q19,1.2,->  Nested Loop  (cost=13470.36..420934.42 rows=1010 width=8) (actual time=206.429..1556.449 rows=1212 loops=1)
Q9,1.0,->  Sort  (cost=2813436.45..2821867.70 rows=3372500 width=28) (actual time=110475.937..112679.470 rows=3270943 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=112108 width=4) (actual time=0.047..1638.744 rows=108908 loops=1)
Q9,1.0,->  Seq Scan on lineitem  (cost=0.00..1670259.89 rows=60165189 width=24) (actual time=0.027..19653.601 rows=60045379 loops=1)
Q9,1.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..603091.29 rows=8000000 width=12) (actual time=0.008..5583.375 rows=7999953 loops=1)
Q9,1.0,->  Hash Join  (cost=66923.35..2447766.62 rows=3372500 width=28) (actual time=1716.528..106633.559 rows=3270943 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=112108 width=4) (actual time=1716.303..1716.303 rows=108908 loops=1)
Q8,1.0,->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=33.462..1717.029 rows=299838 loops=1)
Q8,1.0,->  Nested Loop  (cost=497357.84..2194122.37 rows=24679 width=38) (actual time=22447.747..30569.001 rows=24267 loops=1)
Q8,1.0,->  Nested Loop  (cost=497357.84..2187083.92 rows=24679 width=16) (actual time=22447.679..30401.025 rows=24267 loops=1)
Q8,1.0,->  Nested Loop  (cost=0.00..1680241.44 rows=408323 width=16) (actual time=0.568..6438.802 rows=399281 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..120.38 rows=31 width=20) (actual time=0.043..0.450 rows=30 loops=13296)
Q8,1.0,->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..46937.14 rows=13533 width=4) (actual time=0.466..246.771 rows=13296 loops=1)
Q8,1.0,->  Hash Join  (cost=497357.84..2179888.01 rows=24711 width=16) (actual time=22447.642..30050.909 rows=24267 loops=1)
Q8,1.0,->  Hash Join  (cost=136407.66..485942.44 rows=913232 width=8) (actual time=5086.727..21909.512 rows=911416 loops=1)
Q8,1.0,->  Hash  (cost=485942.44..485942.44 rows=913232 width=8) (actual time=22445.596..22445.596 rows=911416 loops=1)
Q8,1.0,->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=1899.574..1899.574 rows=299838 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..96235.50 rows=4566158 width=0) (actual time=3038.551..3038.551 rows=4584480 loops=1)
Q8,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=22.172..22.172 rows=59968 loops=5)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=97377.04..420656.41 rows=4566158 width=12) (actual time=3186.667..7439.107 rows=4561664 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=31.528..324.465 rows=59968 loops=5)
Q7,1.0,->  Sort  (cost=2367619.10..2367765.90 rows=58720 width=64) (actual time=85284.795..85293.550 rows=58344 loops=1)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=8) (actual time=0.019..4395.407 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=905.09..14139.26 rows=119904 width=60) (actual time=21.021..831.608 rows=119915 loops=1)
Q7,1.0,->  Hash Join  (cost=899287.32..2362968.02 rows=58720 width=64) (actual time=39230.989..84939.502 rows=58344 loops=1)
Q7,1.0,->  Hash Join  (cost=894608.32..2328010.12 rows=1469905 width=72) (actual time=39154.717..81529.226 rows=1462287 loops=1)
Q7,1.0,->  Hash Join  (cost=15638.06..490919.26 rows=1208632 width=60) (actual time=926.817..24288.844 rows=1203978 loops=1)
Q7,1.0,->  Hash  (cost=490919.26..490919.26 rows=1208632 width=60) (actual time=24971.760..24971.760 rows=1203978 loops=1)
Q7,1.0,->  Hash  (cost=14139.26..14139.26 rows=119904 width=60) (actual time=926.625..926.625 rows=119915 loops=1)
Q7,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..383984.03 rows=18388520 width=0) (actual time=13550.126..13550.126 rows=18374583 loops=1)
Q7,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=16.064..16.064 rows=59958 loops=2)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=388581.16..1738326.96 rows=18388520 width=20) (actual time=14181.830..33842.237 rows=18247062 loops=1)
Q7,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=23.212..394.033 rows=59958 loops=2)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..191263.72 rows=9126089 width=0) (actual time=7353.846..7353.846 rows=9108198 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=191463.23..1463275.23 rows=798044 width=8) (actual time=8109.866..27067.959 rows=793054 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1675245.94 rows=60344794 width=16) (actual time=0.048..16977.521 rows=60045826 loops=1)
Q5,1.0,->  Nested Loop  (cost=905.09..35292.22 rows=300000 width=38) (actual time=29.863..1026.882 rows=299436 loops=1)
Q5,1.0,->  Hash Join  (cost=87890.57..390207.09 rows=458116 width=38) (actual time=4487.143..14432.996 rows=453480 loops=1)
Q5,1.0,->  Hash Join  (cost=400612.54..2433274.68 rows=73183 width=34) (actual time=15648.057..77991.487 rows=72946 loops=1)
Q5,1.0,->  Hash Join  (cost=395933.54..2391223.59 rows=1832013 width=46) (actual time=15554.071..74185.272 rows=1812708 loops=1)
Q5,1.0,->  Hash  (cost=390207.09..390207.09 rows=458116 width=38) (actual time=15553.230..15553.230 rows=453480 loops=1)
Q5,1.0,->  Hash  (cost=35292.22..35292.22 rows=300000 width=38) (actual time=2804.888..2804.888 rows=299436 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..48275.71 rows=2290579 width=0) (actual time=1543.512..1543.512 rows=2289672 loops=1)
Q5,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=21.245..21.245 rows=59887 loops=5)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=48848.36..337994.04 rows=2290579 width=8) (actual time=1681.820..4988.557 rows=2278157 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=31.645..185.024 rows=59887 loops=5)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12568.16 rows=585417 width=0) (actual time=438.581..438.581 rows=581242 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=12714.51..277802.77 rows=585417 width=20) (actual time=581.294..2270.809 rows=574828 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..446496.39 rows=7403991 width=16) (actual time=0.016..5976.433 rows=7278298 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1838824.94 rows=32868813 width=12) (actual time=0.036..26513.374 rows=32439835 loops=1)
Q3,1.0,->  Hash Join  (cost=49660.32..612698.48 rows=1473690 width=12) (actual time=715.906..24684.534 rows=1455315 loops=1)
Q3,1.0,->  Hash  (cost=612698.48..612698.48 rows=1473690 width=12) (actual time=25673.023..25673.023 rows=1455315 loops=1)
Q3,1.0,->  Hash  (cost=45928.32..45928.32 rows=298560 width=4) (actual time=715.666..715.666 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6843.68 rows=298560 width=0) (actual time=84.933..84.933 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6918.32..45928.32 rows=298560 width=4) (actual time=104.561..602.773 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.030..7541.387 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=15685.121..15685.121 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597806.02..641355.68 rows=58823 width=20) (actual time=16555.341..17608.214 rows=63428 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6540.65 rows=380632 width=0) (actual time=181.323..181.323 rows=381537 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer  (cost=6635.81..51905.40 rows=380632 width=4) (actual time=201.158..636.550 rows=381537 loops=1)
Q21,1.0,->  Seq Scan on lineitem l2  (cost=0.00..1688564.46 rows=60824546 width=8) (actual time=0.014..24874.881 rows=60045033 loops=1)
Q21,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=30) (actual time=1.130..27.255 rows=4004 loops=1)
Q21,1.0,->  Hash  (cost=2391.58..2391.58 rows=4000 width=30) (actual time=28.570..28.570 rows=4004 loops=1)
Q21,1.0,->  Hash  (cost=1688564.46..1688564.46 rows=60824546 width=8) (actual time=50450.256..50450.256 rows=60045033 loops=1)
Q21,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=0.815..0.815 rows=4004 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=34) (actual time=1.116..26.274 rows=4004 loops=1)
Q2,1.0,->  Sort  (cost=395240.86..399233.87 rows=1597205 width=168) (actual time=8435.063..9057.323 rows=1603846 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..5806.62 rows=20000 width=164) (actual time=0.068..146.451 rows=20051 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..230671.90 rows=1597205 width=168) (actual time=0.087..6026.297 rows=1604080 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=7913 width=30) (actual time=0.139..1976.165 rows=7933 loops=1)
Q20,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=22021 width=4) (actual time=0.072..951.594 rows=21713 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8392.74 rows=400027 width=0) (actual time=109.185..109.185 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4193.94 rows=199747 width=0) (actual time=74.168..74.168 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..291.49 rows=8201 width=0) (actual time=5.250..5.250 rows=8047 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.45 rows=7997 width=0) (actual time=3.588..3.588 rows=8004 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.97 rows=7948 width=0) (actual time=5.918..5.918 rows=7904 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=13470.36..37666.63 rows=10421 width=30) (actual time=206.275..397.739 rows=10444 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=16) (actual time=0.012..5266.200 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1680719.65 rows=60541965 width=8) (actual time=0.058..18399.740 rows=59983922 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1680719.65 rows=60541965 width=8) (actual time=0.007..17810.796 rows=59983922 loops=1)
Q17,1.0,->  Index Only Scan using part_p_container_p_brand_p_partkey_idx on part  (cost=0.00..7917.93 rows=2005 width=4) (actual time=0.219..33.351 rows=1830 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.042..0.328 rows=30 loops=1830)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.042..0.328 rows=30 loops=1830)
Q16,1.0,Sort  (cost=456575.80..456645.62 rows=27927 width=40) (actual time=46987.843..46989.531 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=54316.60..54316.60 rows=297878 width=40) (actual time=1275.658..1275.658 rows=296283 loops=1)
Q16,1.0,->  GroupAggregate  (cost=446819.39..454513.48 rows=27927 width=40) (actual time=45809.897..46642.136 rows=27839 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5697.13 rows=320920 width=0) (actual time=62.407..62.407 rows=319132 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5771.60..54316.60 rows=297878 width=40) (actual time=71.877..1012.049 rows=296283 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47543.20 rows=2273637 width=0) (actual time=1637.651..1637.651 rows=2256624 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47543.20 rows=2273637 width=0) (actual time=1019.618..1019.618 rows=2257078 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=48111.61..1153665.16 rows=2273637 width=12) (actual time=1926.784..12742.332 rows=2243968 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=48111.61..1153665.16 rows=2273637 width=12) (actual time=1301.196..8161.468 rows=2243968 loops=1)
Q14,1.0,->  Hash Join  (cost=101707.03..1155171.13 rows=763142 width=29) (actual time=3002.483..9614.435 rows=747378 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..15994.25 rows=763142 width=0) (actual time=417.797..417.797 rows=748090 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=16185.03..1052478.44 rows=763142 width=12) (actual time=752.439..4808.683 rows=747378 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444735.19 rows=15074407 width=8) (actual time=0.043..11022.870 rows=14853446 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..815251.33 rows=15074407 width=8) (actual time=1517.623..43636.579 rows=15353467 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=20) (actual time=0.025..7806.057 rows=15015000 loops=1)
Q12,1.0,->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.00..377647.94 rows=291567 width=15) (actual time=0.217..18965.678 rows=311677 loops=1)
Q12,1.0,->  Hash Join  (cost=594902.33..981661.74 rows=291567 width=27) (actual time=15699.179..35742.407 rows=311677 loops=1)
Q12,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=20) (actual time=15690.684..15690.684 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=8) (actual time=1.066..879.260 rows=320320 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=12) (actual time=1.978..3427.761 rows=320320 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.868..44.021 rows=4004 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.044..10.033 rows=4004 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.445..1.445 rows=4004 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=0.706..0.706 rows=4004 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.831..42.060 rows=4004 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.017..8.758 rows=4004 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1835175.44 rows=60034309 width=20) (actual time=0.049..31754.254 rows=59441383 loops=1)
Q10,1.0,->  Sort  (cost=326770.80..328157.42 rows=554650 width=8) (actual time=2071.197..2288.771 rows=561597 loops=1)
Q10,1.0,->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.00..685402.22 rows=14822191 width=12) (actual time=0.086..21821.484 rows=14808181 loops=1)
Q10,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..11620.40 rows=554650 width=0) (actual time=250.082..250.082 rows=562722 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=11759.06..273853.81 rows=554650 width=8) (actual time=349.121..1854.024 rows=561597 loops=1)
Q21,,->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.00..1.98 rows=1 width=4) (actual time=0.007..0.007 rows=0 loops=1466849)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..36.77 rows=1 width=16) (actual time=0.100..0.105 rows=0 loops=10444)
Q19,,->  BitmapOr  (cost=13470.36..13470.36 rows=10431 width=0) (actual time=204.343..204.343 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8689.69..8689.69 rows=1640 width=0) (actual time=116.964..116.964 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4488.37..4488.37 rows=794 width=0) (actual time=83.406..83.406 rows=0 loops=1)
