Q21,1449371.0,->  Hash Semi Join  (cost=2654483.24..4804018.61 rows=1 width=38) (actual time=46477.148..97398.733 rows=1449371 loops=1)
Q21,699900.0,->  Nested Loop  (cost=2654483.24..4804020.57 rows=1 width=34) (actual time=46477.212..114409.309 rows=699900 loops=1)
Q18,358480.6,->  GroupAggregate  (cost=10353937.73..11182028.13 rows=30112378 width=39) (actual time=116587.751..116588.003 rows=84 loops=1)
Q3,318153.1,->  Sort  (cost=2748786.16..2756739.99 rows=3181531 width=20) (actual time=75156.502..75156.504 rows=10 loops=1)
Q18,89642.4,->  Hash Join  (cost=2185370.16..2970043.31 rows=7529968 width=39) (actual time=74896.330..85293.066 rows=84 loops=1)
Q18,89642.4,->  Hash Join  (cost=2116342.16..2750415.95 rows=7529968 width=20) (actual time=72733.726..83129.097 rows=84 loops=1)
Q18,89642.4,->  Hash  (cost=2970043.31..2970043.31 rows=7529968 width=39) (actual time=85293.418..85293.418 rows=84 loops=1)
Q18,51211.5,->  Sort  (cost=10353937.73..10429218.68 rows=30112378 width=39) (actual time=116587.725..116587.759 rows=588 loops=1)
Q18,51211.5,->  Hash Join  (cost=3064167.91..5790014.72 rows=30112378 width=39) (actual time=85619.421..116584.855 rows=588 loops=1)
Q18,48743.1,->  Hash  (cost=2065161.87..2065161.87 rows=4094423 width=4) (actual time=72544.164..72544.164 rows=84 loops=1)
Q18,48743.1,->  HashAggregate  (cost=1973037.36..2024217.64 rows=4094423 width=8) (actual time=63961.559..72543.564 rows=84 loops=1)
Q21,39230.0,->  Nested Loop Anti Join  (cost=2654483.24..4804035.46 rows=1 width=26) (actual time=46481.591..131786.416 rows=39230 loops=1)
Q10,28428.7,->  Sort  (cost=1191186.73..1192608.17 rows=568575 width=175) (actual time=29180.338..29180.344 rows=20 loops=1)
Q9,23274.9,->  Sort  (cost=3517864.02..3517864.37 rows=140 width=46) (actual time=233600.489..234632.552 rows=3258499 loops=1)
Q9,23274.9,->  Nested Loop  (cost=2848033.70..3517859.03 rows=140 width=46) (actual time=113865.083..211393.522 rows=3258499 loops=1)
Q9,23274.9,->  Nested Loop  (cost=2848033.70..3517819.10 rows=140 width=24) (actual time=113865.021..196532.856 rows=3258499 loops=1)
Q9,23274.9,->  Nested Loop  (cost=2848033.70..3517542.21 rows=140 width=24) (actual time=113864.933..143315.841 rows=3258499 loops=1)
Q9,23274.9,->  Merge Join  (cost=2848033.70..3517501.44 rows=140 width=28) (actual time=113864.863..125905.693 rows=3258499 loops=1)
Q7,14651.0,GroupAggregate  (cost=2363371.75..2365276.38 rows=58604 width=64) (actual time=80255.129..80281.527 rows=4 loops=1)
Q2,4681.0,->  Merge Join  (cost=395240.92..822943.00 rows=1 width=190) (actual time=6978.669..10349.487 rows=4681 loops=1)
Q21,3960.0,->  HashAggregate  (cost=4804035.47..4804035.48 rows=1 width=26) (actual time=131922.986..131925.401 rows=3960 loops=1)
Q15,3803.0,->  Subquery Scan on revenue1  (cost=1197058.00..1197143.57 rows=3803 width=12) (actual time=33257.018..33285.605 rows=1 loops=1)
Q15,3803.0,->  Sort  (cost=1197369.71..1197379.22 rows=3803 width=12) (actual time=33285.639..33285.640 rows=1 loops=1)
Q15,3803.0,Merge Join  (cost=2377294.13..2382392.64 rows=3803 width=79) (actual time=33322.207..33322.210 rows=1 loops=1)
Q15,3803.0,->  HashAggregate  (cost=1197058.00..1197105.54 rows=3803 width=12) (actual time=33257.016..33285.600 rows=1 loops=1)
Q8,364.5,Sort  (cost=2160990.43..2160992.26 rows=729 width=38) (actual time=28444.372..28444.373 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=2160943.01..2160955.77 rows=729 width=38) (actual time=28444.280..28444.282 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=4804035.49..4804035.49 rows=1 width=26) (actual time=131929.764..131929.770 rows=100 loops=1)
Q21,100.0,Limit  (cost=4804035.49..4804035.49 rows=1 width=26) (actual time=131929.767..131929.786 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=822943.01..822943.02 rows=1 width=190) (actual time=10358.136..10358.169 rows=100 loops=1)
Q2,100.0,Limit  (cost=822943.01..822943.02 rows=1 width=190) (actual time=10358.140..10358.187 rows=100 loops=1)
Q11,38.0,Sort  (cost=135913.51..136712.11 rows=319441 width=12) (actual time=5415.300..5416.323 rows=8406 loops=1)
Q11,38.0,->  HashAggregate  (cost=52954.85..56947.86 rows=319441 width=12) (actual time=5261.514..5409.611 rows=8406 loops=1)
Q3,28.0,->  HashAggregate  (cost=2648219.11..2680034.42 rows=3181531 width=20) (actual time=75056.127..75135.056 rows=113328 loops=1)
Q15,26.2,->  HashAggregate  (cost=1179838.85..1179876.88 rows=3803 width=12) (actual time=14940.463..15009.746 rows=100000 loops=1)
Q3,10.6,->  Hash Join  (cost=627321.29..2600496.15 rows=3181531 width=20) (actual time=26976.583..74600.755 rows=299218 loops=1)
Q4,10.0,->  Hash  (cost=1002305.18..1002305.18 rows=1364808 width=4) (actual time=80438.100..80438.100 rows=13753466 loops=1)
Q4,10.0,->  HashAggregate  (cost=988657.10..1002305.18 rows=1364808 width=4) (actual time=67422.797..76723.869 rows=13753466 loops=1)
Q16,5.6,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.00..8.45 rows=10 width=4) (actual time=0.085..0.864 rows=56 loops=1)
Q5,5.0,Sort  (cost=2431346.88..2431346.94 rows=25 width=34) (actual time=71999.099..71999.099 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2431346.05..2431346.30 rows=25 width=34) (actual time=71998.979..71998.982 rows=5 loops=1)
Q4,5.0,Sort  (cost=1303561.44..1303561.45 rows=1 width=16) (actual time=92001.162..92001.163 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1303561.42..1303561.43 rows=1 width=16) (actual time=92000.992..92000.993 rows=5 loops=1)
Q21,5.0,->  Index Scan using lineitem_l_orderkey_idx on lineitem l3  (cost=0.00..7.42 rows=5 width=8) (actual time=0.024..0.024 rows=1 loops=699900)
Q13,4.5,Sort  (cost=928133.01..928133.51 rows=200 width=8) (actual time=66110.391..66110.393 rows=44 loops=1)
Q13,4.5,->  HashAggregate  (cost=928123.36..928125.36 rows=200 width=8) (actual time=66110.285..66110.297 rows=44 loops=1)
Q17,3.7,->  Nested Loop  (cost=140.78..405048.69 rows=20306 width=4) (actual time=1.344..975.302 rows=5400 loops=1)
Q4,3.3,->  Hash Join  (cost=1031830.07..1302788.93 rows=154499 width=16) (actual time=81053.696..91778.683 rows=515065 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=140.78..196.77 rows=10 width=12) (actual time=0.014..0.017 rows=3 loops=1970)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..575.31 rows=1 width=8) (actual time=0.404..0.516 rows=3 loops=21738)
Q22,2.3,Sort  (cost=698255.98..698255.98 rows=3 width=20) (actual time=13244.249..13244.249 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=645364.91..645364.95 rows=3 width=20) (actual time=13244.180..13244.183 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.00..49.84 rows=1 width=4) (actual time=0.058..0.086 rows=2 loops=6305)
Q20,2.0,->  Nested Loop  (cost=0.00..12734689.26 rows=29235 width=4) (actual time=0.923..12423.803 rows=58989 loops=1)
Q16,2.0,->  Sort  (cost=446544.77..448023.36 rows=591434 width=40) (actual time=44919.329..45204.469 rows=1188267 loops=1)
Q16,2.0,->  Hash Join  (cost=57972.08..389844.42 rows=591434 width=40) (actual time=1358.378..13354.315 rows=1188267 loops=1)
Q12,2.0,Sort  (cost=986914.62..986914.63 rows=1 width=27) (actual time=39340.355..39340.356 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=986914.60..986914.61 rows=1 width=27) (actual time=39340.213..39340.214 rows=2 loops=1)
Q10,2.0,->  Merge Join  (cost=331892.14..1067938.06 rows=568575 width=12) (actual time=2155.399..21688.417 rows=1138041 loops=1)
Q10,2.0,->  Hash Join  (cost=400921.71..1156157.03 rows=568575 width=175) (actual time=3757.812..25891.810 rows=1138041 loops=1)
Q10,2.0,->  Hash Join  (cost=400920.14..1148337.56 rows=568575 width=153) (actual time=3757.773..25319.164 rows=1138041 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.48..270966.48 rows=4000000 width=8) (actual time=0.927..5207.883 rows=7995520 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.00..937955.53 rows=20280629 width=4) (actual time=0.240..30407.724 rows=37928218 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817038.70 rows=20015032 width=8) (actual time=0.014..24359.368 rows=37928797 loops=1)
Q21,1.8,->  Hash Join  (cost=2441.58..1902532.27 rows=799562 width=34) (actual time=53.066..35237.646 rows=1503054 loops=1)
Q20,1.5,Sort  (cost=12740177.87..12740180.80 rows=1169 width=51) (actual time=12896.004..12896.221 rows=1826 loops=1)
Q20,1.5,->  Nested Loop  (cost=12735712.48..12740118.31 rows=1169 width=51) (actual time=12573.334..12861.520 rows=1826 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=12735712.48..12739751.56 rows=29235 width=55) (actual time=12573.160..12853.847 rows=44695 loops=1)
Q20,1.5,->  Hash  (cost=12735347.04..12735347.04 rows=29235 width=4) (actual time=12573.087..12573.087 rows=44695 loops=1)
Q20,1.5,->  HashAggregate  (cost=12734762.34..12735054.69 rows=29235 width=4) (actual time=12529.668..12555.861 rows=44695 loops=1)
Q1,1.5,Sort  (cost=4249903.12..4249903.14 rows=6 width=20) (actual time=111573.258..111573.258 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4249902.94..4249903.04 rows=6 width=20) (actual time=111573.159..111573.163 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=1170371.40..1176057.15 rows=568575 width=175) (actual time=28623.375..29004.256 rows=379038 loops=1)
Q15,1.4,->  Index Scan using pk_supplier on supplier  (cost=0.00..4791.46 rows=100000 width=71) (actual time=0.078..29.231 rows=69999 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2872.25 rows=139832 width=0) (actual time=1018.754..1018.754 rows=190765 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2907.20..41855.79 rows=139832 width=24) (actual time=1028.883..1228.573 rows=190765 loops=1)
Q9,1.2,GroupAggregate  (cost=3517864.02..3517868.92 rows=140 width=46) (actual time=233614.458..237008.846 rows=175 loops=1)
Q19,1.1,->  Nested Loop  (cost=13452.39..419507.66 rows=1015 width=8) (actual time=272.880..1729.323 rows=1131 loops=1)
Q18,1.1,Limit  (cost=10353937.73..10353940.48 rows=100 width=39) (actual time=116587.754..116588.017 rows=84 loops=1)
Q9,1.0,->  Sort  (cost=2848033.70..2856826.85 rows=3517263 width=28) (actual time=113864.655..116088.636 rows=3258499 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=116112 width=4) (actual time=0.025..1290.472 rows=108555 loops=1)
Q9,1.0,->  Seq Scan on lineitem  (cost=0.00..1681885.66 rows=60583966 width=24) (actual time=0.033..20422.943 rows=60044176 loops=1)
Q9,1.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..603091.29 rows=8000000 width=12) (actual time=0.008..5801.107 rows=7999981 loops=1)
Q9,1.0,->  Hash Join  (cost=66973.40..2465601.31 rows=3517263 width=28) (actual time=1349.115..109738.219 rows=3258499 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=116112 width=4) (actual time=1348.758..1348.758 rows=108555 loops=1)
Q8,1.0,->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=30.681..1175.638 rows=300270 loops=1)
Q8,1.0,->  Nested Loop  (cost=500956.66..2160460.39 rows=24131 width=38) (actual time=21556.248..28386.944 rows=24255 loops=1)
Q8,1.0,->  Nested Loop  (cost=500956.66..2153578.23 rows=24131 width=16) (actual time=21556.173..28243.807 rows=24255 loops=1)
Q8,1.0,->  Nested Loop  (cost=0.00..1643347.68 rows=399248 width=16) (actual time=0.436..5138.516 rows=397028 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..120.89 rows=31 width=20) (actual time=0.036..0.359 rows=30 loops=13234)
Q8,1.0,->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..45882.97 rows=13180 width=4) (actual time=0.342..212.070 rows=13234 loops=1)
Q8,1.0,->  Hash Join  (cost=500956.66..2146542.21 rows=24162 width=16) (actual time=21556.126..27942.663 rows=24255 loops=1)
Q8,1.0,->  Hash Join  (cost=138569.99..489495.84 rows=916866 width=8) (actual time=4660.785..20033.609 rows=913270 loops=1)
Q8,1.0,->  Hash  (cost=489495.84..489495.84 rows=916866 width=8) (actual time=21554.168..21554.168 rows=913270 loops=1)
Q8,1.0,->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=1333.903..1333.903 rows=300270 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..98393.29 rows=4584330 width=0) (actual time=3188.943..3188.943 rows=4602796 loops=1)
Q8,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=19.839..19.839 rows=60054 loops=5)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=99539.37..424105.32 rows=4584330 width=12) (actual time=3326.397..7437.539 rows=4561673 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=29.080..217.510 rows=60054 loops=5)
Q7,1.0,->  Sort  (cost=2363371.75..2363518.26 rows=58604 width=64) (actual time=80245.852..80254.243 rows=57472 loops=1)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=8) (actual time=0.018..5141.126 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=905.09..14139.26 rows=119904 width=60) (actual time=19.304..358.272 rows=119913 loops=1)
Q7,1.0,->  Hash Join  (cost=897939.42..2358730.69 rows=58604 width=64) (actual time=44103.994..79981.690 rows=57472 loops=1)
Q7,1.0,->  Hash Join  (cost=893260.42..2323832.57 rows=1467003 width=72) (actual time=43980.966..76889.570 rows=1459746 loops=1)
Q7,1.0,->  Hash Join  (cost=15638.06..489973.51 rows=1206227 width=60) (actual time=403.916..26732.177 rows=1199748 loops=1)
Q7,1.0,->  Hash  (cost=489973.51..489973.51 rows=1206227 width=60) (actual time=28417.018..28417.018 rows=1199748 loops=1)
Q7,1.0,->  Hash  (cost=14139.26..14139.26 rows=119904 width=60) (actual time=403.778..403.778 rows=119913 loops=1)
Q7,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..383621.02 rows=18352219 width=0) (actual time=14764.844..14764.844 rows=18338343 loops=1)
Q7,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=12.573..12.573 rows=59956 loops=2)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=388209.07..1735290.36 rows=18352219 width=20) (actual time=15562.997..29516.451 rows=18247594 loops=1)
Q7,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=18.685..166.185 rows=59956 loops=2)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..191809.76 rows=9180693 width=0) (actual time=6034.652..6034.652 rows=9163162 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=192010.59..1471432.18 rows=803304 width=8) (actual time=6766.894..22948.505 rows=794587 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1673592.26 rows=60285226 width=16) (actual time=0.028..17327.489 rows=60046221 loops=1)
Q5,1.0,->  Nested Loop  (cost=905.09..35292.22 rows=300000 width=38) (actual time=33.656..1635.924 rows=299493 loops=1)
Q5,1.0,->  Hash Join  (cost=87543.23..389559.54 rows=457661 width=38) (actual time=3257.783..12781.973 rows=455295 loops=1)
Q5,1.0,->  Hash Join  (cost=399959.31..2430614.94 rows=73111 width=34) (actual time=13265.001..71843.774 rows=72300 loops=1)
Q5,1.0,->  Hash Join  (cost=395280.31..2388600.75 rows=1830204 width=46) (actual time=13131.168..68276.170 rows=1823740 loops=1)
Q5,1.0,->  Hash  (cost=389559.54..389559.54 rows=457661 width=38) (actual time=13130.355..13130.355 rows=455295 loops=1)
Q5,1.0,->  Hash  (cost=35292.22..35292.22 rows=300000 width=38) (actual time=1850.549..1850.549 rows=299493 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..47928.94 rows=2288304 width=0) (actual time=1310.398..1310.398 rows=2287382 loops=1)
Q5,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=22.116..22.116 rows=59899 loops=5)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=48501.02..337359.58 rows=2288304 width=8) (actual time=1406.845..5144.645 rows=2278174 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=31.738..304.534 rows=59899 loops=5)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12321.30 rows=573931 width=0) (actual time=499.664..499.664 rows=569495 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=12464.79..277886.75 rows=573931 width=20) (actual time=613.951..2298.959 rows=561797 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..442089.90 rows=7418453 width=16) (actual time=0.013..7029.708 rows=7365567 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1820672.86 rows=32183116 width=12) (actual time=0.028..27439.788 rows=32090603 loops=1)
Q3,1.0,->  Hash Join  (cost=49763.39..608730.03 rows=1487301 width=12) (actual time=1236.819..26116.228 rows=1473562 loops=1)
Q3,1.0,->  Hash  (cost=608730.03..608730.03 rows=1487301 width=12) (actual time=26974.809..26974.809 rows=1473562 loops=1)
Q3,1.0,->  Hash  (cost=46004.26..46004.26 rows=300730 width=4) (actual time=1236.631..1236.631 rows=299496 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6891.96 rows=300730 width=0) (actual time=113.565..113.565 rows=299496 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6967.14..46004.26 rows=300730 width=4) (actual time=127.827..1076.302 rows=299496 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..408509.11 rows=15194911 width=4) (actual time=0.026..5225.778 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=408509.11..408509.11 rows=15194911 width=4) (actual time=11637.558..11637.558 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=601352.70..644922.65 rows=58967 width=20) (actual time=12678.361..13217.968 rows=64158 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6547.63 rows=381564 width=0) (actual time=184.765..184.765 rows=381728 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer  (cost=6643.02..51937.08 rows=381564 width=4) (actual time=205.639..803.101 rows=381728 loops=1)
Q21,1.0,->  Seq Scan on lineitem l2  (cost=0.00..1666925.96 rows=60045096 width=8) (actual time=0.043..22540.296 rows=59985329 loops=1)
Q21,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=30) (actual time=1.196..50.612 rows=3961 loops=1)
Q21,1.0,->  Hash  (cost=2391.58..2391.58 rows=4000 width=30) (actual time=52.999..52.999 rows=3961 loops=1)
Q21,1.0,->  Hash  (cost=1666925.96..1666925.96 rows=60045096 width=8) (actual time=46400.767..46400.767 rows=59985329 loops=1)
Q21,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=0.860..0.860 rows=3961 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=34) (actual time=1.183..48.975 rows=3961 loops=1)
Q2,1.0,->  Sort  (cost=395240.86..399233.87 rows=1597205 width=168) (actual time=6977.670..7569.777 rows=1603324 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..5806.62 rows=20000 width=164) (actual time=0.088..150.344 rows=20042 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..230671.90 rows=1597205 width=168) (actual time=0.108..4879.545 rows=1603360 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=8000 width=30) (actual time=0.375..1394.557 rows=7939 loops=1)
Q20,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=22021 width=4) (actual time=0.019..1147.358 rows=21738 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8392.74 rows=400027 width=0) (actual time=135.222..135.222 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4193.94 rows=199747 width=0) (actual time=104.318..104.318 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.41 rows=8090 width=0) (actual time=5.887..5.887 rows=8135 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.37 rows=7988 width=0) (actual time=4.171..4.171 rows=8083 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.21 rows=7874 width=0) (actual time=7.406..7.406 rows=8005 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=13452.39..37591.38 rows=10383 width=30) (actual time=269.794..367.745 rows=10500 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=16) (actual time=0.017..4716.093 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1671913.57 rows=60224757 width=8) (actual time=0.038..19850.249 rows=60045303 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1671913.57 rows=60224757 width=8) (actual time=0.037..17730.259 rows=60045303 loops=1)
Q17,1.0,->  Index Only Scan using part_p_container_p_brand_p_partkey_idx on part  (cost=0.00..7966.15 rows=2017 width=4) (actual time=0.283..40.145 rows=1970 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.050..0.438 rows=30 loops=1970)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.050..0.438 rows=30 loops=1970)
Q16,1.0,Sort  (cost=456271.73..456341.34 rows=27844 width=40) (actual time=46197.257..46200.517 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=54251.12..54251.12 rows=296998 width=40) (actual time=1357.147..1357.147 rows=297226 loops=1)
Q16,1.0,->  GroupAggregate  (cost=446544.77..454216.14 rows=27844 width=40) (actual time=44919.446..45828.158 rows=27840 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5660.55 rows=319773 width=0) (actual time=76.368..76.368 rows=320215 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5734.80..54251.12 rows=296998 width=40) (actual time=87.310..1164.105 rows=297226 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47949.70 rows=2295887 width=0) (actual time=1831.459..1831.459 rows=2258483 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47949.70 rows=2295887 width=0) (actual time=1184.081..1184.081 rows=2258483 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=48523.67..1156879.98 rows=2295887 width=12) (actual time=2243.928..14171.349 rows=2242956 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=48523.67..1156879.98 rows=2295887 width=12) (actual time=1608.196..11226.316 rows=2242956 loops=1)
Q14,1.0,->  Hash Join  (cost=102134.19..1171346.43 rows=786474 width=29) (actual time=3282.768..13082.161 rows=774757 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..16415.57 rows=786474 width=0) (actual time=540.347..540.347 rows=781693 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=16612.19..1068128.77 rows=786474 width=12) (actual time=823.968..7811.086 rows=774757 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444735.19 rows=15074407 width=8) (actual time=0.034..11159.814 rows=14853446 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..815251.33 rows=15074407 width=8) (actual time=1759.650..48825.826 rows=15353467 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=20) (actual time=0.030..7385.773 rows=15015000 loops=1)
Q12,1.0,->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.00..377647.94 rows=294653 width=15) (actual time=0.376..22303.637 rows=312603 loops=1)
Q12,1.0,->  Hash Join  (cost=594902.33..981758.18 rows=294653 width=27) (actual time=15297.233..38757.157 rows=312603 loops=1)
Q12,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=20) (actual time=15279.101..15279.101 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=8) (actual time=1.063..988.684 rows=327600 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=12) (actual time=1.893..3494.548 rows=327600 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.836..27.182 rows=4095 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.040..12.499 rows=4095 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.431..1.431 rows=4095 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=0.705..0.705 rows=4095 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.805..25.115 rows=4095 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.022..11.273 rows=4095 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1838824.94 rows=60276950 width=20) (actual time=0.030..29529.317 rows=59561319 loops=1)
Q10,1.0,->  Sort  (cost=331884.59..333325.99 rows=576560 width=8) (actual time=2155.266..2306.893 rows=568635 loops=1)
Q10,1.0,->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.00..690171.56 rows=14925352 width=12) (actual time=0.108..16660.374 rows=14822803 loops=1)
Q10,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12375.58 rows=576560 width=0) (actual time=312.226..312.226 rows=573228 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=12519.72..276716.12 rows=576560 width=8) (actual time=431.543..1954.712 rows=568635 loops=1)
Q21,,->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.00..1.94 rows=1 width=4) (actual time=0.011..0.011 rows=0 loops=1449371)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..36.77 rows=1 width=16) (actual time=0.118..0.123 rows=0 loops=10500)
Q19,,->  BitmapOr  (cost=13452.39..13452.39 rows=10393 width=0) (actual time=267.679..267.679 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8688.59..8688.59 rows=1618 width=0) (actual time=145.566..145.566 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4471.59..4471.59 rows=786 width=0) (actual time=117.456..117.456 rows=0 loops=1)
