Q21,1500057.0,->  Hash Semi Join  (cost=2670350.72..4832746.20 rows=1 width=38) (actual time=48827.403..104502.413 rows=1500057 loops=1)
Q21,724664.0,->  Nested Loop  (cost=2670350.72..4832748.17 rows=1 width=34) (actual time=48827.450..120070.515 rows=724664 loops=1)
Q3,320944.1,->  Sort  (cost=2772860.82..2780884.42 rows=3209441 width=20) (actual time=78214.447..78214.450 rows=10 loops=1)
Q18,300526.9,->  GroupAggregate  (cost=10333483.15..11159932.35 rows=30052698 width=39) (actual time=121092.962..121093.284 rows=100 loops=1)
Q18,67702.5,->  Hash Join  (cost=2181459.75..2964652.93 rows=7514984 width=39) (actual time=78099.590..88009.311 rows=111 loops=1)
Q18,67702.5,->  Hash Join  (cost=2112431.75..2745325.25 rows=7514984 width=20) (actual time=76333.586..86239.823 rows=111 loops=1)
Q18,67702.5,->  Hash  (cost=2964652.93..2964652.93 rows=7514984 width=39) (actual time=88010.111..88010.111 rows=111 loops=1)
Q18,42871.1,->  Sort  (cost=10333483.15..10408614.90 rows=30052698 width=39) (actual time=121092.945..121092.996 rows=701 loops=1)
Q21,40978.0,->  Nested Loop Anti Join  (cost=2670350.72..4832763.21 rows=1 width=26) (actual time=48828.841..137840.210 rows=40978 loops=1)
Q18,38677.8,->  Hash Join  (cost=3058590.23..5779034.62 rows=30052698 width=39) (actual time=88564.871..121089.401 rows=777 loops=1)
Q18,36886.6,->  Hash  (cost=2061251.46..2061251.46 rows=4094423 width=4) (actual time=76087.183..76087.183 rows=111 loops=1)
Q18,36886.6,->  HashAggregate  (cost=1969126.94..2020307.23 rows=4094423 width=8) (actual time=66271.995..76086.187 rows=111 loops=1)
Q10,28655.9,->  Sort  (cost=1192331.17..1193763.96 rows=573119 width=175) (actual time=33126.947..33126.951 rows=20 loops=1)
Q9,26088.2,->  Sort  (cost=3390894.82..3390895.13 rows=125 width=46) (actual time=245241.316..246213.743 rows=3261034 loops=1)
Q9,26088.2,->  Nested Loop  (cost=2723853.36..3390890.46 rows=125 width=46) (actual time=116626.207..225391.314 rows=3261034 loops=1)
Q9,26088.2,->  Nested Loop  (cost=2723853.36..3390854.81 rows=125 width=24) (actual time=116626.113..208455.150 rows=3261034 loops=1)
Q9,26088.2,->  Nested Loop  (cost=2723853.36..3390608.00 rows=125 width=24) (actual time=116626.016..147758.083 rows=3261034 loops=1)
Q9,26088.2,->  Merge Join  (cost=2723853.36..3390571.60 rows=125 width=28) (actual time=116625.895..128629.275 rows=3261034 loops=1)
Q7,14636.5,GroupAggregate  (cost=2361253.07..2363155.81 rows=58546 width=64) (actual time=82931.333..82954.978 rows=4 loops=1)
Q2,4618.0,->  Merge Join  (cost=395240.92..828528.79 rows=1 width=190) (actual time=8974.652..13135.656 rows=4618 loops=1)
Q21,4095.0,->  HashAggregate  (cost=4832763.22..4832763.23 rows=1 width=26) (actual time=137988.617..137991.440 rows=4095 loops=1)
Q15,3763.0,->  Subquery Scan on revenue10  (cost=1188822.23..1188906.90 rows=3763 width=12) (actual time=23420.933..23421.147 rows=1 loops=1)
Q15,3763.0,->  Sort  (cost=1189130.38..1189139.79 rows=3763 width=12) (actual time=23421.174..23421.176 rows=1 loops=1)
Q15,3763.0,Merge Join  (cost=2361099.50..2366197.41 rows=3763 width=79) (actual time=23441.425..23441.430 rows=1 loops=1)
Q15,3763.0,->  HashAggregate  (cost=1188822.23..1188869.27 rows=3763 width=12) (actual time=23420.932..23421.145 rows=1 loops=1)
Q8,364.5,Sort  (cost=2176059.74..2176061.57 rows=729 width=38) (actual time=30984.376..30984.377 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=2176012.32..2176025.08 rows=729 width=38) (actual time=30984.296..30984.298 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=4832763.24..4832763.24 rows=1 width=26) (actual time=137995.978..137995.989 rows=100 loops=1)
Q21,100.0,Limit  (cost=4832763.24..4832763.24 rows=1 width=26) (actual time=137995.982..137996.012 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=828528.80..828528.81 rows=1 width=190) (actual time=13145.027..13145.052 rows=100 loops=1)
Q2,100.0,Limit  (cost=828528.80..828528.81 rows=1 width=190) (actual time=13145.030..13145.073 rows=100 loops=1)
Q11,34.1,Sort  (cost=135913.51..136712.11 rows=319441 width=12) (actual time=3672.057..3673.555 rows=9363 loops=1)
Q11,34.1,->  HashAggregate  (cost=52954.85..56947.86 rows=319441 width=12) (actual time=3535.006..3664.978 rows=9363 loops=1)
Q3,28.3,->  HashAggregate  (cost=2671411.54..2703505.95 rows=3209441 width=20) (actual time=78128.831..78193.729 rows=113375 loops=1)
Q15,26.5,->  HashAggregate  (cost=1171884.44..1171922.07 rows=3763 width=12) (actual time=11490.722..11562.340 rows=100000 loops=1)
Q3,10.7,->  Hash Join  (cost=631857.72..2623269.93 rows=3209441 width=20) (actual time=25420.077..77641.117 rows=298895 loops=1)
Q4,10.0,->  Hash  (cost=1002023.58..1002023.58 rows=1364808 width=4) (actual time=75887.340..75887.340 rows=13767230 loops=1)
Q4,10.0,->  HashAggregate  (cost=988375.50..1002023.58 rows=1364808 width=4) (actual time=61207.235..70756.332 rows=13767230 loops=1)
Q16,5.6,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.00..8.45 rows=10 width=4) (actual time=0.100..0.992 rows=56 loops=1)
Q5,5.0,Sort  (cost=2456665.32..2456665.38 rows=25 width=34) (actual time=66775.440..66775.441 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2456664.49..2456664.74 rows=25 width=34) (actual time=66775.316..66775.317 rows=5 loops=1)
Q4,5.0,Sort  (cost=1303069.51..1303069.51 rows=1 width=16) (actual time=90467.096..90467.096 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1303069.49..1303069.50 rows=1 width=16) (actual time=90466.912..90466.914 rows=5 loops=1)
Q21,5.0,->  Index Scan using lineitem_l_orderkey_idx on lineitem l3  (cost=0.00..7.50 rows=5 width=8) (actual time=0.024..0.024 rows=1 loops=724664)
Q13,4.3,Sort  (cost=922682.09..922682.59 rows=200 width=8) (actual time=64760.206..64760.208 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=922672.45..922674.45 rows=200 width=8) (actual time=64760.080..64760.090 rows=46 loops=1)
Q17,3.7,->  Nested Loop  (cost=140.78..397629.73 rows=19855 width=4) (actual time=1.280..800.042 rows=5261 loops=1)
Q4,3.3,->  Hash Join  (cost=1031454.56..1302303.02 rows=153293 width=16) (actual time=76459.607..90089.232 rows=520465 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=140.78..196.77 rows=10 width=12) (actual time=0.007..0.009 rows=3 loops=1918)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..575.31 rows=1 width=8) (actual time=0.522..0.640 rows=3 loops=21901)
Q15,2.7,->  Index Scan using pk_supplier on supplier  (cost=0.00..4791.46 rows=100000 width=71) (actual time=0.040..16.381 rows=37000 loops=1)
Q22,2.3,Sort  (cost=694043.02..694043.03 rows=3 width=20) (actual time=17112.558..17112.559 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641196.60..641196.65 rows=3 width=20) (actual time=17112.480..17112.484 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.00..49.84 rows=1 width=4) (actual time=0.067..0.100 rows=2 loops=6306)
Q20,2.0,->  Nested Loop  (cost=0.00..12734689.26 rows=29235 width=4) (actual time=0.976..15141.286 rows=59459 loops=1)
Q16,2.0,->  Sort  (cost=446404.70..447880.48 rows=590314 width=40) (actual time=42180.631..42491.912 rows=1189828 loops=1)
Q16,2.0,->  Hash Join  (cost=57958.64..389819.78 rows=590314 width=40) (actual time=976.683..11236.452 rows=1189828 loops=1)
Q12,2.0,Sort  (cost=982844.78..982844.79 rows=1 width=27) (actual time=40156.612..40156.612 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=982844.76..982844.77 rows=1 width=27) (actual time=40156.491..40156.492 rows=2 loops=1)
Q10,2.0,->  Merge Join  (cost=332534.79..1068649.18 rows=573119 width=12) (actual time=2750.148..24270.028 rows=1149529 loops=1)
Q10,2.0,->  Hash Join  (cost=401564.35..1157021.51 rows=573119 width=175) (actual time=4589.175..29018.723 rows=1149529 loops=1)
Q10,2.0,->  Hash Join  (cost=401562.79..1149139.56 rows=573119 width=153) (actual time=4589.127..28318.745 rows=1149529 loops=1)
Q21,1.9,->  Hash Join  (cost=2441.58..1913901.01 rows=804346 width=34) (actual time=52.537..43040.559 rows=1555741 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.48..270966.48 rows=4000000 width=8) (actual time=1.074..4093.329 rows=7995520 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.00..937688.38 rows=20274849 width=4) (actual time=0.248..28384.225 rows=37966096 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1827910.52 rows=20134787 width=8) (actual time=0.043..28730.464 rows=37966100 loops=1)
Q20,1.5,Sort  (cost=12740177.87..12740180.80 rows=1169 width=51) (actual time=15396.505..15396.621 rows=1833 loops=1)
Q20,1.5,->  Nested Loop  (cost=12735712.48..12740118.31 rows=1169 width=51) (actual time=15294.589..15389.218 rows=1833 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=12735712.48..12739751.56 rows=29235 width=55) (actual time=15294.516..15384.412 rows=44926 loops=1)
Q20,1.5,->  Hash  (cost=12735347.04..12735347.04 rows=29235 width=4) (actual time=15294.465..15294.465 rows=44926 loops=1)
Q20,1.5,->  HashAggregate  (cost=12734762.34..12735054.69 rows=29235 width=4) (actual time=15253.494..15281.173 rows=44926 loops=1)
Q1,1.5,Sort  (cost=4205079.81..4205079.82 rows=6 width=20) (actual time=117300.146..117300.146 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4205079.62..4205079.73 rows=6 width=20) (actual time=117300.029..117300.033 rows=4 loops=1)
Q9,1.4,GroupAggregate  (cost=3390894.82..3390899.19 rows=125 width=46) (actual time=245253.108..248659.947 rows=175 loops=1)
Q10,1.4,->  HashAggregate  (cost=1171349.49..1177080.68 rows=573119 width=175) (actual time=32546.144..32968.487 rows=382271 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2867.77 rows=139383 width=0) (actual time=885.390..885.390 rows=190686 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2902.61..41839.42 rows=139383 width=24) (actual time=899.079..1107.578 rows=190686 loops=1)
Q19,1.1,->  Nested Loop  (cost=13471.64..424482.62 rows=1032 width=8) (actual time=256.981..1671.064 rows=1195 loops=1)
Q9,1.0,->  Sort  (cost=2723853.36..2731730.07 rows=3150683 width=28) (actual time=116625.851..118880.199 rows=3261034 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=104114 width=4) (actual time=0.016..1116.441 rows=108577 loops=1)
Q9,1.0,->  Seq Scan on lineitem  (cost=0.00..1680213.23 rows=60523723 width=24) (actual time=0.026..19570.983 rows=60044082 loops=1)
Q9,1.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..603091.29 rows=8000000 width=12) (actual time=0.007..5554.327 rows=7999925 loops=1)
Q9,1.0,->  Hash Join  (cost=66823.43..2383780.71 rows=3150683 width=28) (actual time=1163.556..112588.418 rows=3261034 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=104114 width=4) (actual time=1163.230..1163.230 rows=108577 loops=1)
Q8,1.0,->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=33.210..1646.817 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=503245.15..2175535.88 rows=23822 width=38) (actual time=23679.797..30918.992 rows=24275 loops=1)
Q8,1.0,->  Nested Loop  (cost=503245.15..2168741.85 rows=23822 width=16) (actual time=23679.711..30752.947 rows=24275 loops=1)
Q8,1.0,->  Nested Loop  (cost=0.00..1656341.47 rows=394135 width=16) (actual time=0.516..5569.872 rows=398777 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..124.12 rows=32 width=20) (actual time=0.042..0.386 rows=30 loops=13296)
Q8,1.0,->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..45182.90 rows=12947 width=4) (actual time=0.432..243.771 rows=13296 loops=1)
Q8,1.0,->  Hash Join  (cost=503245.15..2161795.82 rows=23853 width=16) (actual time=23679.652..30401.094 rows=24275 loops=1)
Q8,1.0,->  Hash Join  (cost=139066.38..491727.65 rows=921400 width=8) (actual time=5088.167..23005.791 rows=913899 loops=1)
Q8,1.0,->  Hash  (cost=491727.65..491727.65 rows=921400 width=8) (actual time=23677.703..23677.703 rows=913899 loops=1)
Q8,1.0,->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=1819.009..1819.009 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..98884.01 rows=4607001 width=0) (actual time=3079.017..3079.017 rows=4625776 loops=1)
Q8,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=22.740..22.740 rows=60193 loops=5)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=100035.76..426206.77 rows=4607001 width=12) (actual time=3268.829..8666.042 rows=4561762 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=32.319..310.520 rows=60193 loops=5)
Q7,1.0,->  Sort  (cost=2361253.07..2361399.43 rows=58546 width=64) (actual time=82922.716..82927.597 rows=58485 loops=1)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=8) (actual time=0.023..4313.793 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=905.09..14139.26 rows=119904 width=60) (actual time=20.835..600.891 rows=120387 loops=1)
Q7,1.0,->  Hash Join  (cost=897267.75..2356617.02 rows=58546 width=64) (actual time=41171.790..82025.963 rows=58485 loops=1)
Q7,1.0,->  Hash Join  (cost=892588.75..2321748.73 rows=1465555 width=72) (actual time=41036.758..78622.754 rows=1463811 loops=1)
Q7,1.0,->  Hash Join  (cost=15638.06..489502.50 rows=1205029 width=60) (actual time=674.391..26492.027 rows=1205677 loops=1)
Q7,1.0,->  Hash  (cost=489502.50..489502.50 rows=1205029 width=60) (actual time=27207.964..27207.964 rows=1205677 loops=1)
Q7,1.0,->  Hash  (cost=14139.26..14139.26 rows=119904 width=60) (actual time=674.231..674.231 rows=120387 loops=1)
Q7,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..383439.86 rows=18334103 width=0) (actual time=12683.337..12683.337 rows=18320255 loops=1)
Q7,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=13.505..13.505 rows=60194 loops=2)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=388023.38..1733774.93 rows=18334103 width=20) (actual time=13827.873..30598.580 rows=18247443 loops=1)
Q7,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=20.578..283.704 rows=60194 loops=2)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..192416.18 rows=9180935 width=0) (actual time=7816.626..7816.626 rows=9132610 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=192515.98..1465562.02 rows=399208 width=8) (actual time=8422.108..27211.642 rows=398912 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1690225.96 rows=60884396 width=16) (actual time=0.056..13444.066 rows=60044793 loops=1)
Q5,1.0,->  Nested Loop  (cost=905.09..35292.22 rows=300000 width=38) (actual time=23.948..1540.249 rows=299838 loops=1)
Q5,1.0,->  Hash Join  (cost=89345.42..394481.00 rows=463321 width=38) (actual time=3088.155..12875.343 rows=456602 loops=1)
Q5,1.0,->  Hash Join  (cost=404951.51..2455924.34 rows=74015 width=34) (actual time=13328.937..66674.244 rows=72852 loops=1)
Q5,1.0,->  Hash Join  (cost=400272.51..2413448.69 rows=1852825 width=46) (actual time=13209.848..63022.139 rows=1826761 loops=1)
Q5,1.0,->  Hash  (cost=394481.00..394481.00 rows=463321 width=38) (actual time=13209.164..13209.164 rows=456602 loops=1)
Q5,1.0,->  Hash  (cost=35292.22..35292.22 rows=300000 width=38) (actual time=1753.172..1753.172 rows=299838 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..49724.06 rows=2316606 width=0) (actual time=1213.934..1213.934 rows=2316079 loops=1)
Q5,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=19.509..19.509 rows=59968 loops=5)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=50303.21..342118.30 rows=2316606 width=8) (actual time=1334.405..4572.789 rows=2284232 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=29.128..285.168 rows=59968 loops=5)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12228.51 rows=569452 width=0) (actual time=418.553..418.553 rows=575012 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=12370.88..277725.66 rows=569452 width=20) (actual time=570.323..3474.663 rows=567636 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..446056.09 rows=7449680 width=16) (actual time=0.021..6567.484 rows=7328331 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1836995.08 rows=32619393 width=12) (actual time=0.054..29449.005 rows=32239577 loops=1)
Q3,1.0,->  Hash Join  (cost=49763.39..613188.20 rows=1493562 width=12) (actual time=832.165..24633.700 rows=1466135 loops=1)
Q3,1.0,->  Hash  (cost=613188.20..613188.20 rows=1493562 width=12) (actual time=25417.266..25417.266 rows=1466135 loops=1)
Q3,1.0,->  Hash  (cost=46004.26..46004.26 rows=300730 width=4) (actual time=831.876..831.876 rows=299496 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6891.96 rows=300730 width=0) (actual time=109.261..109.261 rows=299496 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6967.14..46004.26 rows=300730 width=4) (actual time=121.906..682.033 rows=299496 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=4) (actual time=0.045..6309.771 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=405686.04..405686.04 rows=15089904 width=4) (actual time=15606.732..15606.732 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597212.45..640755.77 rows=58778 width=20) (actual time=16517.143..17080.727 rows=63431 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6538.45 rows=380341 width=0) (actual time=146.909..146.909 rows=381293 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer  (cost=6633.53..51895.48 rows=380341 width=4) (actual time=159.660..657.065 rows=381293 loops=1)
Q21,1.0,->  Seq Scan on lineitem l2  (cost=0.00..1676899.62 rows=60404362 width=8) (actual time=16.722..26188.702 rows=60045310 loops=1)
Q21,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=30) (actual time=1.958..49.384 rows=4095 loops=1)
Q21,1.0,->  Hash  (cost=2391.58..2391.58 rows=4000 width=30) (actual time=52.390..52.390 rows=4095 loops=1)
Q21,1.0,->  Hash  (cost=1676899.62..1676899.62 rows=60404362 width=8) (actual time=48750.248..48750.248 rows=60045310 loops=1)
Q21,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.510..1.510 rows=4095 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=34) (actual time=1.938..47.528 rows=4095 loops=1)
Q2,1.0,->  Sort  (cost=395240.86..399233.87 rows=1597205 width=168) (actual time=8974.307..9517.330 rows=1602632 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..5806.62 rows=20000 width=164) (actual time=0.069..184.146 rows=20033 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..230671.90 rows=1597205 width=168) (actual time=0.159..7012.060 rows=1602640 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=8141 width=30) (actual time=0.036..2027.930 rows=7869 loops=1)
Q20,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=22021 width=4) (actual time=0.047..1060.795 rows=21901 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8392.74 rows=400027 width=0) (actual time=135.388..135.388 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4193.94 rows=199747 width=0) (actual time=88.111..88.111 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.49 rows=8100 width=0) (actual time=6.274..6.274 rows=8175 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.45 rows=8095 width=0) (actual time=6.096..6.096 rows=8160 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.13 rows=8065 width=0) (actual time=7.376..7.376 rows=8026 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=13471.64..37808.79 rows=10514 width=30) (actual time=254.081..364.021 rows=10566 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404074.68 rows=15029968 width=16) (actual time=0.010..4621.699 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1668599.96 rows=60105396 width=8) (actual time=0.084..18642.415 rows=60045603 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1668599.96 rows=60105396 width=8) (actual time=0.021..18520.782 rows=60045603 loops=1)
Q17,1.0,->  Index Only Scan using part_p_container_p_brand_p_partkey_idx on part  (cost=0.00..7821.47 rows=1980 width=4) (actual time=0.405..36.359 rows=1918 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.042..0.373 rows=30 loops=1918)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.042..0.373 rows=30 loops=1918)
Q16,1.0,Sort  (cost=456112.83..456182.31 rows=27791 width=40) (actual time=43497.063..43499.413 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=54244.72..54244.72 rows=296436 width=40) (actual time=975.201..975.201 rows=297624 loops=1)
Q16,1.0,->  GroupAggregate  (cost=446404.70..454061.53 rows=27791 width=40) (actual time=42180.767..43129.225 rows=27840 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5659.11 rows=319580 width=0) (actual time=123.103..123.103 rows=320806 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5733.22..54244.72 rows=296436 width=40) (actual time=138.375..795.505 rows=297624 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47314.55 rows=2258372 width=0) (actual time=1654.829..1654.829 rows=2250604 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47314.55 rows=2258372 width=0) (actual time=1652.735..1652.735 rows=2250604 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47879.14..1149300.72 rows=2258372 width=12) (actual time=2133.037..8130.146 rows=2248357 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47879.14..1149300.72 rows=2258372 width=12) (actual time=1986.093..8545.849 rows=2248357 loops=1)
Q14,1.0,->  Hash Join  (cost=102539.50..1178674.61 rows=805334 width=29) (actual time=3045.354..10996.500 rows=773162 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..16816.17 rows=805334 width=0) (actual time=473.110..473.110 rows=779403 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=17017.50..1075032.60 rows=805334 width=12) (actual time=657.212..5934.853 rows=773162 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..443410.80 rows=14909346 width=8) (actual time=0.055..10869.144 rows=14852877 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..810625.72 rows=14909346 width=8) (actual time=1550.848..45010.133 rows=15352895 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=20) (actual time=0.019..6909.604 rows=15015000 loops=1)
Q12,1.0,->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.00..376153.12 rows=290302 width=15) (actual time=0.314..20977.642 rows=311791 loops=1)
Q12,1.0,->  Hash Join  (cost=592539.42..977764.48 rows=290302 width=27) (actual time=17066.319..39541.875 rows=311791 loops=1)
Q12,1.0,->  Hash  (cost=404477.52..404477.52 rows=15044952 width=20) (actual time=17046.399..17046.399 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=8) (actual time=1.133..1037.603 rows=319600 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=12) (actual time=1.636..1936.529 rows=319600 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.560..25.443 rows=3995 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.104..13.536 rows=3995 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.262..1.262 rows=3995 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=0.761..0.761 rows=3995 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.541..23.524 rows=3995 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.084..12.011 rows=3995 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1822475.46 rows=59565104 width=20) (actual time=0.026..30720.037 rows=59393146 loops=1)
Q10,1.0,->  Sort  (cost=332527.23..333980.15 rows=581168 width=8) (actual time=2749.968..2933.610 rows=574065 loops=1)
Q10,1.0,->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.00..690171.56 rows=14925352 width=12) (actual time=0.094..18172.163 rows=14822833 loops=1)
Q10,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12473.66 rows=581168 width=0) (actual time=466.085..466.085 rows=578555 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=12618.96..276884.48 rows=581168 width=8) (actual time=603.196..2511.642 rows=574065 loops=1)
Q21,,->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.00..1.96 rows=1 width=4) (actual time=0.009..0.009 rows=0 loops=1500057)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..36.77 rows=1 width=16) (actual time=0.112..0.118 rows=0 loops=10566)
Q19,,->  BitmapOr  (cost=13471.64..13471.64 rows=10525 width=0) (actual time=251.387..251.387 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8688.69..8688.69 rows=1619 width=0) (actual time=144.943..144.943 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4489.57..4489.57 rows=805 width=0) (actual time=99.577..99.577 rows=0 loops=1)
