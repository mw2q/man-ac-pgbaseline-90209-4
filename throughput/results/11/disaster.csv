Q21,1483049.0,->  Hash Semi Join  (cost=2683610.31..4856754.55 rows=1 width=38) (actual time=45319.104..99594.935 rows=1483049 loops=1)
Q21,716676.0,->  Nested Loop  (cost=2683610.31..4856756.54 rows=1 width=34) (actual time=45319.161..113277.141 rows=716676 loops=1)
Q3,318300.3,->  Sort  (cost=2760844.52..2768802.03 rows=3183003 width=20) (actual time=78317.375..78317.377 rows=10 loops=1)
Q18,303562.6,->  GroupAggregate  (cost=10333483.15..11159932.35 rows=30052698 width=39) (actual time=120890.534..120890.855 rows=99 loops=1)
Q18,75908.9,->  Hash Join  (cost=2181459.75..2964652.93 rows=7514984 width=39) (actual time=76425.866..88262.065 rows=99 loops=1)
Q18,75908.9,->  Hash Join  (cost=2112431.75..2745325.25 rows=7514984 width=20) (actual time=75076.781..86909.071 rows=99 loops=1)
Q18,75908.9,->  Hash  (cost=2964652.93..2964652.93 rows=7514984 width=39) (actual time=88262.611..88262.611 rows=99 loops=1)
Q18,43366.0,->  Sort  (cost=10333483.15..10408614.90 rows=30052698 width=39) (actual time=120890.510..120890.551 rows=693 loops=1)
Q18,43366.0,->  Hash Join  (cost=3058590.23..5779034.62 rows=30052698 width=39) (actual time=88589.644..120887.005 rows=693 loops=1)
Q18,41357.8,->  Hash  (cost=2061251.46..2061251.46 rows=4094423 width=4) (actual time=74869.584..74869.584 rows=99 loops=1)
Q18,41357.8,->  HashAggregate  (cost=1969126.94..2020307.23 rows=4094423 width=8) (actual time=65084.190..74868.206 rows=99 loops=1)
Q21,40201.0,->  Nested Loop Anti Join  (cost=2683610.31..4856771.71 rows=1 width=26) (actual time=45319.232..128503.819 rows=40201 loops=1)
Q10,27869.6,->  Sort  (cost=1182243.26..1183636.74 rows=557392 width=175) (actual time=29928.779..29928.784 rows=20 loops=1)
Q9,24683.2,->  Sort  (cost=3490732.89..3490733.22 rows=132 width=46) (actual time=244330.587..245108.322 rows=3258195 loops=1)
Q9,24683.2,->  Nested Loop  (cost=2822313.23..3490728.24 rows=132 width=46) (actual time=116529.468..224998.337 rows=3258195 loops=1)
Q9,24683.2,->  Nested Loop  (cost=2822313.23..3490690.60 rows=132 width=24) (actual time=116529.394..207945.035 rows=3258195 loops=1)
Q9,24683.2,->  Nested Loop  (cost=2822313.23..3490429.96 rows=132 width=24) (actual time=116529.224..147236.703 rows=3258195 loops=1)
Q9,24683.2,->  Merge Join  (cost=2822313.23..3490391.52 rows=132 width=28) (actual time=116529.143..127905.576 rows=3258195 loops=1)
Q7,14782.0,GroupAggregate  (cost=2382539.14..2384460.80 rows=59128 width=64) (actual time=76618.702..76646.922 rows=4 loops=1)
Q2,4795.0,->  Merge Join  (cost=395240.92..832817.88 rows=1 width=190) (actual time=7045.341..10844.837 rows=4795 loops=1)
Q21,4054.0,->  HashAggregate  (cost=4856771.71..4856771.72 rows=1 width=26) (actual time=128633.716..128636.338 rows=4054 loops=1)
Q15,3739.0,->  Subquery Scan on revenue11  (cost=1186873.93..1186958.06 rows=3739 width=12) (actual time=29041.517..29053.728 rows=1 loops=1)
Q15,3739.0,->  Sort  (cost=1187179.94..1187189.29 rows=3739 width=12) (actual time=29053.758..29053.758 rows=1 loops=1)
Q15,3739.0,Merge Join  (cost=2357326.06..2362423.61 rows=3739 width=79) (actual time=29074.466..29074.469 rows=1 loops=1)
Q15,3739.0,->  HashAggregate  (cost=1186873.93..1186920.67 rows=3739 width=12) (actual time=29041.515..29053.724 rows=1 loops=1)
Q8,364.5,Sort  (cost=2172567.89..2172569.71 rows=729 width=38) (actual time=28662.766..28662.766 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=2172520.47..2172533.23 rows=729 width=38) (actual time=28662.690..28662.693 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=4856771.73..4856771.74 rows=1 width=26) (actual time=128641.534..128641.545 rows=100 loops=1)
Q21,100.0,Limit  (cost=4856771.73..4856771.74 rows=1 width=26) (actual time=128641.538..128641.566 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=832817.89..832817.89 rows=1 width=190) (actual time=10854.822..10854.850 rows=100 loops=1)
Q2,100.0,Limit  (cost=832817.89..832817.89 rows=1 width=190) (actual time=10854.826..10854.876 rows=100 loops=1)
Q11,33.5,Sort  (cost=135913.51..136712.11 rows=319441 width=12) (actual time=6045.824..6047.457 rows=9522 loops=1)
Q11,33.5,->  HashAggregate  (cost=52954.85..56947.86 rows=319441 width=12) (actual time=5867.292..6036.700 rows=9522 loops=1)
Q3,27.9,->  HashAggregate  (cost=2660230.94..2692060.97 rows=3183003 width=20) (actual time=78217.272..78296.313 rows=113965 loops=1)
Q15,26.7,->  HashAggregate  (cost=1170061.98..1170099.37 rows=3739 width=12) (actual time=10214.874..10268.025 rows=100000 loops=1)
Q3,10.5,->  Hash Join  (cost=627773.09..2612485.89 rows=3183003 width=20) (actual time=25022.639..77725.460 rows=300771 loops=1)
Q4,10.0,->  Hash  (cost=994228.16..994228.16 rows=1364808 width=4) (actual time=77794.391..77794.391 rows=13767164 loops=1)
Q4,10.0,->  HashAggregate  (cost=980580.08..994228.16 rows=1364808 width=4) (actual time=64534.729..74320.768 rows=13767164 loops=1)
Q16,5.6,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.00..8.45 rows=10 width=4) (actual time=0.083..0.901 rows=56 loops=1)
Q5,5.0,Sort  (cost=2437224.46..2437224.53 rows=25 width=34) (actual time=76024.346..76024.346 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2437223.63..2437223.88 rows=25 width=34) (actual time=76024.253..76024.257 rows=5 loops=1)
Q4,5.0,Sort  (cost=1293865.10..1293865.11 rows=1 width=16) (actual time=89222.380..89222.380 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1293865.08..1293865.09 rows=1 width=16) (actual time=89222.215..89222.217 rows=5 loops=1)
Q21,5.0,->  Index Scan using lineitem_l_orderkey_idx on lineitem l3  (cost=0.00..7.56 rows=5 width=8) (actual time=0.020..0.020 rows=1 loops=716676)
Q13,4.5,Sort  (cost=929171.86..929172.36 rows=200 width=8) (actual time=67014.829..67014.832 rows=44 loops=1)
Q13,4.5,->  HashAggregate  (cost=929162.21..929164.21 rows=200 width=8) (actual time=67014.665..67014.673 rows=44 loops=1)
Q17,3.8,->  Nested Loop  (cost=140.78..392219.46 rows=19584 width=4) (actual time=0.928..1031.053 rows=5145 loops=1)
Q4,3.3,->  Hash Join  (cost=1023810.54..1293068.77 rows=159263 width=16) (actual time=78305.240..89002.972 rows=525922 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=140.78..196.78 rows=10 width=12) (actual time=0.012..0.015 rows=3 loops=1955)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..575.31 rows=1 width=8) (actual time=0.535..0.681 rows=3 loops=21697)
Q22,2.3,Sort  (cost=694521.12..694521.12 rows=3 width=20) (actual time=14255.488..14255.490 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641749.27..641749.31 rows=3 width=20) (actual time=14255.408..14255.411 rows=7 loops=1)
Q15,2.3,->  Index Scan using pk_supplier on supplier  (cost=0.00..4791.46 rows=100000 width=71) (actual time=0.021..16.206 rows=42993 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.00..49.84 rows=1 width=4) (actual time=0.070..0.105 rows=2 loops=6391)
Q20,2.0,->  Nested Loop  (cost=0.00..12734689.26 rows=29235 width=4) (actual time=0.853..16096.282 rows=58865 loops=1)
Q16,2.0,->  Sort  (cost=446427.32..447903.61 rows=590518 width=40) (actual time=46177.308..46470.212 rows=1184775 loops=1)
Q16,2.0,->  Hash Join  (cost=57958.20..389821.38 rows=590518 width=40) (actual time=1439.039..14732.395 rows=1184775 loops=1)
Q12,2.0,Sort  (cost=987690.43..987690.44 rows=1 width=27) (actual time=33514.686..33514.687 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=987690.41..987690.42 rows=1 width=27) (actual time=33514.538..33514.539 rows=2 loops=1)
Q10,2.0,->  Merge Join  (cost=328493.94..1060060.99 rows=557392 width=12) (actual time=3059.991..20375.560 rows=1121287 loops=1)
Q10,2.0,->  Hash Join  (cost=397523.50..1147902.54 rows=557392 width=175) (actual time=5610.394..25401.391 rows=1121287 loops=1)
Q10,2.0,->  Hash Join  (cost=397521.94..1140236.83 rows=557392 width=153) (actual time=5610.340..24862.194 rows=1121287 loops=1)
Q21,1.9,->  Hash Join  (cost=2441.58..1923400.79 rows=808343 width=34) (actual time=38.052..40639.222 rows=1538035 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.48..270966.48 rows=4000000 width=8) (actual time=0.963..6503.971 rows=7995520 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.00..930292.75 rows=20114931 width=4) (actual time=0.217..29854.750 rows=37966560 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1836995.08 rows=20234855 width=8) (actual time=0.035..27002.905 rows=37966174 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=12735712.48..12739751.56 rows=29235 width=55) (actual time=16275.939..16514.665 rows=44589 loops=1)
Q20,1.5,->  Hash  (cost=12735347.04..12735347.04 rows=29235 width=4) (actual time=16275.866..16275.866 rows=44589 loops=1)
Q20,1.5,->  HashAggregate  (cost=12734762.34..12735054.69 rows=29235 width=4) (actual time=16225.090..16259.138 rows=44589 loops=1)
Q1,1.5,Sort  (cost=4199802.57..4199802.58 rows=6 width=20) (actual time=111255.526..111255.526 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4199802.38..4199802.49 rows=6 width=20) (actual time=111255.435..111255.439 rows=4 loops=1)
Q20,1.4,Sort  (cost=12740177.87..12740180.80 rows=1169 width=51) (actual time=16534.043..16534.163 rows=1739 loops=1)
Q20,1.4,->  Nested Loop  (cost=12735712.48..12740118.31 rows=1169 width=51) (actual time=16276.012..16523.129 rows=1739 loops=1)
Q10,1.4,->  HashAggregate  (cost=1161837.34..1167411.26 rows=557392 width=175) (actual time=29365.891..29768.544 rows=374967 loops=1)
Q9,1.3,GroupAggregate  (cost=3490732.89..3490737.51 rows=132 width=46) (actual time=244343.696..247328.895 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2862.31 rows=138835 width=0) (actual time=754.688..754.688 rows=190732 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2897.01..41819.43 rows=138835 width=24) (actual time=763.814..1417.861 rows=190732 loops=1)
Q9,1.0,->  Sort  (cost=2822313.23..2830643.27 rows=3332013 width=28) (actual time=116528.999..118875.858 rows=3258195 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=110106 width=4) (actual time=0.022..968.325 rows=108577 loops=1)
Q9,1.0,->  Seq Scan on lineitem  (cost=0.00..1680213.23 rows=60523723 width=24) (actual time=0.020..19649.714 rows=60044082 loops=1)
Q9,1.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..603091.29 rows=8000000 width=12) (actual time=0.009..4800.686 rows=7999933 loops=1)
Q9,1.0,->  Hash Join  (cost=66898.32..2461323.57 rows=3332013 width=28) (actual time=1010.551..112474.511 rows=3258195 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=110106 width=4) (actual time=1010.343..1010.343 rows=108577 loops=1)
Q8,1.0,->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=29.075..1039.276 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=496304.93..2172034.31 rows=24308 width=38) (actual time=21233.382..28600.455 rows=24269 loops=1)
Q8,1.0,->  Nested Loop  (cost=496304.93..2165101.67 rows=24308 width=16) (actual time=21233.308..28449.846 rows=24269 loops=1)
Q8,1.0,->  Nested Loop  (cost=0.00..1659454.53 rows=402186 width=16) (actual time=0.314..5571.281 rows=397993 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..120.61 rows=31 width=20) (actual time=0.041..0.388 rows=30 loops=13268)
Q8,1.0,->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..46361.77 rows=13340 width=4) (actual time=0.243..230.755 rows=13268 loops=1)
Q8,1.0,->  Hash Join  (cost=496304.93..2158013.79 rows=24340 width=16) (actual time=21233.272..28138.078 rows=24269 loops=1)
Q8,1.0,->  Hash Join  (cost=135713.17..484900.87 rows=912325 width=8) (actual time=4420.347..19861.496 rows=911004 loops=1)
Q8,1.0,->  Hash  (cost=484900.87..484900.87 rows=912325 width=8) (actual time=21231.847..21231.847 rows=911004 loops=1)
Q8,1.0,->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=1203.951..1203.951 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..95542.14 rows=4561624 width=0) (actual time=3089.856..3089.856 rows=4579958 loops=1)
Q8,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=18.732..18.732 rows=59899 loops=5)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=96682.55..419640.91 rows=4561624 width=12) (actual time=3216.102..7261.486 rows=4557142 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=27.730..189.530 rows=59899 loops=5)
Q7,1.0,->  Sort  (cost=2382539.14..2382686.96 rows=59128 width=64) (actual time=76608.279..76617.793 rows=57681 loops=1)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=8) (actual time=0.018..5005.711 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=905.09..14139.26 rows=119904 width=60) (actual time=19.869..488.215 rows=119630 loops=1)
Q7,1.0,->  Hash Join  (cost=903999.16..2377852.78 rows=59128 width=64) (actual time=41422.126..76316.659 rows=57681 loops=1)
Q7,1.0,->  Hash Join  (cost=899320.16..2342684.44 rows=1480121 width=72) (actual time=41292.476..73311.741 rows=1456337 loops=1)
Q7,1.0,->  Hash Join  (cost=15638.06..494216.31 rows=1217016 width=60) (actual time=576.257..25685.252 rows=1195799 loops=1)
Q7,1.0,->  Hash  (cost=494216.31..494216.31 rows=1217016 width=60) (actual time=27048.737..27048.737 rows=1195799 loops=1)
Q7,1.0,->  Hash  (cost=14139.26..14139.26 rows=119904 width=60) (actual time=576.065..576.065 rows=119630 loops=1)
Q7,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..385262.07 rows=18516324 width=0) (actual time=13493.893..13493.893 rows=18503145 loops=1)
Q7,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=18.797..18.797 rows=59815 loops=2)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=389891.15..1749018.01 rows=18516324 width=20) (actual time=14242.862..27443.427 rows=18246713 loops=1)
Q7,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=28.210..223.573 rows=59815 loops=2)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..193607.96 rows=9300113 width=0) (actual time=7488.581..7488.581 rows=9254767 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=193811.40..1483382.94 rows=813753 width=8) (actual time=8465.705..27480.447 rows=795087 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1676899.62 rows=60404362 width=16) (actual time=0.027..18141.848 rows=60045310 loops=1)
Q5,1.0,->  Nested Loop  (cost=905.09..35292.22 rows=300000 width=38) (actual time=27.681..780.370 rows=299436 loops=1)
Q5,1.0,->  Hash Join  (cost=88530.33..391262.23 rows=459671 width=38) (actual time=2128.791..12406.776 rows=456371 loops=1)
Q5,1.0,->  Hash Join  (cost=401687.12..2436489.32 rows=73431 width=34) (actual time=12871.724..75841.778 rows=73326 loops=1)
Q5,1.0,->  Hash Join  (cost=397008.12..2394311.69 rows=1838216 width=46) (actual time=12743.120..71512.915 rows=1824645 loops=1)
Q5,1.0,->  Hash  (cost=391262.23..391262.23 rows=459671 width=38) (actual time=12742.094..12742.094 rows=456371 loops=1)
Q5,1.0,->  Hash  (cost=35292.22..35292.22 rows=300000 width=38) (actual time=911.499..911.499 rows=299436 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..48913.52 rows=2298357 width=0) (actual time=1044.839..1044.839 rows=2297642 loops=1)
Q5,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=15.005..15.005 rows=59887 loops=5)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=49488.11..339004.47 rows=2298357 width=8) (actual time=1217.041..4763.556 rows=2284034 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=22.217..141.639 rows=59887 loops=5)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12375.54 rows=586962 width=0) (actual time=392.027..392.027 rows=576629 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=12522.28..276113.71 rows=586962 width=20) (actual time=508.909..2053.274 rows=573813 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..444294.89 rows=7329784 width=16) (actual time=0.017..6512.005 rows=7240785 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1829719.94 rows=32843423 width=12) (actual time=0.110..30263.988 rows=32589469 loops=1)
Q3,1.0,->  Hash Join  (cost=49723.39..609456.26 rows=1465346 width=12) (actual time=1153.990..24142.754 rows=1448083 loops=1)
Q3,1.0,->  Hash  (cost=609456.26..609456.26 rows=1465346 width=12) (actual time=25020.858..25020.858 rows=1448083 loops=1)
Q3,1.0,->  Hash  (cost=45974.95..45974.95 rows=299875 width=4) (actual time=1153.769..1153.769 rows=300036 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6873.54 rows=299875 width=0) (actual time=66.749..66.749 rows=300036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6948.51..45974.95 rows=299875 width=4) (actual time=74.715..1000.654 rows=300036 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.029..6075.323 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=12423.025..12423.025 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597799.34..641310.16 rows=58547 width=20) (actual time=13198.486..14213.896 rows=63272 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6507.26 rows=378845 width=0) (actual time=136.503..136.503 rows=381407 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer  (cost=6601.97..51824.66 rows=378845 width=4) (actual time=148.857..578.673 rows=381407 loops=1)
Q21,1.0,->  Seq Scan on lineitem l2  (cost=0.00..1685233.66 rows=60704566 width=8) (actual time=0.048..24444.129 rows=60044994 loops=1)
Q21,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=30) (actual time=1.876..35.819 rows=4054 loops=1)
Q21,1.0,->  Hash  (cost=2391.58..2391.58 rows=4000 width=30) (actual time=37.958..37.958 rows=4054 loops=1)
Q21,1.0,->  Hash  (cost=1685233.66..1685233.66 rows=60704566 width=8) (actual time=45260.256..45260.256 rows=60044994 loops=1)
Q21,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.482..1.482 rows=4054 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=34) (actual time=1.864..34.349 rows=4054 loops=1)
Q2,1.0,->  Sort  (cost=395240.86..399233.87 rows=1597205 width=168) (actual time=7044.593..7549.566 rows=1586872 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..5806.62 rows=20000 width=164) (actual time=0.062..168.755 rows=19837 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..230671.90 rows=1597205 width=168) (actual time=0.082..5270.515 rows=1586960 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=8249 width=30) (actual time=0.282..1745.306 rows=8046 loops=1)
Q20,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=22021 width=4) (actual time=0.168..1243.763 rows=21697 loops=1)
Q19,1.0,->  Nested Loop  (cost=13453.28..423429.84 rows=1032 width=8) (actual time=252.030..1716.011 rows=1116 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8392.74 rows=400027 width=0) (actual time=134.070..134.070 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4193.94 rows=199747 width=0) (actual time=87.525..87.525 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.41 rows=8091 width=0) (actual time=5.331..5.331 rows=7876 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.17 rows=8069 width=0) (actual time=4.696..4.696 rows=8159 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.17 rows=7866 width=0) (actual time=8.957..8.957 rows=7886 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=13453.28..37739.11 rows=10481 width=30) (actual time=250.068..469.058 rows=10266 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404074.68 rows=15029968 width=16) (actual time=0.058..5874.850 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1668599.96 rows=60105396 width=8) (actual time=0.027..18669.207 rows=60045603 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1668599.96 rows=60105396 width=8) (actual time=0.013..18267.240 rows=60045603 loops=1)
Q18,1.0,Limit  (cost=10333483.15..10333485.90 rows=100 width=39) (actual time=120890.538..120890.872 rows=99 loops=1)
Q17,1.0,->  Index Only Scan using part_p_container_p_brand_p_partkey_idx on part  (cost=0.00..7716.96 rows=1953 width=4) (actual time=0.238..41.047 rows=1955 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.053..0.469 rows=30 loops=1955)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.053..0.469 rows=30 loops=1955)
Q16,1.0,Sort  (cost=456138.91..456208.42 rows=27801 width=40) (actual time=47521.694..47523.746 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=54243.00..54243.00 rows=296538 width=40) (actual time=1437.131..1437.131 rows=296361 loops=1)
Q16,1.0,->  GroupAggregate  (cost=446427.32..454086.80 rows=27801 width=40) (actual time=46177.434..47128.747 rows=27840 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5658.69 rows=319527 width=0) (actual time=98.674..98.674 rows=319258 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5732.82..54243.00 rows=296538 width=40) (actual time=110.475..1223.678 rows=296361 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..46986.76 rows=2241593 width=0) (actual time=1876.592..1876.592 rows=2246034 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..46986.76 rows=2241593 width=0) (actual time=1371.876..1371.876 rows=2248378 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47547.16..1147646.05 rows=2241593 width=12) (actual time=2235.456..15180.566 rows=2243815 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47547.16..1147646.05 rows=2241593 width=12) (actual time=1701.508..6925.789 rows=2243815 loops=1)
Q14,1.0,->  Hash Join  (cost=101450.60..1149536.99 rows=751002 width=29) (actual time=2582.351..8673.864 rows=750680 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..15740.85 rows=751002 width=0) (actual time=444.008..444.008 rows=751450 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=15928.60..1047117.45 rows=751002 width=12) (actual time=622.650..4198.346 rows=750680 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446936.69 rows=15027901 width=8) (actual time=0.032..11475.030 rows=14852841 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..816522.71 rows=15027901 width=8) (actual time=1912.259..47917.503 rows=15352859 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=20) (actual time=0.033..6720.855 rows=15015000 loops=1)
Q12,1.0,->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.00..378024.62 rows=290687 width=15) (actual time=0.328..17324.117 rows=310920 loops=1)
Q12,1.0,->  Hash Join  (cost=595494.80..982603.39 rows=290687 width=27) (actual time=14611.054..33029.816 rows=310920 loops=1)
Q12,1.0,->  Hash  (cost=406494.91..406494.91 rows=15119991 width=20) (actual time=14599.070..14599.070 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=8) (actual time=1.566..1240.923 rows=319200 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=12) (actual time=1.529..3978.113 rows=319200 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.525..15.957 rows=3990 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.484..30.301 rows=3990 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.110..1.110 rows=3990 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.065..1.065 rows=3990 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.459..27.928 rows=3990 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.455..14.191 rows=3990 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1822475.46 rows=59433173 width=20) (actual time=0.028..28704.635 rows=59255725 loops=1)
Q10,1.0,->  Sort  (cost=328486.44..329899.45 rows=565207 width=8) (actual time=3059.686..3209.445 rows=560912 loops=1)
Q10,1.0,->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.00..686082.28 rows=14836937 width=12) (actual time=0.262..14577.499 rows=14823169 loops=1)
Q10,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..11837.97 rows=565207 width=0) (actual time=289.871..289.871 rows=562079 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=11979.27..274485.37 rows=565207 width=8) (actual time=395.226..2799.860 rows=560912 loops=1)
Q21,,->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.00..1.98 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=1483049)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..36.79 rows=1 width=16) (actual time=0.110..0.115 rows=0 loops=10266)
Q19,,->  BitmapOr  (cost=13453.28..13453.28 rows=10491 width=0) (actual time=247.615..247.615 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8688.40..8688.40 rows=1614 width=0) (actual time=142.105..142.105 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4471.60..4471.60 rows=786 width=0) (actual time=99.704..99.704 rows=0 loops=1)
