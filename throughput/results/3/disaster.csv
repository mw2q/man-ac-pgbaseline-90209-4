Q21,1437940.0,->  Hash Semi Join  (cost=2680954.36..4851944.40 rows=1 width=38) (actual time=45387.374..100980.589 rows=1437940 loops=1)
Q21,693373.0,->  Nested Loop  (cost=2680954.36..4851946.39 rows=1 width=34) (actual time=45387.441..116911.784 rows=693373 loops=1)
Q3,320674.6,->  Sort  (cost=2820050.38..2828067.24 rows=3206746 width=20) (actual time=79167.766..79167.768 rows=10 loops=1)
Q18,304771.6,->  GroupAggregate  (cost=10374500.96..11204241.88 rows=30172397 width=39) (actual time=121461.463..121461.782 rows=99 loops=1)
Q18,76211.6,->  Hash Join  (cost=2189302.72..2975455.83 rows=7544952 width=39) (actual time=79699.193..88777.235 rows=99 loops=1)
Q18,76211.6,->  Hash Join  (cost=2120274.72..2755528.79 rows=7544952 width=20) (actual time=78259.868..87335.791 rows=99 loops=1)
Q18,76211.6,->  Hash  (cost=2975455.83..2975455.83 rows=7544952 width=39) (actual time=88777.756..88777.756 rows=99 loops=1)
Q18,43538.8,->  Sort  (cost=10374500.96..10449931.95 rows=30172397 width=39) (actual time=121461.442..121461.476 rows=693 loops=1)
Q18,43538.8,->  Hash Join  (cost=3069767.73..5801047.56 rows=30172397 width=39) (actual time=88796.083..121458.142 rows=693 loops=1)
Q18,41357.8,->  Hash  (cost=2069094.43..2069094.43 rows=4094423 width=4) (actual time=78112.629..78112.629 rows=99 loops=1)
Q18,41357.8,->  HashAggregate  (cost=1976969.91..2028150.20 rows=4094423 width=8) (actual time=68776.677..78111.942 rows=99 loops=1)
Q21,38588.0,->  Nested Loop Anti Join  (cost=2680954.36..4851961.53 rows=1 width=26) (actual time=45390.065..132849.541 rows=38588 loops=1)
Q10,29056.9,->  Sort  (cost=1195333.65..1196786.50 rows=581139 width=175) (actual time=29051.863..29051.867 rows=20 loops=1)
Q9,24351.0,->  Sort  (cost=3496061.63..3496061.96 rows=135 width=46) (actual time=209858.813..210733.850 rows=3287391 loops=1)
Q9,24351.0,->  Nested Loop  (cost=2827205.26..3496056.85 rows=135 width=46) (actual time=105002.089..190249.050 rows=3287391 loops=1)
Q9,24351.0,->  Nested Loop  (cost=2827205.26..3496018.35 rows=135 width=24) (actual time=105001.992..177372.229 rows=3287391 loops=1)
Q9,24351.0,->  Nested Loop  (cost=2827205.26..3495752.23 rows=135 width=24) (actual time=105001.840..130334.001 rows=3287391 loops=1)
Q9,24351.0,->  Merge Join  (cost=2827205.26..3495712.92 rows=135 width=28) (actual time=105001.747..115330.919 rows=3287391 loops=1)
Q7,14621.7,GroupAggregate  (cost=2359109.69..2361010.52 rows=58487 width=64) (actual time=82275.647..82302.917 rows=4 loops=1)
Q2,4535.0,->  Merge Join  (cost=395240.92..823491.61 rows=1 width=190) (actual time=10297.534..13589.606 rows=4535 loops=1)
Q21,3924.0,->  HashAggregate  (cost=4851961.54..4851961.55 rows=1 width=26) (actual time=133064.840..133066.845 rows=3924 loops=1)
Q15,3755.0,->  Subquery Scan on revenue3  (cost=1199025.43..1199109.92 rows=3755 width=12) (actual time=33426.481..33439.591 rows=1 loops=1)
Q15,3755.0,->  Sort  (cost=1199332.87..1199342.26 rows=3755 width=12) (actual time=33439.627..33439.628 rows=1 loops=1)
Q15,3755.0,Merge Join  (cost=2381386.20..2386483.99 rows=3755 width=79) (actual time=33477.920..33477.923 rows=1 loops=1)
Q15,3755.0,->  HashAggregate  (cost=1199025.43..1199072.37 rows=3755 width=12) (actual time=33426.480..33439.588 rows=1 loops=1)
Q8,364.5,Sort  (cost=2207191.65..2207193.47 rows=729 width=38) (actual time=25740.996..25740.997 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=2207144.23..2207156.98 rows=729 width=38) (actual time=25740.936..25740.937 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=4851961.56..4851961.56 rows=1 width=26) (actual time=133069.869..133069.876 rows=100 loops=1)
Q21,100.0,Limit  (cost=4851961.56..4851961.56 rows=1 width=26) (actual time=133069.873..133069.893 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=823491.62..823491.62 rows=1 width=190) (actual time=13597.777..13597.800 rows=100 loops=1)
Q2,100.0,Limit  (cost=823491.62..823491.62 rows=1 width=190) (actual time=13597.781..13597.823 rows=100 loops=1)
Q11,38.0,Sort  (cost=135913.51..136712.11 rows=319441 width=12) (actual time=4376.289..4377.311 rows=8406 loops=1)
Q11,38.0,->  HashAggregate  (cost=52954.85..56947.86 rows=319441 width=12) (actual time=4197.950..4371.207 rows=8406 loops=1)
Q3,28.1,->  HashAggregate  (cost=2718686.29..2750753.75 rows=3206746 width=20) (actual time=79059.578..79146.778 rows=113838 loops=1)
Q15,26.6,->  HashAggregate  (cost=1181968.84..1182006.39 rows=3755 width=12) (actual time=16751.944..16813.297 rows=100000 loops=1)
Q3,10.6,->  Hash Join  (cost=633671.43..2670585.10 rows=3206746 width=20) (actual time=28433.423..78598.201 rows=301279 loops=1)
Q4,10.0,->  Hash  (cost=991311.77..991311.77 rows=1364808 width=4) (actual time=77071.472..77071.472 rows=13767168 loops=1)
Q4,10.0,->  HashAggregate  (cost=977663.69..991311.77 rows=1364808 width=4) (actual time=61981.151..70635.714 rows=13767168 loops=1)
Q16,5.6,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.00..8.45 rows=10 width=4) (actual time=0.132..1.307 rows=56 loops=1)
Q5,5.0,Sort  (cost=2423341.06..2423341.12 rows=25 width=34) (actual time=82417.018..82417.019 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2423340.23..2423340.48 rows=25 width=34) (actual time=82416.863..82416.868 rows=5 loops=1)
Q4,5.0,Sort  (cost=1289203.32..1289203.33 rows=1 width=16) (actual time=90885.287..90885.288 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1289203.30..1289203.31 rows=1 width=16) (actual time=90885.136..90885.138 rows=5 loops=1)
Q21,5.0,->  Index Scan using lineitem_l_orderkey_idx on lineitem l3  (cost=0.00..7.55 rows=5 width=8) (actual time=0.022..0.022 rows=1 loops=693373)
Q13,4.4,Sort  (cost=931386.61..931387.11 rows=200 width=8) (actual time=64388.318..64388.321 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=931376.96..931378.96 rows=200 width=8) (actual time=64388.192..64388.206 rows=45 loops=1)
Q17,3.6,->  Nested Loop  (cost=140.78..412250.38 rows=20607 width=4) (actual time=1.205..1057.761 rows=5671 loops=1)
Q4,3.4,->  Hash Join  (cost=1020404.77..1288430.81 rows=154499 width=16) (actual time=77641.708..90525.185 rows=526516 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=140.78..196.76 rows=10 width=12) (actual time=0.011..0.014 rows=3 loops=2090)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..575.51 rows=1 width=8) (actual time=0.477..0.615 rows=3 loops=21551)
Q22,2.3,Sort  (cost=694633.26..694633.27 rows=3 width=20) (actual time=17761.283..17761.283 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641788.15..641788.19 rows=3 width=20) (actual time=17761.213..17761.215 rows=7 loops=1)
Q20,2.2,->  Nested Loop  (cost=0.00..11586915.28 rows=26577 width=4) (actual time=0.958..14658.902 rows=58485 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.00..49.84 rows=1 width=4) (actual time=0.055..0.082 rows=2 loops=6085)
Q16,2.0,->  Sort  (cost=446308.28..447782.44 rows=589665 width=40) (actual time=44794.885..45099.034 rows=1189539 loops=1)
Q16,2.0,->  Hash Join  (cost=57935.61..389790.26 rows=589665 width=40) (actual time=1341.499..13593.724 rows=1189539 loops=1)
Q12,2.0,Sort  (cost=993627.35..993627.36 rows=1 width=27) (actual time=28488.795..28488.796 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=993627.33..993627.34 rows=1 width=27) (actual time=28488.647..28488.648 rows=2 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.48..270966.48 rows=4000000 width=8) (actual time=1.424..5431.586 rows=7995520 loops=1)
Q10,1.9,->  Merge Join  (cost=333926.52..1070886.88 rows=581139 width=12) (actual time=3303.142..19884.284 rows=1148508 loops=1)
Q10,1.9,->  Hash Join  (cost=402956.08..1159529.89 rows=581139 width=175) (actual time=5649.565..25032.599 rows=1148508 loops=1)
Q10,1.9,->  Hash Join  (cost=402954.52..1151537.66 rows=581139 width=153) (actual time=5649.512..24346.927 rows=1148508 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.00..927526.04 rows=20055063 width=4) (actual time=0.300..28879.307 rows=37966418 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1835175.44 rows=20214812 width=8) (actual time=0.034..28610.817 rows=37965800 loops=1)
Q21,1.8,->  Hash Join  (cost=2441.58..1921497.99 rows=807543 width=34) (actual time=32.939..42231.362 rows=1491220 loops=1)
Q20,1.7,Sort  (cost=11590321.29..11590323.95 rows=1063 width=51) (actual time=14883.753..14883.923 rows=1830 loops=1)
Q20,1.7,->  Hash Semi Join  (cost=11587924.74..11590267.86 rows=1063 width=51) (actual time=14824.084..14851.507 rows=1830 loops=1)
Q20,1.6,->  Hash  (cost=11587513.26..11587513.26 rows=26577 width=4) (actual time=14822.265..14822.265 rows=44389 loops=1)
Q20,1.6,->  HashAggregate  (cost=11586981.72..11587247.49 rows=26577 width=4) (actual time=14775.725..14805.192 rows=44389 loops=1)
Q1,1.5,Sort  (cost=4205975.91..4205975.92 rows=6 width=20) (actual time=110194.598..110194.599 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4205975.73..4205975.83 rows=6 width=20) (actual time=110194.499..110194.501 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=1174058.36..1179869.75 rows=581139 width=175) (actual time=28583.966..28896.452 rows=381471 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2867.63 rows=139370 width=0) (actual time=819.296..819.296 rows=191038 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2902.47..41838.93 rows=139370 width=24) (actual time=832.331..1146.830 rows=191038 loops=1)
Q15,1.3,->  Index Scan using pk_supplier on supplier  (cost=0.00..4791.46 rows=100000 width=71) (actual time=0.063..30.761 rows=71847 loops=1)
Q9,1.2,GroupAggregate  (cost=3496061.63..3496066.35 rows=135 width=46) (actual time=209870.895..213008.186 rows=175 loops=1)
Q9,1.0,->  Sort  (cost=2827205.26..2835678.41 rows=3389258 width=28) (actual time=105001.673..107194.538 rows=3287391 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=112108 width=4) (actual time=0.029..1447.110 rows=109488 loops=1)
Q9,1.0,->  Seq Scan on lineitem  (cost=0.00..1678559.55 rows=60464155 width=24) (actual time=0.021..18676.838 rows=60044664 loops=1)
Q9,1.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..603091.29 rows=8000000 width=12) (actual time=0.022..4492.541 rows=7999977 loops=1)
Q9,1.0,->  Hash Join  (cost=66923.35..2459597.22 rows=3389258 width=28) (actual time=1519.353..101450.295 rows=3287391 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=112108 width=4) (actual time=1518.947..1518.947 rows=109488 loops=1)
Q8,1.0,->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=26.927..1566.844 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=494549.32..2206647.51 rows=24836 width=38) (actual time=20011.552..25683.488 rows=24245 loops=1)
Q8,1.0,->  Nested Loop  (cost=494549.32..2199564.28 rows=24836 width=16) (actual time=20011.480..25541.721 rows=24245 loops=1)
Q8,1.0,->  Nested Loop  (cost=0.00..1695469.73 rows=410919 width=16) (actual time=0.215..4307.900 rows=398469 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..120.10 rows=31 width=20) (actual time=0.036..0.293 rows=30 loops=13309)
Q8,1.0,->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..47395.83 rows=13687 width=4) (actual time=0.198..220.773 rows=13309 loops=1)
Q8,1.0,->  Hash Join  (cost=494549.32..2192322.34 rows=24869 width=16) (actual time=20011.439..25247.663 rows=24245 loops=1)
Q8,1.0,->  Hash Join  (cost=135391.26..483190.61 rows=908697 width=8) (actual time=4377.941..19505.422 rows=911011 loops=1)
Q8,1.0,->  Hash  (cost=483190.61..483190.61 rows=908697 width=8) (actual time=20010.238..20010.238 rows=911011 loops=1)
Q8,1.0,->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=1745.396..1745.396 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..95224.77 rows=4543487 width=0) (actual time=2497.200..2497.200 rows=4561961 loops=1)
Q8,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=21.661..21.661 rows=59899 loops=5)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=96360.64..418034.94 rows=4543487 width=12) (actual time=2632.166..6770.592 rows=4557440 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=31.399..294.135 rows=59899 loops=5)
Q7,1.0,->  Sort  (cost=2359109.69..2359255.91 rows=58487 width=64) (actual time=82265.899..82272.317 rows=58196 loops=1)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=8) (actual time=0.022..4991.728 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=905.09..14139.26 rows=119904 width=60) (actual time=29.911..456.672 rows=120536 loops=1)
Q7,1.0,->  Hash Join  (cost=896593.27..2354478.74 rows=58487 width=64) (actual time=42601.905..81939.443 rows=58196 loops=1)
Q7,1.0,->  Hash Join  (cost=891914.27..2319640.73 rows=1464085 width=72) (actual time=42462.335..78620.526 rows=1464951 loops=1)
Q7,1.0,->  Hash Join  (cost=15638.06..489031.49 rows=1203831 width=60) (actual time=533.527..27703.510 rows=1208004 loops=1)
Q7,1.0,->  Hash  (cost=489031.49..489031.49 rows=1203831 width=60) (actual time=28591.710..28591.710 rows=1208004 loops=1)
Q7,1.0,->  Hash  (cost=14139.26..14139.26 rows=119904 width=60) (actual time=533.354..533.354 rows=120536 loops=1)
Q7,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..383255.96 rows=18315713 width=0) (actual time=13287.752..13287.752 rows=18302308 loops=1)
Q7,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=20.799..20.799 rows=60268 loops=2)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=387834.89..1732236.58 rows=18315713 width=20) (actual time=13869.345..29530.843 rows=18247629 loops=1)
Q7,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=30.173..208.352 rows=60268 loops=2)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..190983.37 rows=9126854 width=0) (actual time=7474.574..7474.574 rows=9142993 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=191174.36..1466194.57 rows=763959 width=8) (actual time=8195.595..26942.299 rows=762635 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1668599.96 rows=60105396 width=16) (actual time=0.019..17600.382 rows=60045603 loops=1)
Q5,1.0,->  Nested Loop  (cost=905.09..35292.22 rows=300000 width=38) (actual time=30.813..1436.203 rows=300270 loops=1)
Q5,1.0,->  Hash Join  (cost=87132.93..387980.72 rows=453714 width=38) (actual time=3125.143..14449.062 rows=456436 loops=1)
Q5,1.0,->  Hash Join  (cost=398331.15..2422615.42 rows=72481 width=34) (actual time=18213.109..82262.824 rows=73216 loops=1)
Q5,1.0,->  Hash Join  (cost=393652.15..2380923.28 rows=1814417 width=46) (actual time=18143.045..78273.904 rows=1827218 loops=1)
Q5,1.0,->  Hash  (cost=387980.72..387980.72 rows=453714 width=38) (actual time=18142.515..18142.515 rows=456436 loops=1)
Q5,1.0,->  Hash  (cost=35292.22..35292.22 rows=300000 width=38) (actual time=1781.341..1781.341 rows=300270 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..47523.58 rows=2268568 width=0) (actual time=1229.280..1229.280 rows=2280135 loops=1)
Q5,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=18.973..18.973 rows=60054 loops=5)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=48090.72..335894.24 rows=2268568 width=8) (actual time=1343.552..6111.565 rows=2277888 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=28.537..269.040 rows=60054 loops=5)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..11890.97 rows=567707 width=0) (actual time=402.347..402.347 rows=575657 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=12032.89..274576.50 rows=567707 width=20) (actual time=568.009..2836.784 rows=574491 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..446936.69 rows=7509897 width=16) (actual time=0.013..6867.270 rows=7370576 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1842314.27 rows=32506386 width=12) (actual time=0.036..27539.978 rows=32008081 loops=1)
Q3,1.0,->  Hash Join  (cost=49713.49..614915.78 rows=1500452 width=12) (actual time=1267.333..26313.516 rows=1477938 loops=1)
Q3,1.0,->  Hash  (cost=614915.78..614915.78 rows=1500452 width=12) (actual time=28431.781..28431.781 rows=1477938 loops=1)
Q3,1.0,->  Hash  (cost=45967.30..45967.30 rows=299695 width=4) (actual time=1267.071..1267.071 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6868.19 rows=299695 width=0) (actual time=67.019..67.019 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6943.12..45967.30 rows=299695 width=4) (actual time=76.524..1097.300 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.031..6770.757 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=16178.106..16178.106 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597804.80..641347.36 rows=58772 width=20) (actual time=17020.348..17724.119 rows=63542 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6538.18 rows=380305 width=0) (actual time=150.412..150.412 rows=382054 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer  (cost=6633.26..51894.27 rows=380305 width=4) (actual time=164.347..610.702 rows=382054 loops=1)
Q21,1.0,->  Seq Scan on lineitem l2  (cost=0.00..1683564.35 rows=60644435 width=8) (actual time=0.016..23448.799 rows=60044872 loops=1)
Q21,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=30) (actual time=1.697..30.883 rows=3924 loops=1)
Q21,1.0,->  Hash  (cost=2391.58..2391.58 rows=4000 width=30) (actual time=32.827..32.827 rows=3924 loops=1)
Q21,1.0,->  Hash  (cost=1683564.35..1683564.35 rows=60644435 width=8) (actual time=45321.594..45321.594 rows=60044872 loops=1)
Q21,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.312..1.312 rows=3924 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=34) (actual time=1.681..29.427 rows=3924 loops=1)
Q2,1.0,->  Sort  (cost=395240.86..399233.87 rows=1597205 width=168) (actual time=10296.986..10796.683 rows=1603276 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..5806.62 rows=20000 width=164) (actual time=0.087..190.534 rows=20042 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..230671.90 rows=1597205 width=168) (actual time=0.108..8252.348 rows=1603360 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=8013 width=30) (actual time=0.189..1457.424 rows=7843 loops=1)
Q20,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=20019 width=4) (actual time=0.013..1329.727 rows=21551 loops=1)
Q20,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=55) (actual time=1.737..17.805 rows=4054 loops=1)
Q20,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.332..1.332 rows=4054 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=59) (actual time=1.715..16.325 rows=4054 loops=1)
Q19,1.0,->  Nested Loop  (cost=13471.47..427908.40 rows=1039 width=8) (actual time=261.268..1555.300 rows=1087 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8392.74 rows=400027 width=0) (actual time=158.751..158.751 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4193.94 rows=199747 width=0) (actual time=74.682..74.682 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..291.53 rows=8206 width=0) (actual time=4.000..4.000 rows=7916 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.25 rows=8078 width=0) (actual time=5.975..5.975 rows=8172 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.01 rows=7953 width=0) (actual time=4.505..4.505 rows=8006 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=13471.47..37943.23 rows=10605 width=30) (actual time=259.618..350.712 rows=10271 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=16) (actual time=0.020..4228.812 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1675245.94 rows=60344794 width=8) (actual time=0.079..18874.805 rows=60045826 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1675245.94 rows=60344794 width=8) (actual time=0.035..19088.354 rows=60045826 loops=1)
Q18,1.0,Limit  (cost=10374500.96..10374503.71 rows=100 width=39) (actual time=121461.466..121461.794 rows=99 loops=1)
Q17,1.0,->  Index Only Scan using part_p_container_p_brand_p_partkey_idx on part  (cost=0.00..8102.82 rows=2053 width=4) (actual time=0.311..51.490 rows=2090 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.057..0.444 rows=30 loops=2090)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.057..0.444 rows=30 loops=2090)
Q16,1.0,Sort  (cost=456005.57..456074.97 rows=27761 width=40) (actual time=46082.026..46083.724 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=54225.75..54225.75 rows=296110 width=40) (actual time=1339.355..1339.355 rows=297545 loops=1)
Q16,1.0,->  GroupAggregate  (cost=446308.28..453956.70 rows=27761 width=40) (actual time=44795.040..45750.401 rows=27839 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5654.73 rows=319000 width=0) (actual time=164.178..164.178 rows=320891 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5728.75..54225.75 rows=296110 width=40) (actual time=178.898..1101.415 rows=297545 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47424.96 rows=2274213 width=0) (actual time=1852.108..1852.108 rows=2268510 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47424.96 rows=2274213 width=0) (actual time=1542.531..1542.531 rows=2268510 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47993.51..1159226.71 rows=2274213 width=12) (actual time=2212.945..12584.732 rows=2246578 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47993.51..1159226.71 rows=2274213 width=12) (actual time=1925.973..12832.578 rows=2246578 loops=1)
Q14,1.0,->  Hash Join  (cost=100060.75..1121061.97 rows=687602 width=29) (actual time=2658.093..11124.616 rows=698215 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..14366.85 rows=687602 width=0) (actual time=496.421..496.421 rows=703005 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=14538.75..1020068.93 rows=687602 width=12) (actual time=808.127..6828.864 rows=698215 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446496.39 rows=15134103 width=8) (actual time=0.040..10993.371 rows=14853481 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..818206.45 rows=15134103 width=8) (actual time=1264.473..45669.695 rows=15353502 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..408911.95 rows=15209895 width=20) (actual time=0.031..6449.034 rows=15015000 loops=1)
Q12,1.0,->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.00..380276.84 rows=293638 width=15) (actual time=0.308..12380.702 rows=311447 loops=1)
Q12,1.0,->  Hash Join  (cost=599035.64..988488.67 rows=293638 width=27) (actual time=14343.468..28008.714 rows=311447 loops=1)
Q12,1.0,->  Hash  (cost=408911.95..408911.95 rows=15209895 width=20) (actual time=14333.114..14333.114 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=8) (actual time=1.020..959.657 rows=327600 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=12) (actual time=1.790..2752.216 rows=327600 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.738..23.468 rows=4095 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=0.997..12.265 rows=4095 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.344..1.344 rows=4095 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=0.685..0.685 rows=4095 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.708..21.912 rows=4095 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=0.981..10.903 rows=4095 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1824305.33 rows=59541760 width=20) (actual time=0.028..28466.315 rows=59309269 loops=1)
Q10,1.0,->  Sort  (cost=333918.96..335392.21 rows=589298 width=8) (actual time=3303.004..3476.223 rows=573887 loops=1)
Q10,1.0,->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.00..690859.54 rows=14940208 width=12) (actual time=0.117..13124.458 rows=14822772 loops=1)
Q10,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12650.97 rows=589298 width=0) (actual time=494.131..494.131 rows=578953 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=12798.29..277438.76 rows=589298 width=8) (actual time=668.975..3058.062 rows=573887 loops=1)
Q21,,->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.00..1.97 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=1437940)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..36.76 rows=1 width=16) (actual time=0.107..0.112 rows=0 loops=10271)
Q19,,->  BitmapOr  (cost=13471.47..13471.47 rows=10616 width=0) (actual time=257.623..257.623 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8688.54..8688.54 rows=1616 width=0) (actual time=170.398..170.398 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4488.50..4488.50 rows=794 width=0) (actual time=82.767..82.767 rows=0 loops=1)
