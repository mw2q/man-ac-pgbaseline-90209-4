Q21,1494924.0,->  Hash Semi Join  (cost=2657145.99..4808838.93 rows=1 width=38) (actual time=45916.605..110413.396 rows=1494924 loops=1)
Q21,721365.0,->  Nested Loop  (cost=2657145.99..4808840.88 rows=1 width=34) (actual time=45917.114..128983.662 rows=721365 loops=1)
Q18,403893.1,->  GroupAggregate  (cost=10415496.38..11248525.91 rows=30291983 width=39) (actual time=121318.865..121319.303 rows=75 loops=1)
Q3,319676.6,->  Sort  (cost=2779299.88..2787291.79 rows=3196766 width=20) (actual time=69353.501..69353.504 rows=10 loops=1)
Q18,100999.7,->  Hash Join  (cost=2197138.30..2986257.20 rows=7574980 width=39) (actual time=76703.259..87493.894 rows=75 loops=1)
Q18,100999.7,->  Hash Join  (cost=2128110.30..2765729.60 rows=7574980 width=20) (actual time=74882.338..85671.503 rows=75 loops=1)
Q18,100999.7,->  Hash  (cost=2986257.20..2986257.20 rows=7574980 width=39) (actual time=87494.297..87494.297 rows=75 loops=1)
Q18,57699.0,->  Sort  (cost=10415496.38..10491226.34 rows=30291983 width=39) (actual time=121318.838..121318.901 rows=525 loops=1)
Q18,57699.0,->  Hash Join  (cost=3080944.45..5823049.54 rows=30291983 width=39) (actual time=89347.565..121314.845 rows=525 loops=1)
Q18,54592.3,->  Hash  (cost=2076930.01..2076930.01 rows=4094423 width=4) (actual time=74761.158..74761.158 rows=75 loops=1)
Q18,54592.3,->  HashAggregate  (cost=1984805.49..2035985.78 rows=4094423 width=8) (actual time=66958.926..74760.630 rows=75 loops=1)
Q21,40465.0,->  Nested Loop Anti Join  (cost=2657145.99..4808855.81 rows=1 width=26) (actual time=45917.831..147710.549 rows=40465 loops=1)
Q9,30268.3,->  Sort  (cost=3251334.77..3251335.04 rows=108 width=46) (actual time=234656.457..235674.843 rows=3268979 loops=1)
Q9,30268.3,->  Nested Loop  (cost=2587582.68..3251331.12 rows=108 width=46) (actual time=111664.381..214734.246 rows=3268979 loops=1)
Q9,30268.3,->  Nested Loop  (cost=2587582.68..3251300.32 rows=108 width=24) (actual time=111664.286..199214.399 rows=3268979 loops=1)
Q9,30268.3,->  Nested Loop  (cost=2587582.68..3251088.14 rows=108 width=24) (actual time=111664.118..141448.484 rows=3268979 loops=1)
Q9,30268.3,->  Merge Join  (cost=2587582.68..3251056.69 rows=108 width=28) (actual time=111664.053..123744.422 rows=3268979 loops=1)
Q10,28560.3,->  Sort  (cost=1192828.94..1194256.96 rows=571206 width=175) (actual time=33041.576..33041.578 rows=20 loops=1)
Q7,14767.5,GroupAggregate  (cost=2380412.79..2382332.56 rows=59070 width=64) (actual time=83179.395..83203.181 rows=4 loops=1)
Q2,4690.0,->  Merge Join  (cost=395240.92..827880.44 rows=1 width=190) (actual time=7203.909..11044.819 rows=4690 loops=1)
Q21,4079.0,->  HashAggregate  (cost=4808855.81..4808855.82 rows=1 width=26) (actual time=147871.434..147874.391 rows=4079 loops=1)
Q15,3734.0,->  Subquery Scan on revenue4  (cost=1190201.15..1190285.17 rows=3734 width=12) (actual time=32668.143..32708.806 rows=1 loops=1)
Q15,3734.0,->  Sort  (cost=1190506.71..1190516.05 rows=3734 width=12) (actual time=32708.846..32708.848 rows=1 loops=1)
Q15,3734.0,Merge Join  (cost=2363950.43..2369047.90 rows=3734 width=79) (actual time=32721.147..32721.153 rows=1 loops=1)
Q15,3734.0,->  HashAggregate  (cost=1190201.15..1190247.83 rows=3734 width=12) (actual time=32668.141..32708.800 rows=1 loops=1)
Q8,364.5,Sort  (cost=2262258.36..2262260.18 rows=729 width=38) (actual time=28911.264..28911.264 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=2262210.94..2262223.70 rows=729 width=38) (actual time=28911.173..28911.174 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=4808855.83..4808855.84 rows=1 width=26) (actual time=147879.316..147879.331 rows=100 loops=1)
Q21,100.0,Limit  (cost=4808855.83..4808855.84 rows=1 width=26) (actual time=147879.321..147879.351 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=827880.45..827880.45 rows=1 width=190) (actual time=11054.554..11054.574 rows=100 loops=1)
Q2,100.0,Limit  (cost=827880.45..827880.45 rows=1 width=190) (actual time=11054.557..11054.589 rows=100 loops=1)
Q11,34.1,Sort  (cost=135913.51..136712.11 rows=319441 width=12) (actual time=4321.966..4323.166 rows=9348 loops=1)
Q11,34.1,->  HashAggregate  (cost=52954.85..56947.86 rows=319441 width=12) (actual time=4193.653..4316.468 rows=9348 loops=1)
Q3,28.1,->  HashAggregate  (cost=2678251.25..2710218.91 rows=3196766 width=20) (actual time=69268.733..69334.591 rows=113427 loops=1)
Q15,26.7,->  HashAggregate  (cost=1173359.69..1173397.03 rows=3734 width=12) (actual time=17018.699..17094.924 rows=100000 loops=1)
Q3,10.6,->  Hash Join  (cost=632543.18..2630299.76 rows=3196766 width=20) (actual time=25713.610..68882.082 rows=299923 loops=1)
Q4,10.0,->  Hash  (cost=993263.03..993263.03 rows=1364808 width=4) (actual time=72827.724..72827.724 rows=13767198 loops=1)
Q4,10.0,->  HashAggregate  (cost=979614.95..993263.03 rows=1364808 width=4) (actual time=57265.898..66968.563 rows=13767198 loops=1)
Q16,5.6,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.00..8.45 rows=10 width=4) (actual time=0.076..0.823 rows=56 loops=1)
Q5,5.0,Sort  (cost=2420980.74..2420980.80 rows=25 width=34) (actual time=70954.674..70954.675 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2420979.91..2420980.16 rows=25 width=34) (actual time=70954.595..70954.597 rows=5 loops=1)
Q4,5.0,Sort  (cost=1291124.68..1291124.69 rows=1 width=16) (actual time=85313.405..85313.406 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1291124.66..1291124.67 rows=1 width=16) (actual time=85313.228..85313.229 rows=5 loops=1)
Q21,5.0,->  Index Scan using lineitem_l_orderkey_idx on lineitem l3  (cost=0.00..7.44 rows=5 width=8) (actual time=0.025..0.025 rows=1 loops=721365)
Q15,4.5,->  Index Scan using pk_supplier on supplier  (cost=0.00..4791.46 rows=100000 width=71) (actual time=0.158..9.964 rows=21986 loops=1)
Q13,4.4,Sort  (cost=931386.61..931387.11 rows=200 width=8) (actual time=64638.029..64638.032 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=931376.96..931378.96 rows=200 width=8) (actual time=64637.923..64637.934 rows=45 loops=1)
Q17,3.8,->  Nested Loop  (cost=140.78..407447.92 rows=20366 width=4) (actual time=1.325..1152.824 rows=5333 loops=1)
Q4,3.3,->  Hash Join  (cost=1022119.20..1290369.18 rows=151096 width=16) (actual time=73189.168..84986.390 rows=509300 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=140.78..196.76 rows=10 width=12) (actual time=0.011..0.014 rows=3 loops=2029)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..591.41 rows=1 width=8) (actual time=0.307..0.365 rows=3 loops=21871)
Q22,2.3,Sort  (cost=699437.40..699437.41 rows=3 width=20) (actual time=16434.133..16434.135 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=646545.62..646545.67 rows=3 width=20) (actual time=16434.051..16434.054 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.00..49.84 rows=1 width=4) (actual time=0.057..0.086 rows=2 loops=6312)
Q20,2.0,->  Nested Loop  (cost=0.00..13089227.35 rows=29235 width=4) (actual time=1.637..8758.836 rows=59119 loops=1)
Q16,2.0,->  Sort  (cost=446529.75..448008.02 rows=591310 width=40) (actual time=43876.176..44184.921 rows=1183765 loops=1)
Q16,2.0,->  Hash Join  (cost=57971.07..389842.17 rows=591310 width=40) (actual time=1006.145..12151.845 rows=1183765 loops=1)
Q12,2.0,Sort  (cost=983881.61..983881.61 rows=1 width=27) (actual time=36817.505..36817.505 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=983881.59..983881.60 rows=1 width=27) (actual time=36817.391..36817.393 rows=2 loops=1)
Q10,2.0,->  Merge Join  (cost=332518.71..1069329.38 rows=571206 width=12) (actual time=2385.884..23272.198 rows=1146655 loops=1)
Q10,2.0,->  Hash Join  (cost=401548.27..1157637.15 rows=571206 width=175) (actual time=4862.379..28485.150 rows=1146655 loops=1)
Q10,2.0,->  Hash Join  (cost=401546.71..1149781.50 rows=571206 width=153) (actual time=4862.340..27853.098 rows=1146655 loops=1)
Q21,1.9,->  Hash Join  (cost=2441.58..1904440.42 rows=800365 width=34) (actual time=41.018..47728.893 rows=1550516 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.48..270966.48 rows=4000000 width=8) (actual time=0.891..4980.553 rows=7995520 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.00..929377.26 rows=20095075 width=4) (actual time=0.122..27182.098 rows=37966982 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1818863.45 rows=20035132 width=8) (actual time=0.043..31428.550 rows=37966905 loops=1)
Q9,1.6,GroupAggregate  (cost=3251334.77..3251338.55 rows=108 width=46) (actual time=234669.050..238090.130 rows=175 loops=1)
Q20,1.5,Sort  (cost=13094715.97..13094718.89 rows=1169 width=51) (actual time=8971.919..8972.045 rows=1827 loops=1)
Q20,1.5,->  Nested Loop  (cost=13090250.58..13094656.40 rows=1169 width=51) (actual time=8864.811..8953.440 rows=1827 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=13090250.58..13094289.65 rows=29235 width=55) (actual time=8864.732..8948.869 rows=44843 loops=1)
Q20,1.5,->  Hash  (cost=13089885.14..13089885.14 rows=29235 width=4) (actual time=8864.655..8864.655 rows=44843 loops=1)
Q20,1.5,->  HashAggregate  (cost=13089300.44..13089592.79 rows=29235 width=4) (actual time=8836.577..8855.589 rows=44843 loops=1)
Q1,1.5,Sort  (cost=4227618.04..4227618.05 rows=6 width=20) (actual time=117146.400..117146.400 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4227617.85..4227617.96 rows=6 width=20) (actual time=117146.280..117146.283 rows=4 loops=1)
Q10,1.4,->  HashAggregate  (cost=1171917.30..1177629.36 rows=571206 width=175) (actual time=32452.080..32874.141 rows=381540 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2872.32 rows=139838 width=0) (actual time=1124.913..1124.913 rows=190796 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2907.28..41856.02 rows=139838 width=24) (actual time=1137.591..1455.099 rows=190796 loops=1)
Q18,1.3,Limit  (cost=10415496.38..10415499.13 rows=100 width=39) (actual time=121318.869..121319.320 rows=75 loops=1)
Q9,1.2,->  Sort  (cost=2587582.68..2594378.03 rows=2718141 width=28) (actual time=111663.950..113994.972 rows=3268979 loops=1)
Q9,1.2,->  Seq Scan on part  (cost=0.00..65522.00 rows=90087 width=4) (actual time=0.018..1650.148 rows=108947 loops=1)
Q9,1.2,->  Hash Join  (cost=66648.09..2297092.39 rows=2718141 width=28) (actual time=1722.688..107113.442 rows=3268979 loops=1)
Q9,1.2,->  Hash  (cost=65522.00..65522.00 rows=90087 width=4) (actual time=1722.186..1722.186 rows=108947 loops=1)
Q19,1.1,->  Nested Loop  (cost=13471.43..427801.89 rows=1031 width=8) (actual time=234.059..1511.561 rows=1151 loops=1)
Q9,1.0,->  Seq Scan on lineitem  (cost=0.00..1675245.94 rows=60344794 width=24) (actual time=0.022..19037.690 rows=60045826 loops=1)
Q9,1.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..603091.29 rows=8000000 width=12) (actual time=0.008..5791.004 rows=7999945 loops=1)
Q8,1.0,->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=34.351..1195.172 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=500471.77..2261694.16 rows=25839 width=38) (actual time=21440.651..28845.281 rows=24661 loops=1)
Q8,1.0,->  Nested Loop  (cost=500471.77..2254324.88 rows=25839 width=16) (actual time=21440.565..28688.618 rows=24661 loops=1)
Q8,1.0,->  Nested Loop  (cost=0.00..1743922.56 rows=427509 width=16) (actual time=0.565..5771.415 rows=410464 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..119.69 rows=31 width=20) (actual time=0.039..0.389 rows=30 loops=13700)
Q8,1.0,->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..48699.52 rows=14127 width=4) (actual time=0.471..235.667 rows=13700 loops=1)
Q8,1.0,->  Hash Join  (cost=500471.77..2246790.60 rows=25873 width=16) (actual time=21440.511..28362.524 rows=24661 loops=1)
Q8,1.0,->  Hash Join  (cost=138443.51..489022.28 rows=915959 width=8) (actual time=4946.734..20787.772 rows=913776 loops=1)
Q8,1.0,->  Hash  (cost=489022.28..489022.28 rows=915959 width=8) (actual time=21438.606..21438.606 rows=913776 loops=1)
Q8,1.0,->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=1380.904..1380.904 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..98267.94 rows=4579796 width=0) (actual time=3405.394..3405.394 rows=4598186 loops=1)
Q8,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=21.730..21.730 rows=60193 loops=5)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=99412.89..423657.83 rows=4579796 width=12) (actual time=3565.401..7813.347 rows=4561632 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=31.557..219.999 rows=60193 loops=5)
Q7,1.0,->  Sort  (cost=2380412.79..2380560.46 rows=59070 width=64) (actual time=83171.420..83175.316 rows=58323 loops=1)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..408911.95 rows=15209895 width=8) (actual time=0.016..4670.135 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=905.09..14139.26 rows=119904 width=60) (actual time=33.426..1074.435 rows=119868 loops=1)
Q7,1.0,->  Hash Join  (cost=903326.61..2375731.45 rows=59070 width=64) (actual time=42214.559..82837.487 rows=58323 loops=1)
Q7,1.0,->  Hash Join  (cost=898647.61..2340593.08 rows=1478666 width=72) (actual time=42124.059..79651.419 rows=1452644 loops=1)
Q7,1.0,->  Hash Join  (cost=15638.06..493745.30 rows=1215818 width=60) (actual time=1190.757..26695.624 rows=1197567 loops=1)
Q7,1.0,->  Hash  (cost=493745.30..493745.30 rows=1215818 width=60) (actual time=27625.294..27625.294 rows=1197567 loops=1)
Q7,1.0,->  Hash  (cost=14139.26..14139.26 rows=119904 width=60) (actual time=1190.591..1190.591 rows=119868 loops=1)
Q7,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..385080.06 rows=18498123 width=0) (actual time=13846.894..13846.894 rows=18484985 loops=1)
Q7,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=21.877..21.877 rows=59934 loops=2)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=389704.59..1747495.43 rows=18498123 width=20) (actual time=14497.747..31206.547 rows=18246268 loops=1)
Q7,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=32.105..514.003 rows=59934 loops=2)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..191075.01 rows=9136018 width=0) (actual time=6852.976..6852.976 rows=9151916 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=191174.32..1467474.73 rows=397255 width=8) (actual time=7399.044..26028.407 rows=396935 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1666925.96 rows=60045096 width=16) (actual time=0.023..17313.661 rows=59985329 loops=1)
Q5,1.0,->  Nested Loop  (cost=905.09..35292.22 rows=300000 width=38) (actual time=29.574..1411.372 rows=300963 loops=1)
Q5,1.0,->  Hash Join  (cost=87109.76..387657.63 rows=453261 width=38) (actual time=2960.218..11650.653 rows=455662 loops=1)
Q5,1.0,->  Hash Join  (cost=398002.39..2420255.83 rows=72408 width=34) (actual time=12095.571..70813.067 rows=72634 loops=1)
Q5,1.0,->  Hash Join  (cost=393323.39..2378600.79 rows=1812598 width=46) (actual time=11987.257..66809.048 rows=1822382 loops=1)
Q5,1.0,->  Hash  (cost=387657.63..387657.63 rows=453261 width=38) (actual time=11986.462..11986.462 rows=455662 loops=1)
Q5,1.0,->  Hash  (cost=35292.22..35292.22 rows=300000 width=38) (actual time=1617.138..1617.138 rows=300963 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..47500.97 rows=2266307 width=0) (actual time=1133.616..1133.616 rows=2277830 loops=1)
Q5,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=19.768..19.768 rows=60193 loops=5)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=48067.54..335584.15 rows=2266307 width=8) (actual time=1342.408..4394.958 rows=2275583 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=29.290..259.459 rows=60193 loops=5)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..11656.99 rows=556309 width=0) (actual time=270.221..270.221 rows=557477 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=11796.07..274674.70 rows=556309 width=20) (actual time=359.459..2458.005 rows=555249 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=7433778 width=16) (actual time=0.034..6491.983 rows=7290640 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1842436.95 rows=32893858 width=12) (actual time=0.056..23364.319 rows=32390406 loops=1)
Q3,1.0,->  Hash Join  (cost=49660.32..614047.95 rows=1479619 width=12) (actual time=730.122..24908.697 rows=1457792 loops=1)
Q3,1.0,->  Hash  (cost=614047.95..614047.95 rows=1479619 width=12) (actual time=25711.369..25711.369 rows=1457792 loops=1)
Q3,1.0,->  Hash  (cost=45928.32..45928.32 rows=298560 width=4) (actual time=729.812..729.812 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6843.68 rows=298560 width=0) (actual time=118.112..118.112 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6918.32..45928.32 rows=298560 width=4) (actual time=137.432..588.053 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=4) (actual time=0.048..6715.435 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=409314.79..409314.79 rows=15224879 width=4) (actual time=14562.298..14562.298 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=602533.05..646103.35 rows=58970 width=20) (actual time=15718.438..16394.576 rows=63685 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6547.79 rows=381583 width=0) (actual time=140.288..140.288 rows=382009 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer  (cost=6643.19..51937.74 rows=381583 width=4) (actual time=152.017..922.970 rows=382009 loops=1)
Q21,1.0,->  Seq Scan on lineitem l2  (cost=0.00..1668599.96 rows=60105396 width=8) (actual time=0.056..23883.758 rows=60045603 loops=1)
Q21,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=30) (actual time=1.837..38.774 rows=4079 loops=1)
Q21,1.0,->  Hash  (cost=2391.58..2391.58 rows=4000 width=30) (actual time=40.908..40.908 rows=4079 loops=1)
Q21,1.0,->  Hash  (cost=1668599.96..1668599.96 rows=60105396 width=8) (actual time=45854.727..45854.727 rows=60045603 loops=1)
Q21,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.436..1.436 rows=4079 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=34) (actual time=1.820..37.350 rows=4079 loops=1)
Q2,1.0,->  Sort  (cost=395240.86..399233.87 rows=1597205 width=168) (actual time=7202.840..7789.889 rows=1602960 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..5806.62 rows=20000 width=164) (actual time=0.085..151.347 rows=20037 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..230671.90 rows=1597205 width=168) (actual time=0.138..5152.640 rows=1602960 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=8124 width=30) (actual time=0.379..1844.524 rows=7979 loops=1)
Q20,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=22021 width=4) (actual time=0.092..751.206 rows=21871 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8392.74 rows=400027 width=0) (actual time=132.027..132.027 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4193.94 rows=199747 width=0) (actual time=75.158..75.158 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..291.65 rows=8214 width=0) (actual time=4.832..4.832 rows=7945 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.65 rows=8016 width=0) (actual time=6.369..6.369 rows=8037 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.45 rows=7995 width=0) (actual time=5.548..5.548 rows=7962 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=13471.43..37939.43 rows=10603 width=30) (actual time=233.439..420.731 rows=10437 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=16) (actual time=0.014..5712.872 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1681885.66 rows=60583966 width=8) (actual time=0.057..19295.716 rows=60044176 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1681885.66 rows=60583966 width=8) (actual time=0.036..20979.100 rows=60044176 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.054..0.523 rows=30 loops=2029)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.054..0.523 rows=30 loops=2029)
Q16,1.0,Sort  (cost=456254.61..456324.21 rows=27838 width=40) (actual time=45180.555..45182.430 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=54250.90..54250.90 rows=296936 width=40) (actual time=1004.956..1004.956 rows=296128 loops=1)
Q16,1.0,->  GroupAggregate  (cost=446529.75..454199.50 rows=27838 width=40) (actual time=43876.295..44825.356 rows=27840 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5660.49 rows=319767 width=0) (actual time=75.668..75.668 rows=319296 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5734.72..54250.90 rows=296936 width=40) (actual time=86.665..823.622 rows=296128 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..46994.11 rows=2245528 width=0) (actual time=1765.343..1765.343 rows=2250827 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..46994.11 rows=2245528 width=0) (actual time=1582.669..1582.669 rows=2250827 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47555.49..1150904.41 rows=2245528 width=12) (actual time=2162.269..12908.017 rows=2244102 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47555.49..1150904.41 rows=2245528 width=12) (actual time=2054.794..11959.919 rows=2244102 loops=1)
Q14,1.0,->  Hash Join  (cost=101878.22..1160622.33 rows=772038 width=29) (actual time=3462.782..11000.710 rows=773598 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..16163.21 rows=772038 width=0) (actual time=622.620..622.620 rows=775872 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=16356.22..1057729.47 rows=772038 width=12) (actual time=829.365..5623.203 rows=773598 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446496.39 rows=15134103 width=8) (actual time=0.052..11040.640 rows=14853481 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..818206.45 rows=15134103 width=8) (actual time=1414.563..46383.235 rows=15353502 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=20) (actual time=0.014..6790.722 rows=15015000 loops=1)
Q12,1.0,->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.00..376528.14 rows=291772 width=15) (actual time=0.286..19449.070 rows=311273 loops=1)
Q12,1.0,->  Hash Join  (cost=593129.56..978775.58 rows=291772 width=27) (actual time=15489.899..36241.261 rows=311273 loops=1)
Q12,1.0,->  Hash  (cost=404880.36..404880.36 rows=15059936 width=20) (actual time=15475.254..15475.254 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=8) (actual time=1.460..1016.067 rows=320320 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=12) (actual time=1.671..2459.083 rows=320320 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.613..20.324 rows=4004 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.432..11.844 rows=4004 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.277..1.277 rows=4004 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.001..1.001 rows=4004 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.581..18.686 rows=4004 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.401..10.443 rows=4004 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1836426.01 rows=59779796 width=20) (actual time=0.038..31172.754 rows=59104199 loops=1)
Q10,1.0,->  Sort  (cost=332511.15..333959.21 rows=579225 width=8) (actual time=2385.651..2551.939 rows=573798 loops=1)
Q10,1.0,->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.00..690859.54 rows=14940208 width=12) (actual time=0.129..17794.678 rows=14822772 loops=1)
Q10,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12434.24 rows=579225 width=0) (actual time=243.840..243.840 rows=578947 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=12579.04..277068.42 rows=579225 width=8) (actual time=329.723..2160.761 rows=573798 loops=1)
Q21,,->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.00..1.94 rows=1 width=4) (actual time=0.011..0.011 rows=0 loops=1494924)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..36.76 rows=1 width=16) (actual time=0.095..0.099 rows=0 loops=10437)
Q19,,->  BitmapOr  (cost=13471.43..13471.43 rows=10614 width=0) (actual time=231.163..231.163 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8687.74..8687.74 rows=1599 width=0) (actual time=140.854..140.854 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4489.14..4489.14 rows=801 width=0) (actual time=85.010..85.010 rows=0 loops=1)
