Q21,1461808.0,->  Hash Semi Join  (cost=2688908.86..4866346.60 rows=1 width=38) (actual time=45465.841..107424.700 rows=1461808 loops=1)
Q21,705030.0,->  Nested Loop  (cost=2688908.86..4866348.60 rows=1 width=34) (actual time=45466.289..122267.592 rows=705030 loops=1)
Q18,356021.9,->  GroupAggregate  (cost=10405176.35..11237377.55 rows=30261862 width=39) (actual time=98981.621..98982.123 rows=85 loops=1)
Q3,318389.1,->  Sort  (cost=2746420.01..2754379.73 rows=3183891 width=20) (actual time=77537.858..77537.863 rows=10 loops=1)
Q18,89029.2,->  Hash Join  (cost=2195164.65..2983543.58 rows=7567488 width=39) (actual time=60855.391..69641.533 rows=85 loops=1)
Q18,89029.2,->  Hash Join  (cost=2126136.65..2763165.82 rows=7567488 width=20) (actual time=59540.375..68324.990 rows=85 loops=1)
Q18,89029.2,->  Hash  (cost=2983543.58..2983543.58 rows=7567488 width=39) (actual time=69641.967..69641.967 rows=85 loops=1)
Q18,50860.2,->  Sort  (cost=10405176.35..10480831.00 rows=30261862 width=39) (actual time=98981.592..98981.668 rows=595 loops=1)
Q18,50860.2,->  Hash Join  (cost=3078137.18..5817515.58 rows=30261862 width=39) (actual time=69771.700..98977.126 rows=595 loops=1)
Q18,48169.6,->  Hash  (cost=2074956.36..2074956.36 rows=4094423 width=4) (actual time=59427.452..59427.452 rows=85 loops=1)
Q18,48169.6,->  HashAggregate  (cost=1982831.85..2034012.13 rows=4094423 width=8) (actual time=52794.870..59426.778 rows=85 loops=1)
Q21,39351.0,->  Nested Loop Anti Join  (cost=2688908.86..4866363.81 rows=1 width=26) (actual time=45470.010..137050.820 rows=39351 loops=1)
Q10,27198.6,->  Sort  (cost=1176936.52..1178296.45 rows=543972 width=175) (actual time=29708.347..29708.352 rows=20 loops=1)
Q9,25768.4,->  Sort  (cost=3385516.21..3385516.53 rows=127 width=46) (actual time=226037.471..227059.979 rows=3272599 loops=1)
Q9,25768.4,->  Nested Loop  (cost=2718139.15..3385511.77 rows=127 width=46) (actual time=104283.139..202886.155 rows=3272599 loops=1)
Q9,25768.4,->  Nested Loop  (cost=2718139.15..3385475.55 rows=127 width=24) (actual time=104283.038..187157.269 rows=3272599 loops=1)
Q9,25768.4,->  Nested Loop  (cost=2718139.15..3385226.88 rows=127 width=24) (actual time=104282.893..132797.802 rows=3272599 loops=1)
Q9,25768.4,->  Merge Join  (cost=2718139.15..3385189.90 rows=127 width=28) (actual time=104282.835..114950.209 rows=3272599 loops=1)
Q7,14665.5,GroupAggregate  (cost=2365492.32..2367398.84 rows=58662 width=64) (actual time=80017.780..80046.854 rows=4 loops=1)
Q2,4639.0,->  Merge Join  (cost=395240.92..818903.28 rows=1 width=190) (actual time=10296.972..14251.751 rows=4639 loops=1)
Q21,3991.0,->  HashAggregate  (cost=4866363.82..4866363.83 rows=1 width=26) (actual time=137189.734..137191.461 rows=3991 loops=1)
Q15,3745.0,->  Subquery Scan on revenue6  (cost=1189412.98..1189497.24 rows=3745 width=12) (actual time=33898.380..33910.358 rows=1 loops=1)
Q15,3745.0,->  Sort  (cost=1189719.52..1189728.88 rows=3745 width=12) (actual time=33910.386..33910.387 rows=1 loops=1)
Q15,3745.0,Merge Join  (cost=2362341.31..2367438.95 rows=3745 width=79) (actual time=33947.251..33947.254 rows=1 loops=1)
Q15,3745.0,->  HashAggregate  (cost=1189412.98..1189459.79 rows=3745 width=12) (actual time=33898.378..33910.354 rows=1 loops=1)
Q8,364.5,Sort  (cost=2231252.90..2231254.72 rows=729 width=38) (actual time=29014.454..29014.455 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=2231205.47..2231218.23 rows=729 width=38) (actual time=29014.379..29014.381 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=4866363.84..4866363.84 rows=1 width=26) (actual time=137194.300..137194.306 rows=100 loops=1)
Q21,100.0,Limit  (cost=4866363.84..4866363.84 rows=1 width=26) (actual time=137194.303..137194.322 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=818903.29..818903.30 rows=1 width=190) (actual time=14261.299..14261.324 rows=100 loops=1)
Q2,100.0,Limit  (cost=818903.29..818903.30 rows=1 width=190) (actual time=14261.302..14261.346 rows=100 loops=1)
Q11,31.5,Sort  (cost=135913.51..136712.11 rows=319441 width=12) (actual time=5747.885..5749.119 rows=10130 loops=1)
Q11,31.5,->  HashAggregate  (cost=52954.85..56947.86 rows=319441 width=12) (actual time=5612.423..5741.615 rows=10130 loops=1)
Q3,28.1,->  HashAggregate  (cost=2645778.36..2677617.27 rows=3183891 width=20) (actual time=77397.451..77506.693 rows=113160 loops=1)
Q15,26.7,->  HashAggregate  (cost=1172537.51..1172574.96 rows=3745 width=12) (actual time=16916.993..16983.411 rows=100000 loops=1)
Q3,10.6,->  Hash Join  (cost=625763.37..2598019.99 rows=3183891 width=20) (actual time=29525.992..76996.868 rows=298606 loops=1)
Q4,10.0,->  Hash  (cost=996166.91..996166.91 rows=1364808 width=4) (actual time=70140.361..70140.361 rows=13767175 loops=1)
Q4,10.0,->  HashAggregate  (cost=982518.83..996166.91 rows=1364808 width=4) (actual time=56971.402..66126.015 rows=13767175 loops=1)
Q16,5.6,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.00..8.45 rows=10 width=4) (actual time=0.091..0.938 rows=56 loops=1)
Q5,5.0,Sort  (cost=2448246.07..2448246.13 rows=25 width=34) (actual time=80650.847..80650.847 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2448245.24..2448245.49 rows=25 width=34) (actual time=80650.754..80650.758 rows=5 loops=1)
Q4,5.0,Sort  (cost=1296083.20..1296083.20 rows=1 width=16) (actual time=82041.482..82041.482 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1296083.18..1296083.19 rows=1 width=16) (actual time=82041.321..82041.321 rows=5 loops=1)
Q21,5.0,->  Index Scan using lineitem_l_orderkey_idx on lineitem l3  (cost=0.00..7.58 rows=5 width=8) (actual time=0.020..0.020 rows=1 loops=705030)
Q13,4.3,Sort  (cost=920253.34..920253.84 rows=200 width=8) (actual time=66923.090..66923.094 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=920243.70..920245.70 rows=200 width=8) (actual time=66922.983..66922.990 rows=46 loops=1)
Q17,3.8,->  Nested Loop  (cost=140.78..410454.96 rows=20721 width=4) (actual time=1.298..963.352 rows=5341 loops=1)
Q4,3.3,->  Hash Join  (cost=1025754.30..1295300.47 rows=156541 width=16) (actual time=70620.553..81701.371 rows=526687 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=140.78..196.76 rows=10 width=12) (actual time=0.009..0.012 rows=3 loops=1992)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..575.31 rows=1 width=8) (actual time=0.451..0.585 rows=3 loops=21914)
Q22,2.3,Sort  (cost=696089.00..696089.00 rows=3 width=20) (actual time=15167.753..15167.753 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=643092.03..643092.07 rows=3 width=20) (actual time=15167.670..15167.673 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.00..49.84 rows=1 width=4) (actual time=0.062..0.091 rows=2 loops=6232)
Q20,2.0,->  Nested Loop  (cost=0.00..12734689.26 rows=29235 width=4) (actual time=1.365..14002.605 rows=59447 loops=1)
Q16,2.0,->  Sort  (cost=446927.36..448412.30 rows=593975 width=40) (actual time=45705.283..45994.985 rows=1189772 loops=1)
Q16,2.0,->  Hash Join  (cost=58067.28..389965.03 rows=593975 width=40) (actual time=1649.726..14126.175 rows=1189772 loops=1)
Q12,2.0,Sort  (cost=989678.88..989678.89 rows=1 width=27) (actual time=37446.547..37446.547 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=989678.86..989678.87 rows=1 width=27) (actual time=37446.430..37446.432 rows=2 loops=1)
Q10,2.0,->  Merge Join  (cost=326111.44..1056033.98 rows=543972 width=12) (actual time=6094.438..21339.369 rows=1109371 loops=1)
Q10,2.0,->  Hash Join  (cost=395141.00..1143422.60 rows=543972 width=175) (actual time=8181.016..26124.152 rows=1109371 loops=1)
Q10,2.0,->  Hash Join  (cost=395139.44..1135941.42 rows=543972 width=153) (actual time=8180.970..25494.333 rows=1109371 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.48..270966.48 rows=4000000 width=8) (actual time=0.994..5748.884 rows=7995520 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.00..932132.04 rows=20154718 width=4) (actual time=0.216..26655.741 rows=37965693 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1840625.83 rows=20274849 width=8) (actual time=0.043..32660.950 rows=37966096 loops=1)
Q21,1.8,->  Hash Join  (cost=2441.58..1927197.49 rows=809941 width=34) (actual time=34.730..49917.030 rows=1515809 loops=1)
Q20,1.5,Sort  (cost=12740177.87..12740180.80 rows=1169 width=51) (actual time=14486.170..14486.357 rows=1765 loops=1)
Q20,1.5,->  Nested Loop  (cost=12735712.48..12740118.31 rows=1169 width=51) (actual time=14155.472..14470.750 rows=1765 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=12735712.48..12739751.56 rows=29235 width=55) (actual time=14155.392..14461.360 rows=44914 loops=1)
Q20,1.5,->  Hash  (cost=12735347.04..12735347.04 rows=29235 width=4) (actual time=14155.317..14155.317 rows=44914 loops=1)
Q20,1.5,->  HashAggregate  (cost=12734762.34..12735054.69 rows=29235 width=4) (actual time=14118.217..14144.170 rows=44914 loops=1)
Q1,1.5,Sort  (cost=4211355.70..4211355.72 rows=6 width=20) (actual time=117386.650..117386.651 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4211355.52..4211355.62 rows=6 width=20) (actual time=117386.534..117386.536 rows=4 loops=1)
Q10,1.4,->  HashAggregate  (cost=1157021.90..1162461.62 rows=543972 width=175) (actual time=29228.245..29557.050 rows=371904 loops=1)
Q9,1.3,GroupAggregate  (cost=3385516.21..3385520.66 rows=127 width=46) (actual time=226048.694..229468.891 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2908.44 rows=140653 width=0) (actual time=938.188..938.188 rows=190809 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2943.60..41913.74 rows=140653 width=24) (actual time=952.009..1769.208 rows=190809 loops=1)
Q15,1.3,->  Index Scan using pk_supplier on supplier  (cost=0.00..4791.46 rows=100000 width=71) (actual time=0.087..29.402 rows=71902 loops=1)
Q18,1.1,Limit  (cost=10405176.35..10405179.10 rows=100 width=39) (actual time=98981.627..98982.145 rows=85 loops=1)
Q9,1.0,->  Sort  (cost=2718139.15..2726126.68 rows=3195014 width=28) (actual time=104282.735..106509.281 rows=3272599 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=106103 width=4) (actual time=0.027..1505.349 rows=108938 loops=1)
Q9,1.0,->  Seq Scan on lineitem  (cost=0.00..1671913.57 rows=60224757 width=24) (actual time=0.047..19019.150 rows=60045303 loops=1)
Q9,1.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..603091.29 rows=8000000 width=12) (actual time=0.019..4416.696 rows=7999973 loops=1)
Q9,1.0,->  Hash Join  (cost=66848.29..2372959.57 rows=3195014 width=28) (actual time=1580.730..100596.882 rows=3272599 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=106103 width=4) (actual time=1580.365..1580.365 rows=108938 loops=1)
Q8,1.0,->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=26.620..1006.494 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=495764.03..2230699.77 rows=25285 width=38) (actual time=20034.430..28940.736 rows=25126 loops=1)
Q8,1.0,->  Nested Loop  (cost=495764.03..2223488.49 rows=25285 width=16) (actual time=20034.345..28738.001 rows=25126 loops=1)
Q8,1.0,->  Nested Loop  (cost=0.00..1718006.85 rows=418351 width=16) (actual time=0.362..6854.746 rows=411271 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..119.89 rows=31 width=20) (actual time=0.046..0.471 rows=30 loops=13678)
Q8,1.0,->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..48007.43 rows=13893 width=4) (actual time=0.286..179.871 rows=13678 loops=1)
Q8,1.0,->  Hash Join  (cost=495764.03..2216115.81 rows=25318 width=16) (actual time=20034.287..28327.378 rows=25126 loops=1)
Q8,1.0,->  Hash Join  (cost=135530.69..484371.31 rows=911418 width=8) (actual time=4039.334..19554.466 rows=911910 loops=1)
Q8,1.0,->  Hash  (cost=484371.31..484371.31 rows=911418 width=8) (actual time=20032.311..20032.311 rows=911910 loops=1)
Q8,1.0,->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=1173.829..1173.829 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..95360.80 rows=4557090 width=0) (actual time=2715.960..2715.960 rows=4575464 loops=1)
Q8,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=17.122..17.122 rows=59899 loops=5)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=96500.07..419137.42 rows=4557090 width=12) (actual time=2864.683..6683.138 rows=4561773 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=26.243..183.685 rows=59899 loops=5)
Q7,1.0,->  Sort  (cost=2365492.32..2365638.98 rows=58662 width=64) (actual time=80008.758..80016.069 rows=58133 loops=1)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=8) (actual time=0.016..4865.449 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=905.09..14139.26 rows=119904 width=60) (actual time=19.071..358.370 rows=120787 loops=1)
Q7,1.0,->  Hash Join  (cost=898613.01..2360846.25 rows=58662 width=64) (actual time=43453.531..79695.106 rows=58133 loops=1)
Q7,1.0,->  Hash Join  (cost=893934.01..2325918.30 rows=1468451 width=72) (actual time=43364.308..76309.138 rows=1467866 loops=1)
Q7,1.0,->  Hash Join  (cost=15638.06..490446.39 rows=1207429 width=60) (actual time=412.762..28540.948 rows=1211035 loops=1)
Q7,1.0,->  Hash  (cost=490446.39..490446.39 rows=1207429 width=60) (actual time=29416.691..29416.691 rows=1211035 loops=1)
Q7,1.0,->  Hash  (cost=14139.26..14139.26 rows=119904 width=60) (actual time=412.626..412.626 rows=120787 loops=1)
Q7,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..383802.18 rows=18370335 width=0) (actual time=13262.642..13262.642 rows=18356292 loops=1)
Q7,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=12.983..12.983 rows=60394 loops=2)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=388394.76..1736805.79 rows=18370335 width=20) (actual time=13946.916..27407.225 rows=18247310 loops=1)
Q7,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=19.742..164.576 rows=60394 loops=2)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..190983.37 rows=9126854 width=0) (actual time=7643.868..7643.868 rows=9142993 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=191174.36..1466194.57 rows=763959 width=8) (actual time=8254.302..25425.712 rows=762635 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1685233.66 rows=60704566 width=16) (actual time=0.037..19526.596 rows=60044994 loops=1)
Q5,1.0,->  Nested Loop  (cost=905.09..35292.22 rows=300000 width=38) (actual time=38.917..1109.367 rows=299493 loops=1)
Q5,1.0,->  Hash Join  (cost=88793.04..392642.50 rows=458241 width=38) (actual time=2755.812..12525.473 rows=455345 loops=1)
Q5,1.0,->  Hash Join  (cost=403049.52..2447513.21 rows=73203 width=34) (actual time=13013.716..80477.420 rows=72344 loops=1)
Q5,1.0,->  Hash Join  (cost=398370.52..2405452.08 rows=1832505 width=46) (actual time=12877.212..76091.313 rows=1821926 loops=1)
Q5,1.0,->  Hash  (cost=392642.50..392642.50 rows=458241 width=38) (actual time=12876.578..12876.578 rows=455345 loops=1)
Q5,1.0,->  Hash  (cost=35292.22..35292.22 rows=300000 width=38) (actual time=1317.083..1317.083 rows=299493 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..49178.02 rows=2291203 width=0) (actual time=1265.903..1265.903 rows=2302785 loops=1)
Q5,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=21.537..21.537 rows=59899 loops=5)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=49750.82..340425.87 rows=2291203 width=8) (actual time=1437.150..4867.662 rows=2277498 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=32.111..199.318 rows=59899 loops=5)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12382.77 rows=578079 width=0) (actual time=306.832..306.832 rows=578359 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=12527.29..276493.47 rows=578079 width=20) (actual time=477.667..2462.478 rows=574256 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..441649.60 rows=7353600 width=16) (actual time=0.017..6969.087 rows=7303203 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1818863.45 rows=32414470 width=12) (actual time=0.062..25038.075 rows=32340889 loops=1)
Q3,1.0,->  Hash Join  (cost=49784.82..607309.51 rows=1476309 width=12) (actual time=706.328..25618.323 rows=1456776 loops=1)
Q3,1.0,->  Hash  (cost=607309.51..607309.51 rows=1476309 width=12) (actual time=29523.475..29523.475 rows=1456776 loops=1)
Q3,1.0,->  Hash  (cost=46020.57..46020.57 rows=301140 width=4) (actual time=706.058..706.058 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6903.03 rows=301140 width=0) (actual time=99.884..99.884 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6978.32..46020.57 rows=301140 width=4) (actual time=112.061..563.314 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.038..5961.457 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=12891.717..12891.717 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=599028.54..642647.18 rows=59313 width=20) (actual time=13856.795..15109.734 rows=63505 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6588.49 rows=383807 width=0) (actual time=136.173..136.173 rows=382113 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer  (cost=6684.44..52037.37 rows=383807 width=4) (actual time=148.422..717.590 rows=382113 loops=1)
Q21,1.0,->  Seq Scan on lineitem l2  (cost=0.00..1688564.46 rows=60824546 width=8) (actual time=0.060..23721.335 rows=60045033 loops=1)
Q21,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=30) (actual time=2.139..31.988 rows=3991 loops=1)
Q21,1.0,->  Hash  (cost=2391.58..2391.58 rows=4000 width=30) (actual time=34.589..34.589 rows=3991 loops=1)
Q21,1.0,->  Hash  (cost=1688564.46..1688564.46 rows=60824546 width=8) (actual time=45374.756..45374.756 rows=60045033 loops=1)
Q21,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.693..1.693 rows=3991 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=34) (actual time=2.118..30.244 rows=3991 loops=1)
Q2,1.0,->  Sort  (cost=395240.86..399233.87 rows=1597205 width=168) (actual time=10296.112..10946.768 rows=1602847 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..5806.62 rows=20000 width=164) (actual time=0.055..184.779 rows=20037 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..230671.90 rows=1597205 width=168) (actual time=0.087..6951.952 rows=1602960 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=7898 width=30) (actual time=0.260..1868.506 rows=7844 loops=1)
Q20,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=22021 width=4) (actual time=0.020..1129.244 rows=21914 loops=1)
Q19,1.0,->  Nested Loop  (cost=13470.04..421009.36 rows=1023 width=8) (actual time=186.118..1484.227 rows=1105 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8392.74 rows=400027 width=0) (actual time=85.529..85.529 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4193.94 rows=199747 width=0) (actual time=79.300..79.300 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.25 rows=8074 width=0) (actual time=5.947..5.947 rows=7909 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.69 rows=8022 width=0) (actual time=3.408..3.408 rows=7959 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.65 rows=8017 width=0) (actual time=4.062..4.062 rows=7921 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=13470.04..37668.21 rows=10422 width=30) (actual time=185.735..285.783 rows=10257 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=16) (actual time=0.019..4436.951 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1680213.23 rows=60523723 width=8) (actual time=0.079..16575.355 rows=60044082 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1680213.23 rows=60523723 width=8) (actual time=0.014..15708.869 rows=60044082 loops=1)
Q17,1.0,->  Index Only Scan using part_p_container_p_brand_p_partkey_idx on part  (cost=0.00..8066.65 rows=2044 width=4) (actual time=0.298..39.100 rows=1992 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.050..0.431 rows=30 loops=1992)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.050..0.431 rows=30 loops=1992)
Q16,1.0,Sort  (cost=456697.01..456766.92 rows=27964 width=40) (actual time=46969.446..46973.474 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=54330.38..54330.38 rows=298274 width=40) (actual time=1648.414..1648.414 rows=297606 loops=1)
Q16,1.0,->  GroupAggregate  (cost=446927.36..454631.69 rows=27964 width=40) (actual time=45705.403..46612.643 rows=27840 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5700.31 rows=321340 width=0) (actual time=158.575..158.575 rows=320709 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5774.88..54330.38 rows=298274 width=40) (actual time=181.890..1425.416 rows=297606 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47115.45 rows=2250062 width=0) (actual time=1668.934..1668.934 rows=2251993 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47115.45 rows=2250062 width=0) (actual time=1655.928..1655.928 rows=2251993 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47677.96..1150036.89 rows=2250062 width=12) (actual time=2081.532..12840.952 rows=2247211 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47677.96..1150036.89 rows=2250062 width=12) (actual time=2053.247..12749.784 rows=2247211 loops=1)
Q14,1.0,->  Hash Join  (cost=101747.86..1166760.18 rows=769857 width=29) (actual time=2914.202..12433.131 rows=772407 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..16033.40 rows=769857 width=0) (actual time=527.971..527.971 rows=782561 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=16225.86..1063916.40 rows=769857 width=12) (actual time=727.976..7642.534 rows=772407 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..442089.90 rows=14865032 width=8) (actual time=0.042..11442.555 rows=14853968 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..808418.54 rows=14865032 width=8) (actual time=1957.755..48047.491 rows=15353984 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=20) (actual time=0.020..8267.235 rows=15015000 loops=1)
Q12,1.0,->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.00..378770.73 rows=291960 width=15) (actual time=0.237..20103.133 rows=310949 loops=1)
Q12,1.0,->  Hash Join  (cost=596675.08..984569.56 rows=291960 width=27) (actual time=15762.599..36881.580 rows=310949 loops=1)
Q12,1.0,->  Hash  (cost=407300.59..407300.59 rows=15149959 width=20) (actual time=15754.055..15754.055 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=8) (actual time=1.611..1101.680 rows=314720 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=12) (actual time=2.036..3886.388 rows=314720 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.928..25.715 rows=3934 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.574..12.126 rows=3934 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.499..1.499 rows=3934 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.175..1.175 rows=3934 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.896..23.476 rows=3934 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.553..10.795 rows=3934 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1835175.44 rows=59404502 width=20) (actual time=0.041..30699.157 rows=58831712 loops=1)
Q10,1.0,->  Sort  (cost=326103.98..327482.98 rows=551601 width=8) (actual time=6094.288..6246.892 rows=554213 loops=1)
Q10,1.0,->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.00..684713.99 rows=14807321 width=12) (actual time=0.103..12051.888 rows=14808303 loops=1)
Q10,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..11565.91 rows=551601 width=0) (actual time=307.256..307.256 rows=554821 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=11703.81..273499.82 rows=551601 width=8) (actual time=419.070..5789.457 rows=554213 loops=1)
Q21,,->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.00..1.98 rows=1 width=4) (actual time=0.009..0.009 rows=0 loops=1461808)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..36.77 rows=1 width=16) (actual time=0.106..0.110 rows=0 loops=10257)
Q19,,->  BitmapOr  (cost=13470.04..13470.04 rows=10432 width=0) (actual time=183.899..183.899 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8687.85..8687.85 rows=1603 width=0) (actual time=91.887..91.887 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4489.65..4489.65 rows=806 width=0) (actual time=88.320..88.320 rows=0 loops=1)
