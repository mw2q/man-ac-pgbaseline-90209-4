Q21,1462274.0,->  Hash Semi Join  (cost=2686280.86..4861589.03 rows=1 width=38) (actual time=41969.127..93448.863 rows=1462274 loops=1)
Q21,704997.0,->  Nested Loop  (cost=2686280.86..4861591.03 rows=1 width=34) (actual time=41969.954..110751.089 rows=704997 loops=1)
Q3,320569.9,->  Sort  (cost=2765192.55..2773206.80 rows=3205699 width=20) (actual time=68210.656..68210.657 rows=10 loops=1)
Q18,304122.7,->  GroupAggregate  (cost=10456704.98..11293042.48 rows=30412273 width=39) (actual time=121849.354..121849.638 rows=100 loops=1)
Q18,75296.5,->  Hash Join  (cost=2205020.00..2997098.82 rows=7604948 width=39) (actual time=82290.395..93706.277 rows=101 loops=1)
Q18,75296.5,->  Hash Join  (cost=2135992.00..2775971.86 rows=7604948 width=20) (actual time=81088.091..92494.215 rows=101 loops=1)
Q18,75296.5,->  Hash  (cost=2997098.82..2997098.82 rows=7604948 width=39) (actual time=93706.779..93706.779 rows=101 loops=1)
Q18,43384.1,->  Sort  (cost=10456704.98..10532735.66 rows=30412273 width=39) (actual time=121849.337..121849.380 rows=701 loops=1)
Q18,43015.9,->  Hash Join  (cost=3092160.67..5845154.71 rows=30412273 width=39) (actual time=93751.909..121846.211 rows=707 loops=1)
Q18,40538.8,->  Hash  (cost=2084811.71..2084811.71 rows=4094423 width=4) (actual time=80914.919..80914.919 rows=101 loops=1)
Q18,40538.8,->  HashAggregate  (cost=1992687.19..2043867.48 rows=4094423 width=8) (actual time=72275.769..80914.085 rows=101 loops=1)
Q21,39575.0,->  Nested Loop Anti Join  (cost=2686280.86..4861606.22 rows=1 width=26) (actual time=41975.765..124970.475 rows=39575 loops=1)
Q10,28340.2,->  Sort  (cost=1192702.33..1194119.34 rows=566804 width=175) (actual time=39272.063..39272.069 rows=20 loops=1)
Q9,27179.3,->  Sort  (cost=3361504.00..3361504.30 rows=120 width=46) (actual time=232765.644..233748.814 rows=3261527 loops=1)
Q9,27179.3,->  Nested Loop  (cost=2695498.52..3361499.85 rows=120 width=46) (actual time=109835.848..209995.952 rows=3261527 loops=1)
Q9,27179.3,->  Nested Loop  (cost=2695498.52..3361465.63 rows=120 width=24) (actual time=109835.773..194330.386 rows=3261527 loops=1)
Q9,27179.3,->  Nested Loop  (cost=2695498.52..3361230.66 rows=120 width=24) (actual time=109835.671..139508.436 rows=3261527 loops=1)
Q9,27179.3,->  Merge Join  (cost=2695498.52..3361195.72 rows=120 width=28) (actual time=109835.622..121536.900 rows=3261527 loops=1)
Q7,14665.5,GroupAggregate  (cost=2365492.32..2367398.84 rows=58662 width=64) (actual time=82312.092..82341.101 rows=4 loops=1)
Q2,4755.0,->  Merge Join  (cost=395240.92..822494.14 rows=1 width=190) (actual time=10510.818..14625.020 rows=4755 loops=1)
Q21,3995.0,->  HashAggregate  (cost=4861606.22..4861606.23 rows=1 width=26) (actual time=125103.739..125105.689 rows=3995 loops=1)
Q15,3757.0,->  Subquery Scan on revenue8  (cost=1189787.42..1189871.95 rows=3757 width=12) (actual time=33210.564..33212.954 rows=1 loops=1)
Q15,3757.0,->  Sort  (cost=1190095.03..1190104.42 rows=3757 width=12) (actual time=33212.987..33212.990 rows=1 loops=1)
Q15,3757.0,Merge Join  (cost=2363039.17..2368136.98 rows=3757 width=79) (actual time=33238.838..33238.844 rows=1 loops=1)
Q15,3757.0,->  HashAggregate  (cost=1189787.42..1189834.38 rows=3757 width=12) (actual time=33210.561..33212.950 rows=1 loops=1)
Q8,364.5,Sort  (cost=2144285.16..2144286.99 rows=729 width=38) (actual time=28535.845..28535.846 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=2144237.74..2144250.50 rows=729 width=38) (actual time=28535.774..28535.774 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=4861606.24..4861606.25 rows=1 width=26) (actual time=125108.648..125108.655 rows=100 loops=1)
Q21,100.0,Limit  (cost=4861606.24..4861606.25 rows=1 width=26) (actual time=125108.651..125108.669 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=822494.15..822494.16 rows=1 width=190) (actual time=14634.663..14634.688 rows=100 loops=1)
Q2,100.0,Limit  (cost=822494.15..822494.16 rows=1 width=190) (actual time=14634.667..14634.706 rows=100 loops=1)
Q11,34.2,Sort  (cost=135913.51..136712.11 rows=319441 width=12) (actual time=3340.595..3341.675 rows=9322 loops=1)
Q11,34.2,->  HashAggregate  (cost=52954.85..56947.86 rows=319441 width=12) (actual time=3208.904..3335.571 rows=9322 loops=1)
Q3,28.3,->  HashAggregate  (cost=2663861.56..2695918.55 rows=3205699 width=20) (actual time=68122.408..68190.013 rows=113175 loops=1)
Q15,26.6,->  HashAggregate  (cost=1172859.59..1172897.16 rows=3757 width=12) (actual time=15000.307..15075.453 rows=100000 loops=1)
Q3,10.7,->  Hash Join  (cost=630017.25..2615776.07 rows=3205699 width=20) (actual time=22965.670..67693.445 rows=298939 loops=1)
Q4,10.0,->  Hash  (cost=996166.91..996166.91 rows=1364808 width=4) (actual time=74259.378..74259.378 rows=13767175 loops=1)
Q4,10.0,->  HashAggregate  (cost=982518.83..996166.91 rows=1364808 width=4) (actual time=61877.560..70952.313 rows=13767175 loops=1)
Q16,5.6,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.00..8.45 rows=10 width=4) (actual time=0.067..0.894 rows=56 loops=1)
Q5,5.0,Sort  (cost=2426953.88..2426953.94 rows=25 width=34) (actual time=79037.059..79037.059 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2426953.04..2426953.29 rows=25 width=34) (actual time=79036.957..79036.961 rows=5 loops=1)
Q4,5.0,Sort  (cost=1296083.20..1296083.20 rows=1 width=16) (actual time=84293.731..84293.732 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1296083.18..1296083.19 rows=1 width=16) (actual time=84293.557..84293.559 rows=5 loops=1)
Q21,5.0,->  Index Scan using lineitem_l_orderkey_idx on lineitem l3  (cost=0.00..7.57 rows=5 width=8) (actual time=0.019..0.019 rows=1 loops=704997)
Q13,4.4,Sort  (cost=927553.56..927554.06 rows=200 width=8) (actual time=64344.770..64344.775 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=927543.91..927545.91 rows=200 width=8) (actual time=64344.614..64344.621 rows=45 loops=1)
Q17,3.6,->  Nested Loop  (cost=140.78..405841.77 rows=20266 width=4) (actual time=1.336..1090.562 rows=5479 loops=1)
Q4,3.3,->  Hash Join  (cost=1025754.30..1295300.47 rows=156541 width=16) (actual time=74815.555..84066.482 rows=519938 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=140.78..196.76 rows=10 width=12) (actual time=0.011..0.014 rows=3 loops=2040)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..575.31 rows=1 width=8) (actual time=0.481..0.613 rows=3 loops=21709)
Q22,2.3,Sort  (cost=697053.89..697053.89 rows=3 width=20) (actual time=17313.257..17313.259 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=644175.39..644175.44 rows=3 width=20) (actual time=17313.175..17313.178 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.00..49.84 rows=1 width=4) (actual time=0.064..0.095 rows=2 loops=6411)
Q20,2.0,->  Nested Loop  (cost=0.00..12734689.26 rows=29235 width=4) (actual time=1.014..14331.095 rows=58786 loops=1)
Q16,2.0,->  Sort  (cost=446305.20..447779.13 rows=589572 width=40) (actual time=45021.400..45321.047 rows=1185984 loops=1)
Q16,2.0,->  Hash Join  (cost=57943.04..389796.76 rows=589572 width=40) (actual time=1273.249..12649.863 rows=1185984 loops=1)
Q15,2.0,->  Index Scan using pk_supplier on supplier  (cost=0.00..4791.46 rows=100000 width=71) (actual time=0.087..20.838 rows=47970 loops=1)
Q12,2.0,Sort  (cost=986838.43..986838.43 rows=1 width=27) (actual time=31523.924..31523.925 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=986838.41..986838.42 rows=1 width=27) (actual time=31523.766..31523.768 rows=2 loops=1)
Q10,2.0,->  Merge Join  (cost=332150.99..1069622.54 rows=566804 width=12) (actual time=2566.670..29605.716 rows=1147521 loops=1)
Q10,2.0,->  Hash Join  (cost=401180.55..1157781.74 rows=566804 width=175) (actual time=4787.791..34903.682 rows=1147521 loops=1)
Q10,2.0,->  Hash Join  (cost=401178.99..1149986.62 rows=566804 width=153) (actual time=4787.746..34123.709 rows=1147521 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.48..270966.48 rows=4000000 width=8) (actual time=0.967..4837.347 rows=7995520 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.00..932132.04 rows=20154718 width=4) (actual time=0.234..29841.636 rows=37965693 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1838824.94 rows=20255012 width=8) (actual time=0.053..26394.396 rows=37966199 loops=1)
Q21,1.8,->  Hash Join  (cost=2441.58..1925314.30 rows=809149 width=34) (actual time=40.989..39692.845 rows=1516373 loops=1)
Q20,1.5,Sort  (cost=12740177.87..12740180.80 rows=1169 width=51) (actual time=14662.833..14662.936 rows=1790 loops=1)
Q20,1.5,->  Nested Loop  (cost=12735712.48..12740118.31 rows=1169 width=51) (actual time=14496.240..14653.561 rows=1790 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=12735712.48..12739751.56 rows=29235 width=55) (actual time=14496.038..14644.636 rows=44620 loops=1)
Q20,1.5,->  Hash  (cost=12735347.04..12735347.04 rows=29235 width=4) (actual time=14495.967..14495.967 rows=44620 loops=1)
Q20,1.5,->  HashAggregate  (cost=12734762.34..12735054.69 rows=29235 width=4) (actual time=14447.161..14478.670 rows=44620 loops=1)
Q1,1.5,Sort  (cost=4202005.96..4202005.98 rows=6 width=20) (actual time=111268.795..111268.795 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4202005.78..4202005.88 rows=6 width=20) (actual time=111268.670..111268.673 rows=4 loops=1)
Q9,1.4,GroupAggregate  (cost=3361504.00..3361508.20 rows=120 width=46) (actual time=232777.455..236080.048 rows=175 loops=1)
Q10,1.4,->  HashAggregate  (cost=1171951.84..1177619.88 rows=566804 width=175) (actual time=38718.534..39099.113 rows=381864 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2870.99 rows=139705 width=0) (actual time=1120.292..1120.292 rows=190261 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2905.91..41851.17 rows=139705 width=24) (actual time=1134.079..1421.028 rows=190261 loops=1)
Q19,1.1,->  Nested Loop  (cost=13470.24..425681.41 rows=1023 width=8) (actual time=289.892..2396.543 rows=1168 loops=1)
Q9,1.0,->  Sort  (cost=2695498.52..2703034.89 rows=3014550 width=28) (actual time=109835.448..111975.420 rows=3261527 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=100110 width=4) (actual time=0.033..1781.331 rows=108669 loops=1)
Q9,1.0,->  Seq Scan on lineitem  (cost=0.00..1671913.57 rows=60224757 width=24) (actual time=0.046..19139.569 rows=60045303 loops=1)
Q9,1.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..603091.29 rows=8000000 width=12) (actual time=0.016..5517.198 rows=7999969 loops=1)
Q9,1.0,->  Hash Join  (cost=66773.38..2371080.02 rows=3014550 width=28) (actual time=1865.148..106068.513 rows=3261527 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=100110 width=4) (actual time=1864.721..1864.721 rows=108669 loops=1)
Q8,1.0,->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=33.569..1590.631 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=495764.03..2143761.36 rows=23819 width=38) (actual time=21228.266..28474.852 rows=24094 loops=1)
Q8,1.0,->  Nested Loop  (cost=495764.03..2136968.18 rows=23819 width=16) (actual time=21228.185..28312.831 rows=24094 loops=1)
Q8,1.0,->  Nested Loop  (cost=0.00..1632050.06 rows=394081 width=16) (actual time=0.428..5500.185 rows=396959 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..120.91 rows=31 width=20) (actual time=0.039..0.384 rows=30 loops=13240)
Q8,1.0,->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..45605.35 rows=13087 width=4) (actual time=0.342..224.112 rows=13240 loops=1)
Q8,1.0,->  Hash Join  (cost=495764.03..2130022.99 rows=23850 width=16) (actual time=21228.136..27994.132 rows=24094 loops=1)
Q8,1.0,->  Hash Join  (cost=135530.69..484371.31 rows=911418 width=8) (actual time=5037.384..20475.780 rows=911910 loops=1)
Q8,1.0,->  Hash  (cost=484371.31..484371.31 rows=911418 width=8) (actual time=21226.823..21226.823 rows=911910 loops=1)
Q8,1.0,->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=1773.019..1773.019 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..95360.80 rows=4557090 width=0) (actual time=3129.630..3129.630 rows=4575464 loops=1)
Q8,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=22.753..22.753 rows=59899 loops=5)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=96500.07..419137.42 rows=4557090 width=12) (actual time=3264.090..7383.257 rows=4561773 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=32.810..298.540 rows=59899 loops=5)
Q7,1.0,->  Sort  (cost=2365492.32..2365638.98 rows=58662 width=64) (actual time=82302.460..82309.710 rows=58363 loops=1)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=8) (actual time=0.022..5845.661 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=905.09..14139.26 rows=119904 width=60) (actual time=21.324..1015.113 rows=119310 loops=1)
Q7,1.0,->  Hash Join  (cost=898613.01..2360846.25 rows=58662 width=64) (actual time=47980.292..81993.032 rows=58363 loops=1)
Q7,1.0,->  Hash Join  (cost=893934.01..2325918.30 rows=1468451 width=72) (actual time=47851.801..78722.806 rows=1454706 loops=1)
Q7,1.0,->  Hash Join  (cost=15638.06..490446.39 rows=1207429 width=60) (actual time=1106.574..32277.143 rows=1194759 loops=1)
Q7,1.0,->  Hash  (cost=490446.39..490446.39 rows=1207429 width=60) (actual time=33059.067..33059.067 rows=1194759 loops=1)
Q7,1.0,->  Hash  (cost=14139.26..14139.26 rows=119904 width=60) (actual time=1106.404..1106.404 rows=119310 loops=1)
Q7,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..383802.18 rows=18370335 width=0) (actual time=14150.984..14150.984 rows=18360093 loops=1)
Q7,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=18.021..18.021 rows=59655 loops=2)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=388394.76..1736805.79 rows=18370335 width=20) (actual time=14791.859..27524.442 rows=18247310 loops=1)
Q7,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=26.655..486.085 rows=59655 loops=2)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..193332.57 rows=9272574 width=0) (actual time=7026.679..7026.679 rows=9223591 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=193535.28..1479288.20 rows=810853 width=8) (actual time=7628.058..25672.798 rows=796629 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1670259.89 rows=60165189 width=16) (actual time=0.048..19628.369 rows=60045379 loops=1)
Q5,1.0,->  Nested Loop  (cost=905.09..35292.22 rows=300000 width=38) (actual time=32.884..1222.404 rows=300270 loops=1)
Q5,1.0,->  Hash Join  (cost=87544.70..389074.18 rows=457846 width=38) (actual time=3213.127..13971.242 rows=456815 loops=1)
Q5,1.0,->  Hash Join  (cost=399476.26..2426221.64 rows=73140 width=34) (actual time=14480.146..78854.254 rows=72833 loops=1)
Q5,1.0,->  Hash Join  (cost=394797.26..2384192.48 rows=1830938 width=46) (actual time=14347.083..74911.252 rows=1826686 loops=1)
Q5,1.0,->  Hash  (cost=389074.18..389074.18 rows=457846 width=38) (actual time=14346.421..14346.421 rows=456815 loops=1)
Q5,1.0,->  Hash  (cost=35292.22..35292.22 rows=300000 width=38) (actual time=1433.131..1433.131 rows=300270 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..47930.18 rows=2289228 width=0) (actual time=1664.595..1664.595 rows=2288556 loops=1)
Q5,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=22.720..22.720 rows=60054 loops=5)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=48502.48..336868.90 rows=2289228 width=8) (actual time=1779.483..6070.173 rows=2284077 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=33.150..220.475 rows=60054 loops=5)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12382.77 rows=578079 width=0) (actual time=349.989..349.989 rows=571385 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=12527.29..276493.47 rows=578079 width=20) (actual time=554.204..2161.458 rows=567379 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..444735.19 rows=7417556 width=16) (actual time=0.014..5663.152 rows=7316106 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1831522.54 rows=32581145 width=12) (actual time=0.061..24978.449 rows=32288593 loops=1)
Q3,1.0,->  Hash Join  (cost=49784.82..611402.89 rows=1489149 width=12) (actual time=953.868..22275.936 rows=1459477 loops=1)
Q3,1.0,->  Hash  (cost=611402.89..611402.89 rows=1489149 width=12) (actual time=22963.871..22963.871 rows=1459477 loops=1)
Q3,1.0,->  Hash  (cost=46020.57..46020.57 rows=301140 width=4) (actual time=953.668..953.668 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6903.03 rows=301140 width=0) (actual time=64.262..64.262 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6978.32..46020.57 rows=301140 width=4) (actual time=73.434..807.854 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=4) (actual time=0.024..7691.524 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=407703.43..407703.43 rows=15164943 width=4) (actual time=15427.364..15427.364 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=600171.13..643733.54 rows=58914 width=20) (actual time=16579.255..17263.825 rows=63422 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6545.06 rows=381219 width=0) (actual time=92.347..92.347 rows=381060 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer  (cost=6640.37..51925.36 rows=381219 width=4) (actual time=101.789..929.012 rows=381060 loops=1)
Q21,1.0,->  Seq Scan on lineitem l2  (cost=0.00..1686912.35 rows=60765035 width=8) (actual time=0.059..21812.711 rows=60045297 loops=1)
Q21,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=30) (actual time=2.059..38.335 rows=3995 loops=1)
Q21,1.0,->  Hash  (cost=2391.58..2391.58 rows=4000 width=30) (actual time=40.886..40.886 rows=3995 loops=1)
Q21,1.0,->  Hash  (cost=1686912.35..1686912.35 rows=60765035 width=8) (actual time=41894.358..41894.358 rows=60045297 loops=1)
Q21,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.611..1.611 rows=3995 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=34) (actual time=2.020..36.643 rows=3995 loops=1)
Q2,1.0,->  Sort  (cost=395240.86..399233.87 rows=1597205 width=168) (actual time=10509.475..11135.085 rows=1602938 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..5806.62 rows=20000 width=164) (actual time=0.089..187.656 rows=20037 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..230671.90 rows=1597205 width=168) (actual time=0.138..7719.770 rows=1602960 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=7988 width=30) (actual time=0.409..1991.982 rows=7941 loops=1)
Q20,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=22021 width=4) (actual time=0.032..953.449 rows=21709 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8392.74 rows=400027 width=0) (actual time=138.893..138.893 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4193.94 rows=199747 width=0) (actual time=113.153..113.153 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..291.13 rows=8164 width=0) (actual time=6.322..6.322 rows=7858 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.37 rows=7989 width=0) (actual time=5.549..5.549 rows=7852 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.13 rows=7963 width=0) (actual time=7.832..7.832 rows=7966 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=13470.24..37854.85 rows=10547 width=30) (actual time=289.134..551.003 rows=10281 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..408911.95 rows=15209895 width=16) (actual time=0.011..5607.639 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1688564.46 rows=60824546 width=8) (actual time=0.056..15761.970 rows=60045033 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1688564.46 rows=60824546 width=8) (actual time=0.038..21129.301 rows=60045033 loops=1)
Q17,1.0,->  Index Only Scan using part_p_container_p_brand_p_partkey_idx on part  (cost=0.00..7978.23 rows=2021 width=4) (actual time=0.221..41.023 rows=2040 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.051..0.478 rows=30 loops=2040)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.051..0.478 rows=30 loops=2040)
Q16,1.0,Sort  (cost=456000.88..456070.27 rows=27756 width=40) (actual time=46320.407..46323.915 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=54233.78..54233.78 rows=296063 width=40) (actual time=1272.033..1272.033 rows=296651 loops=1)
Q16,1.0,->  GroupAggregate  (cost=446305.20..453952.41 rows=27756 width=40) (actual time=45021.523..45939.949 rows=27840 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5656.59 rows=319247 width=0) (actual time=66.984..66.984 rows=319668 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5730.60..54233.78 rows=296063 width=40) (actual time=76.957..1048.340 rows=296651 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47261.26 rows=2257043 width=0) (actual time=2061.570..2061.570 rows=2252299 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47261.26 rows=2257043 width=0) (actual time=1676.396..1676.396 rows=2252299 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47825.52..1150289.16 rows=2257043 width=12) (actual time=2428.104..13922.146 rows=2247699 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47825.52..1150289.16 rows=2257043 width=12) (actual time=2018.497..10962.511 rows=2247699 loops=1)
Q14,1.0,->  Hash Join  (cost=101924.05..1164252.34 rows=775339 width=29) (actual time=2815.783..12504.430 rows=749793 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..16208.22 rows=775339 width=0) (actual time=452.962..452.962 rows=754107 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=16402.05..1061285.21 rows=775339 width=12) (actual time=708.004..7720.239 rows=749793 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446056.09 rows=14998393 width=8) (actual time=0.034..10933.444 rows=14854040 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..815051.95 rows=14998393 width=8) (actual time=1388.727..45626.082 rows=15354056 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=20) (actual time=0.027..6910.448 rows=15015000 loops=1)
Q12,1.0,->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.00..377647.94 rows=293090 width=15) (actual time=0.167..15943.837 rows=313475 loops=1)
Q12,1.0,->  Hash Join  (cost=594902.33..981709.33 rows=293090 width=27) (actual time=13966.789..30993.948 rows=313475 loops=1)
Q12,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=20) (actual time=13958.115..13958.115 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=8) (actual time=1.028..620.876 rows=320560 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=12) (actual time=1.701..2242.991 rows=320560 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.662..19.014 rows=4007 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.009..8.397 rows=4007 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.344..1.344 rows=4007 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=0.705..0.705 rows=4007 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.632..17.806 rows=4007 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=0.991..7.581 rows=4007 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817038.70 rows=59624177 width=20) (actual time=0.044..28908.909 rows=59569538 loops=1)
Q10,1.0,->  Sort  (cost=332143.43..333580.32 rows=574756 width=8) (actual time=2566.500..2759.458 rows=574383 loops=1)
Q10,1.0,->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.00..691549.51 rows=14955120 width=12) (actual time=0.144..23346.087 rows=14822650 loops=1)
Q10,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12341.55 rows=574756 width=0) (actual time=296.608..296.608 rows=579920 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=12485.24..277160.58 rows=574756 width=8) (actual time=465.493..2332.699 rows=574383 loops=1)
Q21,,->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.00..1.98 rows=1 width=4) (actual time=0.011..0.011 rows=0 loops=1462274)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..36.76 rows=1 width=16) (actual time=0.164..0.172 rows=0 loops=10281)
Q19,,->  BitmapOr  (cost=13470.24..13470.24 rows=10557 width=0) (actual time=286.219..286.219 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8687.63..8687.63 rows=1598 width=0) (actual time=151.037..151.037 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4488.59..4488.59 rows=795 width=0) (actual time=127.982..127.982 rows=0 loops=1)
