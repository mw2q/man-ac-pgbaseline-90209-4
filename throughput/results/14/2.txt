BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	s_acctbal,
	s_name,
	n_name,
	p_partkey,
	p_mfgr,
	s_address,
	s_phone,
	s_comment
from
	part,
	supplier,
	partsupp,
	nation,
	region
where
	p_partkey = ps_partkey
	and s_suppkey = ps_suppkey
	and p_size = 11
	and p_type like '%TIN'
	and s_nationkey = n_nationkey
	and n_regionkey = r_regionkey
	and r_name = 'EUROPE'
	and ps_supplycost = (
		select
			min(ps_supplycost)
		from
			partsupp,
			supplier,
			nation,
			region
		where
			p_partkey = ps_partkey
			and s_suppkey = ps_suppkey
			and s_nationkey = n_nationkey
			and n_regionkey = r_regionkey
			and r_name = 'EUROPE'
	)
order by
	s_acctbal desc,
	n_name,
	s_name,
	p_partkey
LIMIT 100;
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=816409.64..816409.64 rows=1 width=190) (actual time=14035.386..14035.427 rows=100 loops=1)
   Buffers: shared hit=1643442 read=234010 written=4197
   ->  Sort  (cost=816409.64..816409.64 rows=1 width=190) (actual time=14035.382..14035.408 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         Buffers: shared hit=1643442 read=234010 written=4197
         ->  Merge Join  (cost=395240.92..816409.63 rows=1 width=190) (actual time=10213.554..14025.795 rows=4714 loops=1)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1698
               Buffers: shared hit=1643434 read=234010 written=4197
               ->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=7835 width=30) (actual time=0.292..1946.332 rows=7961 loops=1)
                     Filter: (((p_type)::text ~~ '%TIN'::text) AND (p_size = 11))
                     Rows Removed by Filter: 1992039
                     Buffers: shared hit=3912 read=42829 written=3818
               ->  Sort  (cost=395240.86..399233.87 rows=1597205 width=168) (actual time=10212.864..10675.969 rows=1602629 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 474854kB
                     Buffers: shared hit=1482912 read=186514
                     ->  Nested Loop  (cost=1.56..230671.90 rows=1597205 width=168) (actual time=0.143..8376.337 rows=1602640 loops=1)
                           Buffers: shared hit=1482912 read=186514
                           ->  Nested Loop  (cost=1.56..5806.62 rows=20000 width=164) (actual time=0.096..198.474 rows=20033 loops=1)
                                 Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                                 Rows Removed by Join Filter: 79967
                                 Buffers: shared hit=2181
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.016..0.024 rows=1 loops=1)
                                       Filter: (r_name = 'EUROPE'::bpchar)
                                       Rows Removed by Filter: 4
                                       Buffers: shared hit=1
                                 ->  Hash Join  (cost=1.56..4555.56 rows=100000 width=168) (actual time=0.063..170.993 rows=100000 loops=1)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       Buffers: shared hit=2180
                                       ->  Seq Scan on supplier  (cost=0.00..3179.00 rows=100000 width=142) (actual time=0.008..53.746 rows=100000 loops=1)
                                             Buffers: shared hit=2179
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.022..0.022 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 2kB
                                             Buffers: shared hit=1
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.011 rows=25 loops=1)
                                                   Buffers: shared hit=1
                           ->  Index Scan using partsupp_ps_suppkey_idx on partsupp  (cost=0.00..10.44 rows=80 width=12) (actual time=0.029..0.376 rows=80 loops=20033)
                                 Index Cond: (ps_suppkey = public.supplier.s_suppkey)
                                 Buffers: shared hit=1480731 read=186514
               SubPlan 1
                 ->  Aggregate  (cost=49.85..49.86 rows=1 width=4) (actual time=0.095..0.095 rows=1 loops=6412)
                       Buffers: shared hit=156610 read=4667 written=379
                       ->  Nested Loop  (cost=0.00..49.84 rows=1 width=4) (actual time=0.062..0.091 rows=2 loops=6412)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             Rows Removed by Join Filter: 2
                             Buffers: shared hit=156610 read=4667 written=379
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=6412)
                                   Filter: (r_name = 'EUROPE'::bpchar)
                                   Rows Removed by Filter: 4
                                   Buffers: shared hit=6412
                             ->  Nested Loop  (cost=0.00..48.73 rows=4 width=8) (actual time=0.042..0.084 rows=4 loops=6412)
                                   Buffers: shared hit=150198 read=4667 written=379
                                   ->  Nested Loop  (cost=0.00..47.61 rows=4 width=8) (actual time=0.038..0.068 rows=4 loops=6412)
                                         Buffers: shared hit=98902 read=4667 written=379
                                         ->  Index Scan using pk_partsupp on partsupp  (cost=0.00..14.45 rows=4 width=8) (actual time=0.026..0.029 rows=4 loops=6412)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                               Buffers: shared hit=22107 read=4395 written=379
                                         ->  Index Scan using pk_supplier on supplier  (cost=0.00..8.28 rows=1 width=8) (actual time=0.008..0.008 rows=1 loops=25648)
                                               Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                                               Buffers: shared hit=76795 read=272
                                   ->  Index Scan using pk_nation on nation  (cost=0.00..0.27 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=25648)
                                         Index Cond: (n_nationkey = public.supplier.s_nationkey)
                                         Buffers: shared hit=51296
 Total runtime: 14058.230 ms
(67 rows)

COMMIT;
COMMIT
