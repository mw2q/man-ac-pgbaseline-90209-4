BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'MOZAMBIQUE' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'AFRICA'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'SMALL ANODIZED NICKEL'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=2164485.50..2164487.33 rows=729 width=38) (actual time=23850.771..23850.771 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=781830 read=226366 dirtied=3417 written=739
   ->  HashAggregate  (cost=2164438.08..2164450.84 rows=729 width=38) (actual time=23850.712..23850.713 rows=2 loops=1)
         Buffers: shared hit=781827 read=226366 dirtied=3417 written=739
         ->  Nested Loop  (cost=502335.38..2163953.54 rows=24227 width=38) (actual time=17685.327..23801.439 rows=24316 loops=1)
               Buffers: shared hit=781827 read=226366 dirtied=3417 written=739
               ->  Nested Loop  (cost=502335.38..2157044.00 rows=24227 width=16) (actual time=17685.264..23689.222 rows=24316 loops=1)
                     Buffers: shared hit=733195 read=226366 dirtied=3417 written=739
                     ->  Hash Join  (cost=502335.38..2149980.03 rows=24258 width=16) (actual time=17685.218..23431.411 rows=24316 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Buffers: shared hit=660114 read=226366 dirtied=3417 written=739
                           ->  Nested Loop  (cost=0.00..1645397.89 rows=400837 width=16) (actual time=0.347..4716.671 rows=399364 loops=1)
                                 Buffers: shared hit=260223 read=210354 dirtied=3417 written=739
                                 ->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..45923.20 rows=13193 width=4) (actual time=0.241..186.328 rows=13289 loops=1)
                                       Index Cond: (p_type = 'SMALL ANODIZED NICKEL'::text)
                                       Heap Fetches: 13289
                                       Buffers: shared hit=1 read=11480 written=48
                                 ->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..120.93 rows=31 width=20) (actual time=0.031..0.329 rows=30 loops=13289)
                                       Index Cond: (l_partkey = part.p_partkey)
                                       Buffers: shared hit=260222 read=198874 dirtied=3417 written=691
                           ->  Hash  (cost=490840.54..490840.54 rows=919587 width=8) (actual time=17684.158..17684.158 rows=912000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 35625kB
                                 Buffers: shared hit=399888 read=16012
                                 ->  Hash Join  (cost=138873.43..490840.54 rows=919587 width=8) (actual time=2946.718..17224.040 rows=912000 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       Buffers: shared hit=399888 read=16012
                                       ->  Bitmap Heap Scan on orders  (cost=99842.81..425371.80 rows=4597933 width=12) (actual time=1996.876..5721.462 rows=4561702 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Buffers: shared hit=255621 read=14130
                                             ->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..98693.32 rows=4597933 width=0) (actual time=1894.968..1894.968 rows=4616605 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Buffers: shared read=13191
                                       ->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=949.254..949.254 rows=299493 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 10530kB
                                             Buffers: shared hit=144267 read=1882
                                             ->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=21.013..821.502 rows=299493 loops=1)
                                                   Buffers: shared hit=144267 read=1882
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.022..0.077 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         Buffers: shared hit=2
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.004..0.013 rows=25 loops=1)
                                                               Buffers: shared hit=1
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               Buffers: shared hit=1
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                                                     Filter: (r_name = 'AFRICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                                                                     Buffers: shared hit=1
                                                   ->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=23.601..151.279 rows=59899 loops=5)
                                                         Recheck Cond: (c_nationkey = n1.n_nationkey)
                                                         Buffers: shared hit=144265 read=1882
                                                         ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=16.028..16.028 rows=59899 loops=5)
                                                               Index Cond: (c_nationkey = n1.n_nationkey)
                                                               Buffers: shared hit=7 read=826
                     ->  Index Scan using pk_supplier on supplier  (cost=0.00..0.28 rows=1 width=8) (actual time=0.009..0.009 rows=1 loops=24316)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=73081
               ->  Index Scan using pk_nation on nation n2  (cost=0.00..0.27 rows=1 width=30) (actual time=0.002..0.003 rows=1 loops=24316)
                     Index Cond: (n_nationkey = supplier.s_nationkey)
                     Buffers: shared hit=48632
 Total runtime: 23860.897 ms
(64 rows)

COMMIT;
COMMIT
