Q21,1443006.0,->  Hash Semi Join  (cost=2680954.36..4851944.40 rows=1 width=38) (actual time=44226.722..103578.461 rows=1443006 loops=1)
Q21,697457.0,->  Nested Loop  (cost=2680954.36..4851946.39 rows=1 width=34) (actual time=44227.661..118093.076 rows=697457 loops=1)
Q18,359195.2,->  GroupAggregate  (cost=10374500.96..11204241.88 rows=30172397 width=39) (actual time=120971.147..120971.414 rows=84 loops=1)
Q3,321790.6,->  Sort  (cost=2819234.06..2827278.83 rows=3217906 width=20) (actual time=77538.251..77538.254 rows=10 loops=1)
Q18,89820.8,->  Hash Join  (cost=2189302.72..2975455.83 rows=7544952 width=39) (actual time=79329.362..89044.532 rows=84 loops=1)
Q18,89820.8,->  Hash Join  (cost=2120274.72..2755528.79 rows=7544952 width=20) (actual time=77577.064..87290.259 rows=84 loops=1)
Q18,89820.8,->  Hash  (cost=2975455.83..2975455.83 rows=7544952 width=39) (actual time=89044.962..89044.962 rows=84 loops=1)
Q18,51313.6,->  Sort  (cost=10374500.96..10449931.95 rows=30172397 width=39) (actual time=120971.126..120971.166 rows=588 loops=1)
Q18,51313.6,->  Hash Join  (cost=3069767.73..5801047.56 rows=30172397 width=39) (actual time=89156.972..120968.144 rows=588 loops=1)
Q18,48743.1,->  Hash  (cost=2069094.43..2069094.43 rows=4094423 width=4) (actual time=77400.233..77400.233 rows=84 loops=1)
Q18,48743.1,->  HashAggregate  (cost=1976969.91..2028150.20 rows=4094423 width=8) (actual time=68100.521..77399.634 rows=84 loops=1)
Q21,38988.0,->  Nested Loop Anti Join  (cost=2680954.36..4851961.53 rows=1 width=26) (actual time=44239.177..133731.594 rows=38988 loops=1)
Q9,29141.3,->  Sort  (cost=3331370.39..3331370.67 rows=112 width=46) (actual time=236200.999..237173.405 rows=3263828 loops=1)
Q9,29141.3,->  Nested Loop  (cost=2666792.43..3331366.57 rows=112 width=46) (actual time=103137.116..215350.421 rows=3263828 loops=1)
Q9,29141.3,->  Nested Loop  (cost=2666792.43..3331334.63 rows=112 width=24) (actual time=103137.033..199192.246 rows=3263828 loops=1)
Q9,29141.3,->  Nested Loop  (cost=2666792.43..3331116.44 rows=112 width=24) (actual time=103136.936..135044.126 rows=3263828 loops=1)
Q9,29141.3,->  Merge Join  (cost=2666792.43..3331083.83 rows=112 width=28) (actual time=103136.871..116248.826 rows=3263828 loops=1)
Q10,28570.0,->  Sort  (cost=1196779.13..1198207.63 rows=571400 width=175) (actual time=34679.623..34679.628 rows=20 loops=1)
Q7,14709.0,GroupAggregate  (cost=2371874.85..2373787.02 rows=58836 width=64) (actual time=85823.065..85847.695 rows=4 loops=1)
Q2,4714.0,->  Merge Join  (cost=395240.92..816409.63 rows=1 width=190) (actual time=10213.554..14025.795 rows=4714 loops=1)
Q21,3945.0,->  HashAggregate  (cost=4851961.54..4851961.55 rows=1 width=26) (actual time=133867.717..133870.144 rows=3945 loops=1)
Q15,3762.0,->  Subquery Scan on revenue14  (cost=1196891.04..1196975.68 rows=3762 width=12) (actual time=31003.146..31009.059 rows=1 loops=1)
Q15,3762.0,->  Sort  (cost=1197199.10..1197208.50 rows=3762 width=12) (actual time=31009.092..31009.093 rows=1 loops=1)
Q15,3762.0,Merge Join  (cost=2377123.53..2382221.42 rows=3762 width=79) (actual time=31030.734..31030.739 rows=1 loops=1)
Q15,3762.0,->  HashAggregate  (cost=1196891.04..1196938.06 rows=3762 width=12) (actual time=31003.143..31009.054 rows=1 loops=1)
Q8,364.5,Sort  (cost=2164485.50..2164487.33 rows=729 width=38) (actual time=23850.771..23850.771 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=2164438.08..2164450.84 rows=729 width=38) (actual time=23850.712..23850.713 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=4851961.56..4851961.56 rows=1 width=26) (actual time=133874.863..133874.872 rows=100 loops=1)
Q21,100.0,Limit  (cost=4851961.56..4851961.56 rows=1 width=26) (actual time=133874.868..133874.896 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=816409.64..816409.64 rows=1 width=190) (actual time=14035.382..14035.408 rows=100 loops=1)
Q2,100.0,Limit  (cost=816409.64..816409.64 rows=1 width=190) (actual time=14035.386..14035.427 rows=100 loops=1)
Q11,33.3,Sort  (cost=135913.51..136712.11 rows=319441 width=12) (actual time=3414.346..3415.939 rows=9574 loops=1)
Q11,33.3,->  HashAggregate  (cost=52954.85..56947.86 rows=319441 width=12) (actual time=3265.354..3405.659 rows=9574 loops=1)
Q3,28.4,->  HashAggregate  (cost=2717517.21..2749696.27 rows=3217906 width=20) (actual time=77435.707..77517.596 rows=113297 loops=1)
Q15,26.5,->  HashAggregate  (cost=1179839.77..1179877.39 rows=3762 width=12) (actual time=15970.089..16030.985 rows=100000 loops=1)
Q3,10.7,->  Hash Join  (cost=633468.57..2669248.62 rows=3217906 width=20) (actual time=25371.146..76893.203 rows=299140 loops=1)
Q4,10.0,->  Hash  (cost=993263.03..993263.03 rows=1364808 width=4) (actual time=69321.675..69321.675 rows=13767198 loops=1)
Q4,10.0,->  HashAggregate  (cost=979614.95..993263.03 rows=1364808 width=4) (actual time=53592.918..63238.718 rows=13767198 loops=1)
Q16,5.6,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.00..8.45 rows=10 width=4) (actual time=0.058..0.869 rows=56 loops=1)
Q5,5.0,Sort  (cost=2428216.17..2428216.23 rows=25 width=34) (actual time=79260.592..79260.593 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2428215.34..2428215.59 rows=25 width=34) (actual time=79260.454..79260.458 rows=5 loops=1)
Q4,5.0,Sort  (cost=1291964.43..1291964.44 rows=1 width=16) (actual time=81727.095..81727.096 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1291964.41..1291964.42 rows=1 width=16) (actual time=81726.956..81726.956 rows=5 loops=1)
Q21,5.0,->  Index Scan using lineitem_l_orderkey_idx on lineitem l3  (cost=0.00..7.55 rows=5 width=8) (actual time=0.022..0.022 rows=1 loops=697457)
Q13,4.4,Sort  (cost=927553.56..927554.06 rows=200 width=8) (actual time=63365.771..63365.774 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=927543.91..927545.91 rows=200 width=8) (actual time=63365.645..63365.656 rows=45 loops=1)
Q17,3.6,->  Nested Loop  (cost=140.78..396027.58 rows=19912 width=4) (actual time=1.000..942.015 rows=5524 loops=1)
Q4,3.3,->  Hash Join  (cost=1022494.28..1291184.67 rows=155948 width=16) (actual time=69751.079..81418.001 rows=519519 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=140.78..196.78 rows=10 width=12) (actual time=0.009..0.011 rows=3 loops=2021)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..575.31 rows=1 width=8) (actual time=0.477..0.594 rows=3 loops=22049)
Q15,2.4,->  Index Scan using pk_supplier on supplier  (cost=0.00..4791.46 rows=100000 width=71) (actual time=0.099..17.220 rows=40959 loops=1)
Q22,2.3,Sort  (cost=698304.22..698304.22 rows=3 width=20) (actual time=15585.187..15585.188 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=645385.27..645385.31 rows=3 width=20) (actual time=15585.114..15585.118 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.00..49.84 rows=1 width=4) (actual time=0.062..0.091 rows=2 loops=6412)
Q20,2.0,->  Nested Loop  (cost=0.00..12734689.26 rows=29235 width=4) (actual time=0.702..14380.218 rows=59726 loops=1)
Q12,2.0,Sort  (cost=994677.44..994677.44 rows=1 width=27) (actual time=34327.711..34327.711 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=994677.42..994677.43 rows=1 width=27) (actual time=34327.581..34327.582 rows=2 loops=1)
Q16,1.9,->  Sort  (cost=446857.20..448341.04 rows=593537 width=40) (actual time=41726.037..42033.280 rows=1186196 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.48..270966.48 rows=4000000 width=8) (actual time=0.936..3782.261 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=58046.66..389940.03 rows=593537 width=40) (actual time=1046.990..10941.450 rows=1186196 loops=1)
Q10,1.9,->  Merge Join  (cost=333558.94..1073261.07 rows=571400 width=12) (actual time=4703.655..25663.827 rows=1138040 loops=1)
Q10,1.9,->  Hash Join  (cost=402588.50..1161575.38 rows=571400 width=175) (actual time=7185.039..30961.034 rows=1138040 loops=1)
Q10,1.9,->  Hash Join  (cost=402586.94..1153717.07 rows=571400 width=153) (actual time=7184.981..30311.213 rows=1138040 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.00..929377.26 rows=20095075 width=4) (actual time=0.160..23537.590 rows=37966982 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1835175.44 rows=20214812 width=8) (actual time=0.070..31509.112 rows=37965800 loops=1)
Q21,1.8,->  Hash Join  (cost=2441.58..1921497.99 rows=807543 width=34) (actual time=39.860..46742.159 rows=1496407 loops=1)
Q9,1.5,GroupAggregate  (cost=3331370.39..3331374.31 rows=112 width=46) (actual time=236215.322..239522.336 rows=175 loops=1)
Q20,1.5,Sort  (cost=12740177.87..12740180.80 rows=1169 width=51) (actual time=14656.661..14656.784 rows=1846 loops=1)
Q20,1.5,->  Nested Loop  (cost=12735712.48..12740118.31 rows=1169 width=51) (actual time=14527.635..14642.008 rows=1846 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=12735712.48..12739751.56 rows=29235 width=55) (actual time=14527.614..14637.038 rows=45120 loops=1)
Q20,1.5,->  Hash  (cost=12735347.04..12735347.04 rows=29235 width=4) (actual time=14527.551..14527.551 rows=45120 loops=1)
Q20,1.5,->  HashAggregate  (cost=12734762.34..12735054.69 rows=29235 width=4) (actual time=14494.593..14517.460 rows=45120 loops=1)
Q1,1.5,Sort  (cost=4192331.79..4192331.80 rows=6 width=20) (actual time=108237.032..108237.032 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4192331.61..4192331.71 rows=6 width=20) (actual time=108236.941..108236.945 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=1175860.38..1181574.38 rows=571400 width=175) (actual time=34160.970..34523.529 rows=378972 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2875.05 rows=140112 width=0) (actual time=815.302..815.302 rows=190505 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2910.07..41866.01 rows=140112 width=24) (actual time=827.438..1626.601 rows=190505 loops=1)
Q9,1.1,->  Sort  (cost=2666792.43..2673860.23 rows=2827120 width=28) (actual time=103136.774..106093.552 rows=3263828 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=94104 width=4) (actual time=0.020..1100.300 rows=108789 loops=1)
Q9,1.1,->  Hash Join  (cost=66698.30..2363853.78 rows=2827120 width=28) (actual time=1156.458..96952.907 rows=3263828 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=94104 width=4) (actual time=1156.231..1156.231 rows=108789 loops=1)
Q19,1.1,->  Nested Loop  (cost=13467.98..419007.24 rows=1017 width=8) (actual time=204.736..1371.516 rows=1159 loops=1)
Q18,1.1,Limit  (cost=10374500.96..10374503.71 rows=100 width=39) (actual time=120971.150..120971.425 rows=84 loops=1)
Q9,1.0,->  Seq Scan on lineitem  (cost=0.00..1668034.14 rows=60085014 width=24) (actual time=0.039..18090.071 rows=59985329 loops=1)
Q9,1.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..603091.29 rows=8000000 width=12) (actual time=0.007..6029.790 rows=7999993 loops=1)
Q8,1.0,->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=21.013..821.502 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=502335.38..2163953.54 rows=24227 width=38) (actual time=17685.327..23801.439 rows=24316 loops=1)
Q8,1.0,->  Nested Loop  (cost=502335.38..2157044.00 rows=24227 width=16) (actual time=17685.264..23689.222 rows=24316 loops=1)
Q8,1.0,->  Nested Loop  (cost=0.00..1645397.89 rows=400837 width=16) (actual time=0.347..4716.671 rows=399364 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..120.93 rows=31 width=20) (actual time=0.031..0.329 rows=30 loops=13289)
Q8,1.0,->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..45923.20 rows=13193 width=4) (actual time=0.241..186.328 rows=13289 loops=1)
Q8,1.0,->  Hash Join  (cost=502335.38..2149980.03 rows=24258 width=16) (actual time=17685.218..23431.411 rows=24316 loops=1)
Q8,1.0,->  Hash Join  (cost=138873.43..490840.54 rows=919587 width=8) (actual time=2946.718..17224.040 rows=912000 loops=1)
Q8,1.0,->  Hash  (cost=490840.54..490840.54 rows=919587 width=8) (actual time=17684.158..17684.158 rows=912000 loops=1)
Q8,1.0,->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=949.254..949.254 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..98693.32 rows=4597933 width=0) (actual time=1894.968..1894.968 rows=4616605 loops=1)
Q8,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=16.028..16.028 rows=59899 loops=5)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=99842.81..425371.80 rows=4597933 width=12) (actual time=1996.876..5721.462 rows=4561702 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=23.601..151.279 rows=59899 loops=5)
Q7,1.0,->  Sort  (cost=2371874.85..2372021.94 rows=58836 width=64) (actual time=85814.347..85818.658 rows=57648 loops=1)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=8) (actual time=0.013..5006.256 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=905.09..14139.26 rows=119904 width=60) (actual time=19.473..468.508 rows=119765 loops=1)
Q7,1.0,->  Hash Join  (cost=900632.74..2367213.74 rows=58836 width=64) (actual time=43596.188..85459.955 rows=57648 loops=1)
Q7,1.0,->  Hash Join  (cost=895953.74..2332195.86 rows=1472817 width=72) (actual time=43517.323..82050.351 rows=1459650 loops=1)
Q7,1.0,->  Hash Join  (cost=15638.06..491861.27 rows=1211027 width=60) (actual time=548.086..28440.556 rows=1198756 loops=1)
Q7,1.0,->  Hash  (cost=491861.27..491861.27 rows=1211027 width=60) (actual time=29374.958..29374.958 rows=1198756 loops=1)
Q7,1.0,->  Hash  (cost=14139.26..14139.26 rows=119904 width=60) (actual time=547.919..547.919 rows=119765 loops=1)
Q7,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..384348.40 rows=18424957 width=0) (actual time=13450.224..13450.224 rows=18410988 loops=1)
Q7,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=16.098..16.098 rows=59882 loops=2)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=388954.64..1741374.99 rows=18424957 width=20) (actual time=14141.416..30420.573 rows=18246199 loops=1)
Q7,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=24.073..215.253 rows=59882 loops=2)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..192661.47 rows=9259464 width=0) (actual time=7173.994..7173.994 rows=9239692 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=192864.02..1482583.96 rows=810196 width=8) (actual time=7684.431..19557.500 rows=795103 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1671913.57 rows=60224757 width=16) (actual time=0.020..19284.798 rows=60045303 loops=1)
Q5,1.0,->  Nested Loop  (cost=905.09..35292.22 rows=300000 width=38) (actual time=23.104..1244.287 rows=299838 loops=1)
Q5,1.0,->  Hash Join  (cost=87240.25..388746.51 rows=455183 width=38) (actual time=3272.465..13754.587 rows=455272 loops=1)
Q5,1.0,->  Hash Join  (cost=399115.29..2427488.19 rows=72715 width=34) (actual time=14202.797..79082.954 rows=72990 loops=1)
Q5,1.0,->  Hash Join  (cost=394436.29..2385676.44 rows=1820280 width=46) (actual time=14116.714..74867.361 rows=1820773 loops=1)
Q5,1.0,->  Hash  (cost=388746.51..388746.51 rows=455183 width=38) (actual time=14116.079..14116.079 rows=455272 loops=1)
Q5,1.0,->  Hash  (cost=35292.22..35292.22 rows=300000 width=38) (actual time=1442.688..1442.688 rows=299838 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..47629.06 rows=2275916 width=0) (actual time=1723.322..1723.322 rows=2284771 loops=1)
Q5,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=23.409..23.409 rows=59968 loops=5)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=48198.03..336617.77 rows=2275916 width=8) (actual time=1829.507..5700.328 rows=2277945 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=32.572..225.975 rows=59968 loops=5)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12027.61 rows=574171 width=0) (actual time=341.497..341.497 rows=568991 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=12171.15..275317.72 rows=574171 width=20) (actual time=426.908..2393.473 rows=566653 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..446936.69 rows=7489670 width=16) (actual time=0.016..5999.406 rows=7353305 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1840625.83 rows=32595034 width=12) (actual time=0.057..28852.851 rows=32140013 loops=1)
Q3,1.0,->  Hash Join  (cost=49763.39..614698.83 rows=1501579 width=12) (actual time=695.755..24182.719 rows=1471061 loops=1)
Q3,1.0,->  Hash  (cost=614698.83..614698.83 rows=1501579 width=12) (actual time=25369.144..25369.144 rows=1471061 loops=1)
Q3,1.0,->  Hash  (cost=46004.26..46004.26 rows=300730 width=4) (actual time=695.525..695.525 rows=299496 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6891.96 rows=300730 width=0) (actual time=80.815..80.815 rows=299496 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6967.14..46004.26 rows=300730 width=4) (actual time=93.462..574.870 rows=299496 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..408509.11 rows=15194911 width=4) (actual time=0.030..5590.439 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=408509.11..408509.11 rows=15194911 width=4) (actual time=13435.208..13435.208 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=601355.57..644942.13 rows=59085 width=20) (actual time=14278.373..15540.952 rows=63314 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6553.36 rows=382328 width=0) (actual time=129.417..129.417 rows=381136 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer  (cost=6648.94..51963.05 rows=382328 width=4) (actual time=141.230..628.499 rows=381136 loops=1)
Q21,1.0,->  Seq Scan on lineitem l2  (cost=0.00..1683564.35 rows=60644435 width=8) (actual time=0.059..23977.214 rows=60044872 loops=1)
Q21,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=30) (actual time=1.907..37.214 rows=3945 loops=1)
Q21,1.0,->  Hash  (cost=2391.58..2391.58 rows=4000 width=30) (actual time=39.669..39.669 rows=3945 loops=1)
Q21,1.0,->  Hash  (cost=1683564.35..1683564.35 rows=60644435 width=8) (actual time=44155.601..44155.601 rows=60044872 loops=1)
Q21,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.500..1.500 rows=3945 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=34) (actual time=1.892..35.777 rows=3945 loops=1)
Q2,1.0,->  Sort  (cost=395240.86..399233.87 rows=1597205 width=168) (actual time=10212.864..10675.969 rows=1602629 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..5806.62 rows=20000 width=164) (actual time=0.096..198.474 rows=20033 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..230671.90 rows=1597205 width=168) (actual time=0.143..8376.337 rows=1602640 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=7835 width=30) (actual time=0.292..1946.332 rows=7961 loops=1)
Q20,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=22021 width=4) (actual time=0.004..1231.223 rows=22049 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8392.74 rows=400027 width=0) (actual time=112.786..112.786 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4193.94 rows=199747 width=0) (actual time=68.335..68.335 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.45 rows=7995 width=0) (actual time=5.108..5.108 rows=7962 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.37 rows=7988 width=0) (actual time=4.925..4.925 rows=8083 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.77 rows=7928 width=0) (actual time=4.586..4.586 rows=8004 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=13467.98..37585.92 rows=10369 width=30) (actual time=204.424..288.867 rows=10566 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=16) (actual time=0.016..4579.701 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1675245.94 rows=60344794 width=8) (actual time=0.031..18442.538 rows=60045826 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1675245.94 rows=60344794 width=8) (actual time=0.017..19625.177 rows=60045826 loops=1)
Q17,1.0,->  Index Only Scan using part_p_container_p_brand_p_partkey_idx on part  (cost=0.00..7789.32 rows=1972 width=4) (actual time=0.217..37.569 rows=2021 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.042..0.421 rows=30 loops=2021)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.042..0.421 rows=30 loops=2021)
Q16,1.0,Sort  (cost=456619.46..456689.31 rows=27943 width=40) (actual time=43044.491..43047.629 rows=27837 loops=1)
Q16,1.0,->  Hash  (cost=54312.51..54312.51 rows=298054 width=40) (actual time=1045.768..1045.768 rows=296708 loops=1)
Q16,1.0,->  GroupAggregate  (cost=446857.20..454555.84 rows=27943 width=40) (actual time=41726.135..42663.754 rows=27837 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5696.17 rows=320793 width=0) (actual time=129.426..129.426 rows=319849 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5770.68..54312.51 rows=298054 width=40) (actual time=149.448..836.320 rows=296708 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47457.85 rows=2273502 width=0) (actual time=1424.127..1424.127 rows=2265848 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47457.85 rows=2273502 width=0) (actual time=1378.359..1378.359 rows=2265848 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=48026.22..1157104.75 rows=2273502 width=12) (actual time=1795.890..12044.838 rows=2247668 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=48026.22..1157104.75 rows=2273502 width=12) (actual time=1751.380..11086.266 rows=2247668 loops=1)
Q14,1.0,->  Hash Join  (cost=100493.73..1136451.65 rows=709942 width=29) (actual time=2851.970..10920.295 rows=700490 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..14794.25 rows=709942 width=0) (actual time=517.959..517.959 rows=708791 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=14971.73..1034955.95 rows=709942 width=12) (actual time=744.328..6379.027 rows=700490 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446056.09 rows=14998393 width=8) (actual time=0.042..10205.246 rows=14853545 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..815051.95 rows=14998393 width=8) (actual time=1682.445..44823.065 rows=15353563 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=20) (actual time=0.017..7473.585 rows=15015000 loops=1)
Q12,1.0,->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.00..380649.72 rows=295424 width=15) (actual time=0.381..17162.525 rows=312829 loops=1)
Q12,1.0,->  Hash Join  (cost=599625.78..989507.50 rows=295424 width=27) (actual time=15411.619..33770.019 rows=312829 loops=1)
Q12,1.0,->  Hash  (cost=409314.79..409314.79 rows=15224879 width=20) (actual time=15395.749..15395.749 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=8) (actual time=1.356..1017.226 rows=318480 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=12) (actual time=2.309..1741.961 rows=318480 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=2.220..23.855 rows=3981 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.333..13.711 rows=3981 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.778..1.778 rows=3981 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=0.940..0.940 rows=3981 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=2.191..22.149 rows=3981 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.319..12.243 rows=3981 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1827910.52 rows=59110527 width=20) (actual time=0.030..27829.753 rows=58763311 loops=1)
Q10,1.0,->  Sort  (cost=333551.39..334999.92 rows=579414 width=8) (actual time=4703.453..4878.465 rows=568587 loops=1)
Q10,1.0,->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.00..693599.80 rows=14999536 width=12) (actual time=0.145..17804.822 rows=14822420 loops=1)
Q10,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12440.13 rows=579414 width=0) (actual time=274.981..274.981 rows=576045 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=12584.99..278089.20 rows=579414 width=8) (actual time=354.698..4374.617 rows=568587 loops=1)
Q21,,->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.00..1.97 rows=1 width=4) (actual time=0.009..0.009 rows=0 loops=1443006)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..36.77 rows=1 width=16) (actual time=0.093..0.098 rows=0 loops=10566)
Q19,,->  BitmapOr  (cost=13467.98..13467.98 rows=10379 width=0) (actual time=202.157..202.157 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8687.62..8687.62 rows=1599 width=0) (actual time=120.786..120.786 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4488.14..4488.14 rows=792 width=0) (actual time=75.949..75.949 rows=0 loops=1)
