Q21,1436691.0,->  Hash Semi Join  (cost=2654483.24..4804018.61 rows=1 width=38) (actual time=47571.169..101681.831 rows=1436691 loops=1)
Q21,694229.0,->  Nested Loop  (cost=2654483.24..4804020.57 rows=1 width=34) (actual time=47571.243..117168.726 rows=694229 loops=1)
Q3,318378.5,->  Sort  (cost=2761229.88..2769189.34 rows=3183785 width=20) (actual time=75410.419..75410.421 rows=10 loops=1)
Q18,301723.9,->  GroupAggregate  (cost=10374500.96..11204241.88 rows=30172397 width=39) (actual time=118279.401..118279.738 rows=100 loops=1)
Q18,67972.5,->  Hash Join  (cost=2189302.72..2975455.83 rows=7544952 width=39) (actual time=78797.519..87862.596 rows=111 loops=1)
Q18,67972.5,->  Hash Join  (cost=2120274.72..2755528.79 rows=7544952 width=20) (actual time=77212.491..86274.915 rows=111 loops=1)
Q18,67972.5,->  Hash  (cost=2975455.83..2975455.83 rows=7544952 width=39) (actual time=87863.170..87863.170 rows=111 loops=1)
Q18,43041.9,->  Sort  (cost=10374500.96..10449931.95 rows=30172397 width=39) (actual time=118279.377..118279.442 rows=701 loops=1)
Q21,39113.0,->  Nested Loop Anti Join  (cost=2654483.24..4804035.46 rows=1 width=26) (actual time=47576.845..131715.387 rows=39113 loops=1)
Q18,38831.9,->  Hash Join  (cost=3069767.73..5801047.56 rows=30172397 width=39) (actual time=87887.535..118275.537 rows=777 loops=1)
Q18,36886.6,->  Hash  (cost=2069094.43..2069094.43 rows=4094423 width=4) (actual time=77091.554..77091.554 rows=111 loops=1)
Q18,36886.6,->  HashAggregate  (cost=1976969.91..2028150.20 rows=4094423 width=8) (actual time=67569.908..77090.752 rows=111 loops=1)
Q10,29152.0,->  Sort  (cost=1198237.78..1199695.38 rows=583041 width=175) (actual time=37200.979..37200.983 rows=20 loops=1)
Q9,26915.8,->  Sort  (cost=3385438.90..3385439.21 rows=121 width=46) (actual time=238230.004..239125.981 rows=3256821 loops=1)
Q9,26915.8,->  Nested Loop  (cost=2719227.39..3385434.72 rows=121 width=46) (actual time=109261.714..218314.654 rows=3256821 loops=1)
Q9,26915.8,->  Nested Loop  (cost=2719227.39..3385400.21 rows=121 width=24) (actual time=109261.633..202406.047 rows=3256821 loops=1)
Q9,26915.8,->  Nested Loop  (cost=2719227.39..3385159.70 rows=121 width=24) (actual time=109261.510..140120.710 rows=3256821 loops=1)
Q9,26915.8,->  Merge Join  (cost=2719227.39..3385124.46 rows=121 width=28) (actual time=109261.458..121558.983 rows=3256821 loops=1)
Q7,14621.7,GroupAggregate  (cost=2359109.69..2361010.52 rows=58487 width=64) (actual time=84133.334..84166.558 rows=4 loops=1)
Q2,4838.0,->  Merge Join  (cost=395240.92..819052.90 rows=1 width=190) (actual time=9553.890..13521.212 rows=4838 loops=1)
Q21,3934.0,->  HashAggregate  (cost=4804035.47..4804035.48 rows=1 width=26) (actual time=131853.108..131855.422 rows=3934 loops=1)
Q15,3714.0,->  Subquery Scan on revenue5  (cost=1188408.19..1188491.75 rows=3714 width=12) (actual time=29934.319..29978.751 rows=1 loops=1)
Q15,3714.0,->  Sort  (cost=1188711.97..1188721.25 rows=3714 width=12) (actual time=29978.788..29978.790 rows=1 loops=1)
Q15,3714.0,Merge Join  (cost=2360468.76..2365565.93 rows=3714 width=79) (actual time=30013.134..30013.140 rows=1 loops=1)
Q15,3714.0,->  HashAggregate  (cost=1188408.19..1188454.61 rows=3714 width=12) (actual time=29934.317..29978.746 rows=1 loops=1)
Q8,364.5,Sort  (cost=2166723.68..2166725.50 rows=729 width=38) (actual time=26620.451..26620.451 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=2166676.26..2166689.02 rows=729 width=38) (actual time=26620.375..26620.376 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=4804035.49..4804035.49 rows=1 width=26) (actual time=131860.375..131860.383 rows=100 loops=1)
Q21,100.0,Limit  (cost=4804035.49..4804035.49 rows=1 width=26) (actual time=131860.377..131860.396 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=819052.91..819052.92 rows=1 width=190) (actual time=13532.137..13532.154 rows=100 loops=1)
Q2,100.0,Limit  (cost=819052.91..819052.92 rows=1 width=190) (actual time=13532.140..13532.174 rows=100 loops=1)
Q11,34.6,Sort  (cost=135913.51..136712.11 rows=319441 width=12) (actual time=5459.825..5461.266 rows=9218 loops=1)
Q11,34.6,->  HashAggregate  (cost=52954.85..56947.86 rows=319441 width=12) (actual time=5298.010..5453.295 rows=9218 loops=1)
Q3,28.0,->  HashAggregate  (cost=2660591.58..2692429.43 rows=3183785 width=20) (actual time=75312.631..75389.604 rows=113701 loops=1)
Q15,26.9,->  HashAggregate  (cost=1171673.21..1171710.35 rows=3714 width=12) (actual time=15139.425..15217.769 rows=100000 loops=1)
Q3,10.5,->  Hash Join  (cost=630494.86..2612834.80 rows=3183785 width=20) (actual time=26094.415..74858.801 rows=301130 loops=1)
Q4,10.0,->  Hash  (cost=991311.77..991311.77 rows=1364808 width=4) (actual time=76595.154..76595.154 rows=13767168 loops=1)
Q4,10.0,->  HashAggregate  (cost=977663.69..991311.77 rows=1364808 width=4) (actual time=62202.034..71626.718 rows=13767168 loops=1)
Q16,5.6,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.00..8.45 rows=10 width=4) (actual time=0.091..1.626 rows=56 loops=1)
Q5,5.0,Sort  (cost=2445867.39..2445867.45 rows=25 width=34) (actual time=78250.681..78250.682 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2445866.56..2445866.81 rows=25 width=34) (actual time=78250.538..78250.542 rows=5 loops=1)
Q4,5.0,Sort  (cost=1289674.14..1289674.15 rows=1 width=16) (actual time=87463.787..87463.788 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1289674.12..1289674.13 rows=1 width=16) (actual time=87463.636..87463.637 rows=5 loops=1)
Q21,5.0,->  Index Scan using lineitem_l_orderkey_idx on lineitem l3  (cost=0.00..7.42 rows=5 width=8) (actual time=0.020..0.020 rows=1 loops=694229)
Q13,4.3,Sort  (cost=924311.86..924312.36 rows=200 width=8) (actual time=64009.650..64009.654 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=924302.21..924304.21 rows=200 width=8) (actual time=64009.517..64009.527 rows=46 loops=1)
Q17,3.9,->  Nested Loop  (cost=140.78..404851.42 rows=20408 width=4) (actual time=3.740..1330.178 rows=5170 loops=1)
Q4,3.3,->  Hash Join  (cost=1020615.31..1288888.01 rows=157222 width=16) (actual time=77179.461..87163.847 rows=526367 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=140.78..196.77 rows=10 width=12) (actual time=0.011..0.016 rows=3 loops=1979)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..575.31 rows=1 width=8) (actual time=0.451..0.566 rows=3 loops=21700)
Q22,2.3,Sort  (cost=694790.93..694790.94 rows=3 width=20) (actual time=17671.502..17671.503 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641854.70..641854.74 rows=3 width=20) (actual time=17671.422..17671.425 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.00..49.84 rows=1 width=4) (actual time=0.062..0.094 rows=2 loops=6520)
Q20,2.0,->  Nested Loop  (cost=0.00..12742715.21 rows=29253 width=4) (actual time=0.915..13461.565 rows=58811 loops=1)
Q16,2.0,->  Sort  (cost=446243.31..447716.21 rows=589159 width=40) (actual time=43336.104..43628.328 rows=1186476 loops=1)
Q16,2.0,->  Hash Join  (cost=57927.85..389777.44 rows=589159 width=40) (actual time=1299.713..12064.571 rows=1186476 loops=1)
Q12,2.0,Sort  (cost=991625.95..991625.95 rows=1 width=27) (actual time=33690.836..33690.837 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=991625.93..991625.94 rows=1 width=27) (actual time=33690.720..33690.721 rows=2 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.48..270966.48 rows=4000000 width=8) (actual time=1.721..4524.460 rows=7995520 loops=1)
Q10,1.9,->  Merge Join  (cost=334643.71..1073609.64 rows=583041 width=12) (actual time=3010.094..27273.100 rows=1147706 loops=1)
Q10,1.9,->  Hash Join  (cost=403673.27..1162316.83 rows=583041 width=175) (actual time=5211.400..32504.614 rows=1147706 loops=1)
Q10,1.9,->  Hash Join  (cost=403671.71..1154298.46 rows=583041 width=153) (actual time=5211.346..31773.265 rows=1147706 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.00..927526.04 rows=20055063 width=4) (actual time=0.248..28137.519 rows=37966418 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817038.70 rows=20015032 width=8) (actual time=0.027..25187.644 rows=37928797 loops=1)
Q21,1.8,->  Hash Join  (cost=2441.58..1902532.27 rows=799562 width=34) (actual time=19.360..36341.032 rows=1490036 loops=1)
Q15,1.6,->  Index Scan using pk_supplier on supplier  (cost=0.00..4791.46 rows=100000 width=71) (actual time=0.088..27.498 rows=61965 loops=1)
Q20,1.5,Sort  (cost=12748205.06..12748207.99 rows=1170 width=51) (actual time=13783.525..13783.626 rows=1810 loops=1)
Q20,1.5,->  Nested Loop  (cost=12743739.06..12748145.44 rows=1170 width=51) (actual time=13614.849..13774.737 rows=1810 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=12743739.06..12747778.46 rows=29253 width=55) (actual time=13614.800..13768.771 rows=44579 loops=1)
Q20,1.5,->  Hash  (cost=12743373.40..12743373.40 rows=29253 width=4) (actual time=13614.748..13614.748 rows=44579 loops=1)
Q20,1.5,->  HashAggregate  (cost=12742788.34..12743080.87 rows=29253 width=4) (actual time=13568.332..13597.277 rows=44579 loops=1)
Q1,1.5,Sort  (cost=4210044.28..4210044.30 rows=6 width=20) (actual time=112669.456..112669.456 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4210044.10..4210044.20 rows=6 width=20) (actual time=112669.353..112669.357 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=1176892.86..1182723.27 rows=583041 width=175) (actual time=36657.357..37034.242 rows=381468 loops=1)
Q9,1.4,GroupAggregate  (cost=3385438.90..3385443.14 rows=121 width=46) (actual time=238241.605..241285.527 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2876.80 rows=140285 width=0) (actual time=1135.213..1135.213 rows=190697 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2911.87..41872.35 rows=140285 width=24) (actual time=1160.962..1500.306 rows=190697 loops=1)
Q9,1.0,->  Sort  (cost=2719227.39..2726830.38 rows=3041199 width=28) (actual time=109261.364..111513.014 rows=3256821 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=100097 width=4) (actual time=0.021..1259.673 rows=108458 loops=1)
Q9,1.0,->  Seq Scan on lineitem  (cost=0.00..1686912.35 rows=60765035 width=24) (actual time=0.020..18967.375 rows=60045297 loops=1)
Q9,1.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..603091.29 rows=8000000 width=12) (actual time=0.008..5928.196 rows=7999957 loops=1)
Q9,1.0,->  Hash Join  (cost=66773.21..2391747.90 rows=3041199 width=28) (actual time=1320.152..105392.783 rows=3256821 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=100097 width=4) (actual time=1319.708..1319.708 rows=108458 loops=1)
Q8,1.0,->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=31.409..995.811 rows=299838 loops=1)
Q8,1.0,->  Nested Loop  (cost=501874.48..2166191.22 rows=24252 width=38) (actual time=19835.228..26566.567 rows=24136 loops=1)
Q8,1.0,->  Nested Loop  (cost=501874.48..2159274.55 rows=24252 width=16) (actual time=19835.154..26434.393 rows=24136 loops=1)
Q8,1.0,->  Nested Loop  (cost=0.00..1648079.40 rows=401257 width=16) (actual time=0.614..5194.981 rows=397897 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..120.88 rows=31 width=20) (actual time=0.035..0.364 rows=30 loops=13246)
Q8,1.0,->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..46003.67 rows=13220 width=4) (actual time=0.513..197.975 rows=13246 loops=1)
Q8,1.0,->  Hash Join  (cost=501874.48..2152203.00 rows=24284 width=16) (actual time=19835.102..26164.708 rows=24136 loops=1)
Q8,1.0,->  Hash Join  (cost=138770.95..490390.98 rows=918680 width=8) (actual time=5166.000..19326.925 rows=911362 loops=1)
Q8,1.0,->  Hash  (cost=490390.98..490390.98 rows=918680 width=8) (actual time=19833.075..19833.075 rows=911362 loops=1)
Q8,1.0,->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=1143.743..1143.743 rows=299838 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..98591.98 rows=4593399 width=0) (actual time=3780.266..3780.266 rows=4612043 loops=1)
Q8,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=19.885..19.885 rows=59968 loops=5)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=99740.33..424948.31 rows=4593399 width=12) (actual time=4021.847..7842.700 rows=4561761 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=28.614..181.920 rows=59968 loops=5)
Q7,1.0,->  Sort  (cost=2359109.69..2359255.91 rows=58487 width=64) (actual time=84122.724..84133.277 rows=58577 loops=1)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=8) (actual time=0.016..5043.381 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=905.09..14139.26 rows=119904 width=60) (actual time=19.360..968.474 rows=119385 loops=1)
Q7,1.0,->  Hash Join  (cost=896593.27..2354478.74 rows=58487 width=64) (actual time=44653.167..83855.779 rows=58577 loops=1)
Q7,1.0,->  Hash Join  (cost=891914.27..2319640.73 rows=1464085 width=72) (actual time=44526.738..80402.787 rows=1456064 loops=1)
Q7,1.0,->  Hash Join  (cost=15638.06..489031.49 rows=1203831 width=60) (actual time=1120.794..29655.962 rows=1198434 loops=1)
Q7,1.0,->  Hash  (cost=489031.49..489031.49 rows=1203831 width=60) (actual time=30404.435..30404.435 rows=1198434 loops=1)
Q7,1.0,->  Hash  (cost=14139.26..14139.26 rows=119904 width=60) (actual time=1120.651..1120.651 rows=119385 loops=1)
Q7,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..383255.96 rows=18315713 width=0) (actual time=13353.824..13353.824 rows=18310449 loops=1)
Q7,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=17.381..17.381 rows=59692 loops=2)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=387834.89..1732236.58 rows=18315713 width=20) (actual time=14121.636..31766.916 rows=18229496 loops=1)
Q7,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=25.486..463.460 rows=59692 loops=2)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..190983.37 rows=9126854 width=0) (actual time=7794.597..7794.597 rows=9142993 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=191182.90..1466203.11 rows=798111 width=8) (actual time=8466.796..27893.613 rows=796513 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1683564.35 rows=60644435 width=16) (actual time=0.049..20386.660 rows=60044872 loops=1)
Q5,1.0,->  Nested Loop  (cost=905.09..35292.22 rows=300000 width=38) (actual time=21.615..1125.646 rows=299838 loops=1)
Q5,1.0,->  Hash Join  (cost=88745.85..392295.38 rows=457788 width=38) (actual time=3094.781..12818.190 rows=454816 loops=1)
Q5,1.0,->  Hash Join  (cost=402696.73..2445135.25 rows=73131 width=34) (actual time=13265.585..78067.326 rows=72678 loops=1)
Q5,1.0,->  Hash Join  (cost=398017.73..2403111.14 rows=1830690 width=46) (actual time=13159.335..73921.791 rows=1817812 loops=1)
Q5,1.0,->  Hash  (cost=392295.38..392295.38 rows=457788 width=38) (actual time=13158.688..13158.688 rows=454816 loops=1)
Q5,1.0,->  Hash  (cost=35292.22..35292.22 rows=300000 width=38) (actual time=1333.009..1333.009 rows=299838 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..49131.40 rows=2288941 width=0) (actual time=1642.954..1642.954 rows=2300539 loops=1)
Q5,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=20.058..20.058 rows=59968 loops=5)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=49703.63..340091.75 rows=2288941 width=8) (actual time=1761.334..5554.175 rows=2277578 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=29.692..202.361 rows=59968 loops=5)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12099.01 rows=577711 width=0) (actual time=457.423..457.423 rows=575418 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=12243.43..274937.10 rows=577711 width=20) (actual time=582.698..2065.247 rows=574264 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..444294.89 rows=7480587 width=16) (actual time=0.025..6346.218 rows=7383182 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1829719.94 rows=32208575 width=12) (actual time=0.051..27503.341 rows=31957011 loops=1)
Q3,1.0,->  Hash Join  (cost=49713.49..611812.41 rows=1494596 width=12) (actual time=683.866..25271.611 rows=1480273 loops=1)
Q3,1.0,->  Hash  (cost=611812.41..611812.41 rows=1494596 width=12) (actual time=26091.886..26091.886 rows=1480273 loops=1)
Q3,1.0,->  Hash  (cost=45967.30..45967.30 rows=299695 width=4) (actual time=683.582..683.582 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6868.19 rows=299695 width=0) (actual time=111.951..111.951 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6943.12..45967.30 rows=299695 width=4) (actual time=125.858..560.481 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.042..6979.454 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=15673.946..15673.946 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597814.20..641411.01 rows=59158 width=20) (actual time=16854.811..17628.411 rows=63790 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6556.93 rows=382801 width=0) (actual time=124.104..124.104 rows=381664 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer  (cost=6652.63..51979.15 rows=382801 width=4) (actual time=136.049..929.531 rows=381664 loops=1)
Q21,1.0,->  Seq Scan on lineitem l2  (cost=0.00..1666925.96 rows=60045096 width=8) (actual time=0.018..23334.474 rows=59985329 loops=1)
Q21,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=30) (actual time=1.191..17.633 rows=3934 loops=1)
Q21,1.0,->  Hash  (cost=2391.58..2391.58 rows=4000 width=30) (actual time=19.280..19.280 rows=3934 loops=1)
Q21,1.0,->  Hash  (cost=1666925.96..1666925.96 rows=60045096 width=8) (actual time=47531.820..47531.820 rows=59985329 loops=1)
Q21,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=0.867..0.867 rows=3934 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=34) (actual time=1.179..16.497 rows=3934 loops=1)
Q2,1.0,->  Sort  (cost=395240.86..399233.87 rows=1597205 width=168) (actual time=9553.115..10051.685 rows=1603190 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..5806.62 rows=20000 width=164) (actual time=0.053..192.554 rows=20042 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..230671.90 rows=1597205 width=168) (actual time=0.066..7654.660 rows=1603360 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=7902 width=30) (actual time=0.299..1968.685 rows=8094 loops=1)
Q20,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=22035 width=4) (actual time=0.027..1113.001 rows=21700 loops=1)
Q19,1.0,->  Nested Loop  (cost=13471.06..422682.09 rows=1021 width=8) (actual time=281.880..1938.461 rows=1065 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8392.74 rows=400027 width=0) (actual time=177.571..177.571 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4193.94 rows=199747 width=0) (actual time=70.639..70.639 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..291.93 rows=8245 width=0) (actual time=5.126..5.126 rows=8112 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.85 rows=8036 width=0) (actual time=5.626..5.626 rows=7963 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.77 rows=7930 width=0) (actual time=10.183..10.183 rows=7903 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=13471.06..37735.96 rows=10467 width=30) (actual time=281.405..529.454 rows=10359 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=16) (actual time=0.021..4278.996 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1675245.94 rows=60344794 width=8) (actual time=0.032..17274.804 rows=60045826 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1675245.94 rows=60344794 width=8) (actual time=0.030..19713.681 rows=60045826 loops=1)
Q17,1.0,->  Index Only Scan using part_p_container_p_brand_p_partkey_idx on part  (cost=0.00..7962.13 rows=2016 width=4) (actual time=0.313..49.717 rows=1979 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.058..0.603 rows=30 loops=1979)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.058..0.603 rows=30 loops=1979)
Q16,1.0,Sort  (cost=455932.10..456001.44 rows=27737 width=40) (actual time=44619.913..44623.775 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=54221.17..54221.17 rows=295856 width=40) (actual time=1297.308..1297.308 rows=296785 loops=1)
Q16,1.0,->  GroupAggregate  (cost=446243.31..453885.17 rows=27737 width=40) (actual time=43336.213..44242.415 rows=27840 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5653.71 rows=318860 width=0) (actual time=90.067..90.067 rows=319850 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5727.67..54221.17 rows=295856 width=40) (actual time=100.284..1090.966 rows=296785 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..46724.13 rows=2231330 width=0) (actual time=1739.292..1739.292 rows=2251561 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..46724.13 rows=2231330 width=0) (actual time=1293.146..1293.146 rows=2251561 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47281.96..1149359.91 rows=2231330 width=12) (actual time=2095.565..11097.349 rows=2247146 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47281.96..1149359.91 rows=2231330 width=12) (actual time=1694.634..11091.929 rows=2247146 loops=1)
Q14,1.0,->  Hash Join  (cost=101529.43..1155728.87 rows=756742 width=29) (actual time=3036.253..10286.101 rows=749921 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..15818.25 rows=756742 width=0) (actual time=585.403..585.403 rows=754446 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=16007.43..1053180.18 rows=756742 width=12) (actual time=781.794..5469.788 rows=749921 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444294.89 rows=14939173 width=8) (actual time=0.044..11074.526 rows=14853990 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..812106.35 rows=14939173 width=8) (actual time=1584.673..45985.659 rows=15354006 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..408106.27 rows=15179927 width=20) (actual time=0.029..6804.546 rows=15015000 loops=1)
Q12,1.0,->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.00..379525.24 rows=292212 width=15) (actual time=0.385..17588.054 rows=312863 loops=1)
Q12,1.0,->  Hash Join  (cost=597855.36..986512.22 rows=292212 width=27) (actual time=14421.282..33182.680 rows=312863 loops=1)
Q12,1.0,->  Hash  (cost=408106.27..408106.27 rows=15179927 width=20) (actual time=14406.219..14406.219 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=8) (actual time=1.388..942.871 rows=320720 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=12) (actual time=2.012..3791.765 rows=320720 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.897..26.429 rows=4009 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.356..12.120 rows=4009 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.480..1.480 rows=4009 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=0.961..0.961 rows=4009 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.862..24.178 rows=4009 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.332..10.811 rows=4009 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1831522.54 rows=59463039 width=20) (actual time=0.021..29353.615 rows=59003131 loops=1)
Q10,1.0,->  Sort  (cost=334636.15..336113.12 rows=590788 width=8) (actual time=3009.787..3203.674 rows=573640 loops=1)
Q10,1.0,->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.00..692737.00 rows=14980862 width=12) (actual time=0.226..20811.009 rows=14807662 loops=1)
Q10,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12685.87 rows=590788 width=0) (actual time=428.523..428.523 rows=581005 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=12833.57..278002.39 rows=590788 width=8) (actual time=534.518..2502.322 rows=573640 loops=1)
Q21,,->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.00..1.94 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=1436691)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..36.77 rows=1 width=16) (actual time=0.124..0.129 rows=0 loops=10359)
Q19,,->  BitmapOr  (cost=13471.06..13471.06 rows=10477 width=0) (actual time=278.806..278.806 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8690.15..8690.15 rows=1649 width=0) (actual time=188.551..188.551 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4488.19..4488.19 rows=792 width=0) (actual time=83.832..83.832 rows=0 loops=1)
