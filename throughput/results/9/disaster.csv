Q21,1474654.0,->  Hash Semi Join  (cost=2662417.61..4818384.42 rows=1 width=38) (actual time=46309.343..103281.697 rows=1474654 loops=1)
Q21,712118.0,->  Nested Loop  (cost=2662417.61..4818386.38 rows=1 width=34) (actual time=46309.729..118087.802 rows=712118 loops=1)
Q18,358840.6,->  GroupAggregate  (cost=10364292.78..11193214.63 rows=30142613 width=39) (actual time=114138.860..114139.331 rows=84 loops=1)
Q3,316924.7,->  Sort  (cost=2747596.61..2755519.73 rows=3169247 width=20) (actual time=74662.881..74662.883 rows=10 loops=1)
Q18,89731.6,->  Hash Join  (cost=2187351.19..2972764.33 rows=7537460 width=39) (actual time=72290.592..81073.517 rows=84 loops=1)
Q18,89731.6,->  Hash Join  (cost=2118323.19..2752987.12 rows=7537460 width=20) (actual time=71001.748..79782.069 rows=84 loops=1)
Q18,89731.6,->  Hash  (cost=2972764.33..2972764.33 rows=7537460 width=39) (actual time=81074.034..81074.034 rows=84 loops=1)
Q18,51262.9,->  Sort  (cost=10364292.78..10439649.31 rows=30142613 width=39) (actual time=114138.831..114138.922 rows=588 loops=1)
Q18,51262.9,->  Hash Join  (cost=3066982.58..5795566.29 rows=30142613 width=39) (actual time=81923.522..114134.310 rows=588 loops=1)
Q18,48743.1,->  Hash  (cost=2067142.91..2067142.91 rows=4094423 width=4) (actual time=70865.860..70865.860 rows=84 loops=1)
Q18,48743.1,->  HashAggregate  (cost=1975018.39..2026198.68 rows=4094423 width=8) (actual time=62802.453..70865.010 rows=84 loops=1)
Q21,39749.0,->  Nested Loop Anti Join  (cost=2662417.61..4818401.35 rows=1 width=26) (actual time=46309.788..132541.159 rows=39749 loops=1)
Q10,28599.4,->  Sort  (cost=1189999.69..1191429.66 rows=571988 width=175) (actual time=27659.753..27659.758 rows=20 loops=1)
Q9,24120.4,->  Sort  (cost=3504441.76..3504442.10 rows=135 width=46) (actual time=211898.180..213024.316 rows=3256257 loops=1)
Q9,24120.4,->  Nested Loop  (cost=2835508.28..3504436.99 rows=135 width=46) (actual time=99976.505..191550.552 rows=3256257 loops=1)
Q9,24120.4,->  Nested Loop  (cost=2835508.28..3504398.49 rows=135 width=24) (actual time=99976.396..178082.079 rows=3256257 loops=1)
Q9,24120.4,->  Nested Loop  (cost=2835508.28..3504131.04 rows=135 width=24) (actual time=99976.279..126487.117 rows=3256257 loops=1)
Q9,24120.4,->  Merge Join  (cost=2835508.28..3504091.72 rows=135 width=28) (actual time=99976.219..110797.732 rows=3256257 loops=1)
Q7,14709.0,GroupAggregate  (cost=2371874.85..2373787.02 rows=58836 width=64) (actual time=85314.237..85339.435 rows=4 loops=1)
Q2,4585.0,->  Merge Join  (cost=395240.92..815013.18 rows=1 width=190) (actual time=10148.707..14295.339 rows=4585 loops=1)
Q21,4029.0,->  HashAggregate  (cost=4818401.36..4818401.37 rows=1 width=26) (actual time=132674.187..132676.584 rows=4029 loops=1)
Q15,3707.0,->  Subquery Scan on revenue9  (cost=1192799.49..1192882.90 rows=3707 width=12) (actual time=30741.869..30762.918 rows=1 loops=1)
Q15,3707.0,->  Sort  (cost=1193102.65..1193111.92 rows=3707 width=12) (actual time=30762.973..30762.973 rows=1 loops=1)
Q15,3707.0,Merge Join  (cost=2369217.03..2374314.09 rows=3707 width=79) (actual time=30768.146..30768.148 rows=1 loops=1)
Q15,3707.0,->  HashAggregate  (cost=1192799.49..1192845.83 rows=3707 width=12) (actual time=30741.868..30762.916 rows=1 loops=1)
Q8,364.5,Sort  (cost=2197839.40..2197841.22 rows=729 width=38) (actual time=25725.087..25725.088 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=2197791.98..2197804.74 rows=729 width=38) (actual time=25725.005..25725.007 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=4818401.38..4818401.38 rows=1 width=26) (actual time=132681.476..132681.487 rows=100 loops=1)
Q21,100.0,Limit  (cost=4818401.38..4818401.38 rows=1 width=26) (actual time=132681.481..132681.504 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=815013.19..815013.20 rows=1 width=190) (actual time=14304.438..14304.461 rows=100 loops=1)
Q2,100.0,Limit  (cost=815013.19..815013.20 rows=1 width=190) (actual time=14304.441..14304.474 rows=100 loops=1)
Q11,35.6,Sort  (cost=135913.51..136712.11 rows=319441 width=12) (actual time=4246.178..4247.234 rows=8951 loops=1)
Q11,35.6,->  HashAggregate  (cost=52954.85..56947.86 rows=319441 width=12) (actual time=4089.678..4241.010 rows=8951 loops=1)
Q3,27.8,->  HashAggregate  (cost=2647417.86..2679110.33 rows=3169247 width=20) (actual time=74577.467..74640.754 rows=113874 loops=1)
Q15,26.9,->  HashAggregate  (cost=1176030.96..1176068.03 rows=3707 width=12) (actual time=15533.134..15595.128 rows=100000 loops=1)
Q3,10.5,->  Hash Join  (cost=624630.47..2599879.15 rows=3169247 width=20) (actual time=28119.694..74132.836 rows=300515 loops=1)
Q4,10.0,->  Hash  (cost=995198.28..995198.28 rows=1364808 width=4) (actual time=72629.241..72629.241 rows=13753444 loops=1)
Q4,10.0,->  HashAggregate  (cost=981550.20..995198.28 rows=1364808 width=4) (actual time=60419.492..69316.130 rows=13753444 loops=1)
Q15,10.0,->  Index Scan using pk_supplier on supplier  (cost=0.00..4791.46 rows=100000 width=71) (actual time=0.086..4.122 rows=9914 loops=1)
Q16,5.6,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.00..8.45 rows=10 width=4) (actual time=0.065..1.232 rows=56 loops=1)
Q5,5.0,Sort  (cost=2454299.07..2454299.13 rows=25 width=34) (actual time=76835.759..76835.760 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2454298.24..2454298.49 rows=25 width=34) (actual time=76835.655..76835.656 rows=5 loops=1)
Q4,5.0,Sort  (cost=1295010.77..1295010.78 rows=1 width=16) (actual time=85029.777..85029.778 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1295010.75..1295010.76 rows=1 width=16) (actual time=85029.620..85029.622 rows=5 loops=1)
Q21,5.0,->  Index Scan using lineitem_l_orderkey_idx on lineitem l3  (cost=0.00..7.46 rows=5 width=8) (actual time=0.019..0.019 rows=1 loops=712118)
Q13,4.3,Sort  (cost=919442.92..919443.42 rows=200 width=8) (actual time=64909.778..64909.781 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=919433.28..919435.28 rows=200 width=8) (actual time=64909.677..64909.685 rows=46 loops=1)
Q17,3.7,->  Nested Loop  (cost=140.78..399634.42 rows=19955 width=4) (actual time=1.592..1057.767 rows=5253 loops=1)
Q4,3.3,->  Hash Join  (cost=1024810.53..1294220.80 rows=157990 width=16) (actual time=73276.684..84732.093 rows=526131 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=140.78..196.77 rows=10 width=12) (actual time=0.010..0.013 rows=3 loops=1943)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..575.31 rows=1 width=8) (actual time=0.516..0.648 rows=3 loops=21733)
Q22,2.3,Sort  (cost=695372.51..695372.52 rows=3 width=20) (actual time=16654.232..16654.232 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642442.57..642442.62 rows=3 width=20) (actual time=16654.151..16654.153 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.00..49.84 rows=1 width=4) (actual time=0.066..0.097 rows=2 loops=6213)
Q20,2.0,->  Nested Loop  (cost=0.00..12734689.26 rows=29235 width=4) (actual time=1.219..15412.273 rows=59121 loops=1)
Q16,2.0,->  Sort  (cost=446717.35..448198.91 rows=592626 width=40) (actual time=47485.705..47755.853 rows=1188360 loops=1)
Q16,2.0,->  Hash Join  (cost=58009.85..389894.11 rows=592626 width=40) (actual time=1437.454..15237.747 rows=1188360 loops=1)
Q12,2.0,Sort  (cost=990761.85..990761.85 rows=1 width=27) (actual time=37118.519..37118.519 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=990761.83..990761.84 rows=1 width=27) (actual time=37118.395..37118.397 rows=2 loops=1)
Q10,2.0,->  Merge Join  (cost=331763.89..1066425.56 rows=571988 width=12) (actual time=2160.624..18123.424 rows=1149798 loops=1)
Q10,2.0,->  Hash Join  (cost=400793.46..1154759.72 rows=571988 width=175) (actual time=4950.209..23964.557 rows=1149798 loops=1)
Q10,2.0,->  Hash Join  (cost=400791.89..1146893.32 rows=571988 width=153) (actual time=4950.176..23391.987 rows=1149798 loops=1)
Q21,1.9,->  Hash Join  (cost=2441.58..1908217.52 rows=801954 width=34) (actual time=26.575..45003.870 rows=1528912 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.48..270966.48 rows=4000000 width=8) (actual time=1.317..6521.585 rows=7995520 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.00..931213.24 rows=20134787 width=4) (actual time=0.223..28231.500 rows=37927958 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1822475.46 rows=20074919 width=8) (actual time=0.019..29915.228 rows=37966584 loops=1)
Q20,1.5,Sort  (cost=12740177.87..12740180.80 rows=1169 width=51) (actual time=15730.079..15730.188 rows=1768 loops=1)
Q20,1.5,->  Nested Loop  (cost=12735712.48..12740118.31 rows=1169 width=51) (actual time=15571.403..15721.886 rows=1768 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=12735712.48..12739751.56 rows=29235 width=55) (actual time=15571.375..15717.046 rows=44755 loops=1)
Q20,1.5,->  Hash  (cost=12735347.04..12735347.04 rows=29235 width=4) (actual time=15571.314..15571.314 rows=44755 loops=1)
Q20,1.5,->  HashAggregate  (cost=12734762.34..12735054.69 rows=29235 width=4) (actual time=15534.616..15561.367 rows=44755 loops=1)
Q1,1.5,Sort  (cost=4231257.96..4231257.98 rows=6 width=20) (actual time=111139.059..111139.060 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4231257.78..4231257.88 rows=6 width=20) (actual time=111138.954..111138.958 rows=4 loops=1)
Q10,1.4,->  HashAggregate  (cost=1169059.42..1174779.30 rows=571988 width=175) (actual time=27093.803..27492.354 rows=382099 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2876.17 rows=140222 width=0) (actual time=1158.927..1158.927 rows=190555 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2911.22..41870.05 rows=140222 width=24) (actual time=1168.382..1616.032 rows=190555 loops=1)
Q9,1.2,GroupAggregate  (cost=3504441.76..3504446.49 rows=135 width=46) (actual time=211912.877..215379.631 rows=175 loops=1)
Q18,1.1,Limit  (cost=10364292.78..10364295.53 rows=100 width=39) (actual time=114138.864..114139.349 rows=84 loops=1)
Q9,1.0,->  Sort  (cost=2835508.28..2844006.69 rows=3399363 width=28) (actual time=99976.111..102316.916 rows=3256257 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=112108 width=4) (actual time=0.026..1667.722 rows=108491 loops=1)
Q9,1.0,->  Seq Scan on lineitem  (cost=0.00..1683564.35 rows=60644435 width=24) (actual time=0.030..18089.587 rows=60044872 loops=1)
Q9,1.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..603091.29 rows=8000000 width=12) (actual time=0.016..4869.131 rows=7999945 loops=1)
Q9,1.0,->  Hash Join  (cost=66923.35..2466731.22 rows=3399363 width=28) (actual time=1743.113..96738.545 rows=3256257 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=112108 width=4) (actual time=1742.840..1742.840 rows=108491 loops=1)
Q8,1.0,->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=26.763..1529.846 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=494549.32..2197298.42 rows=24678 width=38) (actual time=19993.478..25667.538 rows=24548 loops=1)
Q8,1.0,->  Nested Loop  (cost=494549.32..2190260.26 rows=24678 width=16) (actual time=19993.404..25525.926 rows=24548 loops=1)
Q8,1.0,->  Nested Loop  (cost=0.00..1686226.66 rows=408307 width=16) (actual time=0.417..4295.125 rows=402865 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..120.21 rows=31 width=20) (actual time=0.036..0.290 rows=30 loops=13407)
Q8,1.0,->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..47138.31 rows=13600 width=4) (actual time=0.327..218.766 rows=13407 loops=1)
Q8,1.0,->  Hash Join  (cost=494549.32..2183064.62 rows=24710 width=16) (actual time=19993.348..25235.130 rows=24548 loops=1)
Q8,1.0,->  Hash Join  (cost=135391.26..483190.61 rows=908697 width=8) (actual time=4312.534..19456.145 rows=913072 loops=1)
Q8,1.0,->  Hash  (cost=483190.61..483190.61 rows=908697 width=8) (actual time=19991.824..19991.824 rows=913072 loops=1)
Q8,1.0,->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=1726.988..1726.988 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..95224.77 rows=4543487 width=0) (actual time=2438.581..2438.581 rows=4561961 loops=1)
Q8,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=20.234..20.234 rows=60193 loops=5)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=96360.64..418034.94 rows=4543487 width=12) (actual time=2585.244..6585.568 rows=4557440 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=30.555..284.746 rows=60193 loops=5)
Q7,1.0,->  Sort  (cost=2371874.85..2372021.94 rows=58836 width=64) (actual time=85305.952..85309.828 rows=58419 loops=1)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=8) (actual time=0.015..5070.906 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=905.09..14139.26 rows=119904 width=60) (actual time=21.059..702.793 rows=120469 loops=1)
Q7,1.0,->  Hash Join  (cost=900632.74..2367213.74 rows=58836 width=64) (actual time=47314.816..85021.001 rows=58419 loops=1)
Q7,1.0,->  Hash Join  (cost=895953.74..2332195.86 rows=1472817 width=72) (actual time=46550.875..80956.643 rows=1464950 loops=1)
Q7,1.0,->  Hash Join  (cost=15638.06..491861.27 rows=1211027 width=60) (actual time=780.787..30005.332 rows=1206939 loops=1)
Q7,1.0,->  Hash  (cost=491861.27..491861.27 rows=1211027 width=60) (actual time=30787.454..30787.454 rows=1206939 loops=1)
Q7,1.0,->  Hash  (cost=14139.26..14139.26 rows=119904 width=60) (actual time=780.658..780.658 rows=120469 loops=1)
Q7,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..384348.40 rows=18424957 width=0) (actual time=14960.126..14960.126 rows=18410988 loops=1)
Q7,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=16.447..16.447 rows=60234 loops=2)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=388954.64..1741374.99 rows=18424957 width=20) (actual time=15762.687..31738.671 rows=18246199 loops=1)
Q7,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=24.793..333.352 rows=60234 loops=2)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..192690.88 rows=9208405 width=0) (actual time=7864.728..7864.728 rows=9159315 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=192787.44..1469642.56 rows=386254 width=8) (actual time=8502.075..29447.150 rows=381188 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1688564.46 rows=60824546 width=16) (actual time=0.030..19128.846 rows=60045033 loops=1)
Q5,1.0,->  Nested Loop  (cost=905.09..35292.22 rows=300000 width=38) (actual time=31.675..1498.549 rows=300963 loops=1)
Q5,1.0,->  Hash Join  (cost=89302.05..394137.32 rows=462865 width=38) (actual time=2856.363..12146.635 rows=457869 loops=1)
Q5,1.0,->  Hash Join  (cost=404602.13..2453558.82 rows=73942 width=34) (actual time=12544.425..76647.568 rows=73119 loops=1)
Q5,1.0,->  Hash Join  (cost=399923.13..2411120.34 rows=1851003 width=46) (actual time=12428.204..72370.899 rows=1830455 loops=1)
Q5,1.0,->  Hash  (cost=394137.32..394137.32 rows=462865 width=38) (actual time=12427.618..12427.618 rows=457869 loops=1)
Q5,1.0,->  Hash  (cost=35292.22..35292.22 rows=300000 width=38) (actual time=1726.691..1726.691 rows=300963 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..49681.25 rows=2314326 width=0) (actual time=1040.595..1040.595 rows=2313800 loops=1)
Q5,1.0,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=20.109..20.109 rows=60193 loops=5)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=50259.84..341787.73 rows=2314326 width=8) (actual time=1129.396..4178.077 rows=2284198 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=29.489..277.977 rows=60193 loops=5)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12406.43 rows=582848 width=0) (actual time=433.138..433.138 rows=577673 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=12552.15..276335.87 rows=582848 width=20) (actual time=645.529..2360.980 rows=573702 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..442089.90 rows=7278401 width=16) (actual time=0.021..6482.035 rows=7221675 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1820672.86 rows=32768894 width=12) (actual time=0.067..26112.673 rows=32665961 loops=1)
Q3,1.0,->  Hash Join  (cost=49723.39..606442.04 rows=1455074 width=12) (actual time=1279.604..25978.483 rows=1444122 loops=1)
Q3,1.0,->  Hash  (cost=606442.04..606442.04 rows=1455074 width=12) (actual time=28116.729..28116.729 rows=1444122 loops=1)
Q3,1.0,->  Hash  (cost=45974.95..45974.95 rows=299875 width=4) (actual time=1279.290..1279.290 rows=300036 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6873.54 rows=299875 width=0) (actual time=72.084..72.084 rows=300036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6948.51..45974.95 rows=299875 width=4) (actual time=81.922..980.474 rows=300036 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=4) (actual time=0.031..6236.868 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=406494.91..406494.91 rows=15119991 width=4) (actual time=14592.936..14592.936 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598406.02..641999.08 rows=59132 width=20) (actual time=15772.653..16611.624 rows=63487 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6555.61 rows=382629 width=0) (actual time=134.687..134.687 rows=381481 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer  (cost=6651.27..51973.28 rows=382629 width=4) (actual time=147.116..982.774 rows=381481 loops=1)
Q21,1.0,->  Seq Scan on lineitem l2  (cost=0.00..1671913.57 rows=60224757 width=8) (actual time=0.040..24777.461 rows=60045303 loops=1)
Q21,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=30) (actual time=1.302..25.087 rows=4029 loops=1)
Q21,1.0,->  Hash  (cost=2391.58..2391.58 rows=4000 width=30) (actual time=26.497..26.497 rows=4029 loops=1)
Q21,1.0,->  Hash  (cost=1671913.57..1671913.57 rows=60224757 width=8) (actual time=46264.682..46264.682 rows=60045303 loops=1)
Q21,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=0.973..0.973 rows=4029 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=34) (actual time=1.277..24.135 rows=4029 loops=1)
Q2,1.0,->  Sort  (cost=395240.86..399233.87 rows=1597205 width=168) (actual time=10148.268..10878.050 rows=1586835 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..5806.62 rows=20000 width=164) (actual time=0.047..211.388 rows=19837 loops=1)
Q2,1.0,->  Nested Loop  (cost=1.56..230671.90 rows=1597205 width=168) (actual time=0.057..7769.007 rows=1586960 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=7800 width=30) (actual time=0.069..1883.758 rows=7941 loops=1)
Q20,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=22021 width=4) (actual time=0.074..1269.403 rows=21733 loops=1)
Q19,1.0,->  Nested Loop  (cost=13471.11..426606.87 rows=1030 width=8) (actual time=143.806..1110.901 rows=1119 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8392.74 rows=400027 width=0) (actual time=75.337..75.337 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4193.94 rows=199747 width=0) (actual time=50.267..50.267 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..291.17 rows=8168 width=0) (actual time=3.393..3.393 rows=8073 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.61 rows=8112 width=0) (actual time=3.623..3.623 rows=8078 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.69 rows=7922 width=0) (actual time=3.754..3.754 rows=8101 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=13471.11..37891.78 rows=10571 width=30) (actual time=143.643..293.969 rows=10511 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=16) (actual time=0.009..4338.547 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1673592.26 rows=60285226 width=8) (actual time=0.075..19002.476 rows=60046221 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1673592.26 rows=60285226 width=8) (actual time=0.012..18650.368 rows=60046221 loops=1)
Q17,1.0,->  Index Only Scan using part_p_container_p_brand_p_partkey_idx on part  (cost=0.00..7861.65 rows=1990 width=4) (actual time=0.400..42.440 rows=1943 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.053..0.488 rows=30 loops=1943)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.69 rows=31 width=4) (actual time=0.053..0.488 rows=30 loops=1943)
Q16,1.0,Sort  (cost=456464.31..456534.06 rows=27900 width=40) (actual time=48759.870..48766.004 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=54281.41..54281.41 rows=297597 width=40) (actual time=1435.869..1435.869 rows=297267 loops=1)
Q16,1.0,->  GroupAggregate  (cost=446717.35..454404.17 rows=27900 width=40) (actual time=47485.826..48372.879 rows=27840 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5667.51 rows=320700 width=0) (actual time=126.429..126.429 rows=320330 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5741.91..54281.41 rows=297597 width=40) (actual time=145.676..1210.100 rows=297267 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..46720.88 rows=2235805 width=0) (actual time=1732.504..1732.504 rows=2263501 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..46720.88 rows=2235805 width=0) (actual time=1316.446..1316.446 rows=2263501 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47279.83..1153672.91 rows=2235805 width=12) (actual time=2171.610..11527.512 rows=2250161 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47279.83..1153672.91 rows=2235805 width=12) (actual time=1613.915..11278.460 rows=2250161 loops=1)
Q14,1.0,->  Hash Join  (cost=101630.07..1164150.51 rows=764219 width=29) (actual time=3548.046..11862.227 rows=750330 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..15917.02 rows=764219 width=0) (actual time=503.917..503.917 rows=760104 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=16108.07..1061433.58 rows=764219 width=12) (actual time=915.432..6425.939 rows=750330 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..441649.60 rows=14850227 width=8) (actual time=0.037..9654.996 rows=14853941 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..807682.14 rows=14850227 width=8) (actual time=1471.491..44938.641 rows=15353957 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=20) (actual time=0.018..6824.858 rows=15015000 loops=1)
Q12,1.0,->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.00..379150.51 rows=294279 width=15) (actual time=0.566..20814.289 rows=313625 loops=1)
Q12,1.0,->  Hash Join  (cost=597265.22..985611.94 rows=294279 width=27) (actual time=14317.459..36491.495 rows=313625 loops=1)
Q12,1.0,->  Hash  (cost=407703.43..407703.43 rows=15164943 width=20) (actual time=14306.301..14306.301 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=8) (actual time=1.036..564.270 rows=323520 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..47364.63 rows=319441 width=12) (actual time=2.068..3058.537 rows=323520 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.959..22.459 rows=4044 loops=1)
Q11,1.0,->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4) (actual time=1.014..7.830 rows=4044 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=1.567..1.567 rows=4044 loops=1)
Q11,1.0,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0) (actual time=0.711..0.711 rows=4044 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=1.925..20.791 rows=4044 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8) (actual time=0.998..6.998 rows=4044 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1831522.54 rows=59993381 width=20) (actual time=0.028..28725.288 rows=59516660 loops=1)
Q10,1.0,->  Sort  (cost=331756.39..333206.43 rows=580015 width=8) (actual time=2160.487..2312.383 rows=574833 loops=1)
Q10,1.0,->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.00..688809.44 rows=14895917 width=12) (actual time=0.112..13107.062 rows=14822923 loops=1)
Q10,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12346.10 rows=580015 width=0) (actual time=199.291..199.291 rows=578357 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=12491.11..276232.33 rows=580015 width=8) (actual time=277.482..1887.385 rows=574833 loops=1)
Q21,,->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.00..1.95 rows=1 width=4) (actual time=0.009..0.009 rows=0 loops=1474654)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..36.76 rows=1 width=16) (actual time=0.071..0.074 rows=0 loops=10511)
Q19,,->  BitmapOr  (cost=13471.11..13471.11 rows=10582 width=0) (actual time=141.772..141.772 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8688.88..8688.88 rows=1622 width=0) (actual time=81.151..81.151 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4488.16..4488.16 rows=791 width=0) (actual time=56.789..56.789 rows=0 loops=1)
